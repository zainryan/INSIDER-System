// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module step_047 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        app_input_data_V_data_V_dout,
        app_input_data_V_data_V_empty_n,
        app_input_data_V_data_V_read,
        app_input_data_V_len_dout,
        app_input_data_V_len_empty_n,
        app_input_data_V_len_read,
        app_input_data_V_eop_dout,
        app_input_data_V_eop_empty_n,
        app_input_data_V_eop_read,
        pline_0_address0,
        pline_0_ce0,
        pline_0_we0,
        pline_0_d0,
        pline_1_address0,
        pline_1_ce0,
        pline_1_we0,
        pline_1_d0,
        pline_2_address0,
        pline_2_ce0,
        pline_2_we0,
        pline_2_d0,
        pline_3_address0,
        pline_3_ce0,
        pline_3_we0,
        pline_3_d0,
        pline_4_address0,
        pline_4_ce0,
        pline_4_we0,
        pline_4_d0,
        pline_5_address0,
        pline_5_ce0,
        pline_5_we0,
        pline_5_d0,
        pline_6_address0,
        pline_6_ce0,
        pline_6_we0,
        pline_6_d0,
        pline_7_address0,
        pline_7_ce0,
        pline_7_we0,
        pline_7_d0,
        pline_8_address0,
        pline_8_ce0,
        pline_8_we0,
        pline_8_d0,
        pline_9_address0,
        pline_9_ce0,
        pline_9_we0,
        pline_9_d0,
        pline_10_address0,
        pline_10_ce0,
        pline_10_we0,
        pline_10_d0,
        pline_11_address0,
        pline_11_ce0,
        pline_11_we0,
        pline_11_d0,
        pline_12_address0,
        pline_12_ce0,
        pline_12_we0,
        pline_12_d0,
        pline_13_address0,
        pline_13_ce0,
        pline_13_we0,
        pline_13_d0,
        pline_14_address0,
        pline_14_ce0,
        pline_14_we0,
        pline_14_d0,
        pline_15_address0,
        pline_15_ce0,
        pline_15_we0,
        pline_15_d0,
        pline_16_address0,
        pline_16_ce0,
        pline_16_we0,
        pline_16_d0,
        pline_17_address0,
        pline_17_ce0,
        pline_17_we0,
        pline_17_d0,
        pline_18_address0,
        pline_18_ce0,
        pline_18_we0,
        pline_18_d0,
        pline_19_address0,
        pline_19_ce0,
        pline_19_we0,
        pline_19_d0,
        pline_20_address0,
        pline_20_ce0,
        pline_20_we0,
        pline_20_d0,
        pline_21_address0,
        pline_21_ce0,
        pline_21_we0,
        pline_21_d0,
        pline_22_address0,
        pline_22_ce0,
        pline_22_we0,
        pline_22_d0,
        pline_23_address0,
        pline_23_ce0,
        pline_23_we0,
        pline_23_d0,
        pline_24_address0,
        pline_24_ce0,
        pline_24_we0,
        pline_24_d0,
        pline_25_address0,
        pline_25_ce0,
        pline_25_we0,
        pline_25_d0,
        pline_26_address0,
        pline_26_ce0,
        pline_26_we0,
        pline_26_d0,
        pline_27_address0,
        pline_27_ce0,
        pline_27_we0,
        pline_27_d0,
        pline_28_address0,
        pline_28_ce0,
        pline_28_we0,
        pline_28_d0,
        pline_29_address0,
        pline_29_ce0,
        pline_29_we0,
        pline_29_d0,
        pline_30_address0,
        pline_30_ce0,
        pline_30_we0,
        pline_30_d0,
        pline_31_address0,
        pline_31_ce0,
        pline_31_we0,
        pline_31_d0,
        n,
        image_height,
        n_out_din,
        n_out_full_n,
        n_out_write,
        image_height_out_din,
        image_height_out_full_n,
        image_height_out_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [511:0] app_input_data_V_data_V_dout;
input   app_input_data_V_data_V_empty_n;
output   app_input_data_V_data_V_read;
input  [15:0] app_input_data_V_len_dout;
input   app_input_data_V_len_empty_n;
output   app_input_data_V_len_read;
input   app_input_data_V_eop_dout;
input   app_input_data_V_eop_empty_n;
output   app_input_data_V_eop_read;
output  [3:0] pline_0_address0;
output   pline_0_ce0;
output   pline_0_we0;
output  [15:0] pline_0_d0;
output  [3:0] pline_1_address0;
output   pline_1_ce0;
output   pline_1_we0;
output  [15:0] pline_1_d0;
output  [3:0] pline_2_address0;
output   pline_2_ce0;
output   pline_2_we0;
output  [15:0] pline_2_d0;
output  [3:0] pline_3_address0;
output   pline_3_ce0;
output   pline_3_we0;
output  [15:0] pline_3_d0;
output  [3:0] pline_4_address0;
output   pline_4_ce0;
output   pline_4_we0;
output  [15:0] pline_4_d0;
output  [3:0] pline_5_address0;
output   pline_5_ce0;
output   pline_5_we0;
output  [15:0] pline_5_d0;
output  [3:0] pline_6_address0;
output   pline_6_ce0;
output   pline_6_we0;
output  [15:0] pline_6_d0;
output  [3:0] pline_7_address0;
output   pline_7_ce0;
output   pline_7_we0;
output  [15:0] pline_7_d0;
output  [3:0] pline_8_address0;
output   pline_8_ce0;
output   pline_8_we0;
output  [15:0] pline_8_d0;
output  [3:0] pline_9_address0;
output   pline_9_ce0;
output   pline_9_we0;
output  [15:0] pline_9_d0;
output  [3:0] pline_10_address0;
output   pline_10_ce0;
output   pline_10_we0;
output  [15:0] pline_10_d0;
output  [3:0] pline_11_address0;
output   pline_11_ce0;
output   pline_11_we0;
output  [15:0] pline_11_d0;
output  [3:0] pline_12_address0;
output   pline_12_ce0;
output   pline_12_we0;
output  [15:0] pline_12_d0;
output  [3:0] pline_13_address0;
output   pline_13_ce0;
output   pline_13_we0;
output  [15:0] pline_13_d0;
output  [3:0] pline_14_address0;
output   pline_14_ce0;
output   pline_14_we0;
output  [15:0] pline_14_d0;
output  [3:0] pline_15_address0;
output   pline_15_ce0;
output   pline_15_we0;
output  [15:0] pline_15_d0;
output  [3:0] pline_16_address0;
output   pline_16_ce0;
output   pline_16_we0;
output  [15:0] pline_16_d0;
output  [3:0] pline_17_address0;
output   pline_17_ce0;
output   pline_17_we0;
output  [15:0] pline_17_d0;
output  [3:0] pline_18_address0;
output   pline_18_ce0;
output   pline_18_we0;
output  [15:0] pline_18_d0;
output  [3:0] pline_19_address0;
output   pline_19_ce0;
output   pline_19_we0;
output  [15:0] pline_19_d0;
output  [3:0] pline_20_address0;
output   pline_20_ce0;
output   pline_20_we0;
output  [15:0] pline_20_d0;
output  [3:0] pline_21_address0;
output   pline_21_ce0;
output   pline_21_we0;
output  [15:0] pline_21_d0;
output  [3:0] pline_22_address0;
output   pline_22_ce0;
output   pline_22_we0;
output  [15:0] pline_22_d0;
output  [3:0] pline_23_address0;
output   pline_23_ce0;
output   pline_23_we0;
output  [15:0] pline_23_d0;
output  [3:0] pline_24_address0;
output   pline_24_ce0;
output   pline_24_we0;
output  [15:0] pline_24_d0;
output  [3:0] pline_25_address0;
output   pline_25_ce0;
output   pline_25_we0;
output  [15:0] pline_25_d0;
output  [3:0] pline_26_address0;
output   pline_26_ce0;
output   pline_26_we0;
output  [15:0] pline_26_d0;
output  [3:0] pline_27_address0;
output   pline_27_ce0;
output   pline_27_we0;
output  [15:0] pline_27_d0;
output  [3:0] pline_28_address0;
output   pline_28_ce0;
output   pline_28_we0;
output  [15:0] pline_28_d0;
output  [3:0] pline_29_address0;
output   pline_29_ce0;
output   pline_29_we0;
output  [15:0] pline_29_d0;
output  [3:0] pline_30_address0;
output   pline_30_ce0;
output   pline_30_we0;
output  [15:0] pline_30_d0;
output  [3:0] pline_31_address0;
output   pline_31_ce0;
output   pline_31_we0;
output  [15:0] pline_31_d0;
input  [26:0] n;
input  [31:0] image_height;
output  [26:0] n_out_din;
input   n_out_full_n;
output   n_out_write;
output  [31:0] image_height_out_din;
input   image_height_out_full_n;
output   image_height_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg pline_0_ce0;
reg pline_0_we0;
reg pline_1_ce0;
reg pline_1_we0;
reg pline_2_ce0;
reg pline_2_we0;
reg pline_3_ce0;
reg pline_3_we0;
reg pline_4_ce0;
reg pline_4_we0;
reg pline_5_ce0;
reg pline_5_we0;
reg pline_6_ce0;
reg pline_6_we0;
reg pline_7_ce0;
reg pline_7_we0;
reg pline_8_ce0;
reg pline_8_we0;
reg pline_9_ce0;
reg pline_9_we0;
reg pline_10_ce0;
reg pline_10_we0;
reg pline_11_ce0;
reg pline_11_we0;
reg pline_12_ce0;
reg pline_12_we0;
reg pline_13_ce0;
reg pline_13_we0;
reg pline_14_ce0;
reg pline_14_we0;
reg pline_15_ce0;
reg pline_15_we0;
reg pline_16_ce0;
reg pline_16_we0;
reg pline_17_ce0;
reg pline_17_we0;
reg pline_18_ce0;
reg pline_18_we0;
reg pline_19_ce0;
reg pline_19_we0;
reg pline_20_ce0;
reg pline_20_we0;
reg pline_21_ce0;
reg pline_21_we0;
reg pline_22_ce0;
reg pline_22_we0;
reg pline_23_ce0;
reg pline_23_we0;
reg pline_24_ce0;
reg pline_24_we0;
reg pline_25_ce0;
reg pline_25_we0;
reg pline_26_ce0;
reg pline_26_we0;
reg pline_27_ce0;
reg pline_27_we0;
reg pline_28_ce0;
reg pline_28_we0;
reg pline_29_ce0;
reg pline_29_we0;
reg pline_30_ce0;
reg pline_30_we0;
reg pline_31_ce0;
reg pline_31_we0;
reg n_out_write;
reg image_height_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    app_input_data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_i_i_reg_1274;
reg    app_input_data_V_len_blk_n;
reg    app_input_data_V_eop_blk_n;
reg    n_out_blk_n;
reg    image_height_out_blk_n;
reg   [4:0] i_i_i_reg_672;
reg   [4:0] ap_reg_pp0_iter1_i_i_i_reg_672;
wire    ap_block_state2_pp0_stage0_iter0;
wire    app_input_data_V_len0_status;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_i_i_fu_684_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_i_i_reg_1274;
wire   [4:0] i_fu_690_p2;
reg   [4:0] i_reg_1278;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire   [15:0] grp_reg_unsigned_short_s_fu_704_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_704_ap_return;
reg    grp_reg_unsigned_short_s_fu_704_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_721_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_721_ap_return;
reg    grp_reg_unsigned_short_s_fu_721_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_738_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_738_ap_return;
reg    grp_reg_unsigned_short_s_fu_738_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_755_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_755_ap_return;
reg    grp_reg_unsigned_short_s_fu_755_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_772_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_772_ap_return;
reg    grp_reg_unsigned_short_s_fu_772_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_789_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_789_ap_return;
reg    grp_reg_unsigned_short_s_fu_789_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_806_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_806_ap_return;
reg    grp_reg_unsigned_short_s_fu_806_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_823_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_823_ap_return;
reg    grp_reg_unsigned_short_s_fu_823_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_840_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_840_ap_return;
reg    grp_reg_unsigned_short_s_fu_840_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_857_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_857_ap_return;
reg    grp_reg_unsigned_short_s_fu_857_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_874_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_874_ap_return;
reg    grp_reg_unsigned_short_s_fu_874_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_891_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_891_ap_return;
reg    grp_reg_unsigned_short_s_fu_891_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_908_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_908_ap_return;
reg    grp_reg_unsigned_short_s_fu_908_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_925_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_925_ap_return;
reg    grp_reg_unsigned_short_s_fu_925_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_942_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_942_ap_return;
reg    grp_reg_unsigned_short_s_fu_942_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_959_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_959_ap_return;
reg    grp_reg_unsigned_short_s_fu_959_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_976_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_976_ap_return;
reg    grp_reg_unsigned_short_s_fu_976_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_993_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_993_ap_return;
reg    grp_reg_unsigned_short_s_fu_993_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1010_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1010_ap_return;
reg    grp_reg_unsigned_short_s_fu_1010_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1027_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1027_ap_return;
reg    grp_reg_unsigned_short_s_fu_1027_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1044_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1044_ap_return;
reg    grp_reg_unsigned_short_s_fu_1044_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1061_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1061_ap_return;
reg    grp_reg_unsigned_short_s_fu_1061_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1078_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1078_ap_return;
reg    grp_reg_unsigned_short_s_fu_1078_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1095_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1095_ap_return;
reg    grp_reg_unsigned_short_s_fu_1095_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1112_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1112_ap_return;
reg    grp_reg_unsigned_short_s_fu_1112_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1129_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1129_ap_return;
reg    grp_reg_unsigned_short_s_fu_1129_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1146_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1146_ap_return;
reg    grp_reg_unsigned_short_s_fu_1146_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1163_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1163_ap_return;
reg    grp_reg_unsigned_short_s_fu_1163_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1180_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1180_ap_return;
reg    grp_reg_unsigned_short_s_fu_1180_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1197_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1197_ap_return;
reg    grp_reg_unsigned_short_s_fu_1197_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1214_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1214_ap_return;
reg    grp_reg_unsigned_short_s_fu_1214_ap_ce;
wire   [15:0] grp_reg_unsigned_short_s_fu_1231_in_r;
wire   [15:0] grp_reg_unsigned_short_s_fu_1231_ap_return;
reg    grp_reg_unsigned_short_s_fu_1231_ap_ce;
reg   [4:0] ap_phi_mux_i_i_i_phi_fu_676_p4;
wire   [63:0] tmp_i_i_75_fu_1238_p1;
reg    app_input_data_V_len0_update;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_704(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_704_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_704_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_704_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_721(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_721_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_721_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_721_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_738(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_738_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_738_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_738_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_755(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_755_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_755_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_755_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_772(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_772_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_772_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_772_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_789(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_789_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_789_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_789_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_806(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_806_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_806_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_806_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_823(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_823_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_823_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_823_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_840(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_840_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_840_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_840_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_857(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_857_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_857_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_857_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_874(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_874_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_874_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_874_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_891(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_891_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_891_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_891_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_908(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_908_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_908_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_908_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_925(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_925_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_925_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_925_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_942(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_942_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_942_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_942_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_959(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_959_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_959_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_959_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_976(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_976_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_976_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_976_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_993(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_993_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_993_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_993_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1010(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1010_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1010_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1010_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1027(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1027_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1027_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1027_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1044(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1044_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1044_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1044_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1061(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1061_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1061_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1061_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1078(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1078_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1078_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1078_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1095(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1095_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1095_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1095_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1112_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1112_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1112_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1129(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1129_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1129_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1129_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1146_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1146_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1146_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1163(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1163_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1163_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1163_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1180(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1180_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1180_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1180_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1197(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1197_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1197_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1197_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1214_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1214_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1214_ap_ce)
);

reg_unsigned_short_s grp_reg_unsigned_short_s_fu_1231(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .in_r(grp_reg_unsigned_short_s_fu_1231_in_r),
    .ap_return(grp_reg_unsigned_short_s_fu_1231_ap_return),
    .ap_ce(grp_reg_unsigned_short_s_fu_1231_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_i_i_reg_672 <= i_reg_1278;
    end else if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_i_i_reg_672 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_i_i_i_reg_672 <= i_i_i_reg_672;
        ap_reg_pp0_iter1_tmp_i_i_reg_1274 <= tmp_i_i_reg_1274;
        tmp_i_i_reg_1274 <= tmp_i_i_fu_684_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1278 <= i_fu_690_p2;
    end
end

always @ (*) begin
    if ((tmp_i_i_fu_684_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_i_i_phi_fu_676_p4 = i_reg_1278;
    end else begin
        ap_phi_mux_i_i_i_phi_fu_676_p4 = i_i_i_reg_672;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        app_input_data_V_data_V_blk_n = app_input_data_V_data_V_empty_n;
    end else begin
        app_input_data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        app_input_data_V_eop_blk_n = app_input_data_V_eop_empty_n;
    end else begin
        app_input_data_V_eop_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        app_input_data_V_len0_update = 1'b1;
    end else begin
        app_input_data_V_len0_update = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_i_reg_1274 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        app_input_data_V_len_blk_n = app_input_data_V_len_empty_n;
    end else begin
        app_input_data_V_len_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1010_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1010_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1027_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1027_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1044_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1044_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1061_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1061_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1078_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1078_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1095_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1095_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1112_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1112_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1129_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1129_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1146_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1146_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1163_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1163_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1180_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1180_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1197_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1197_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1214_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1214_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_1231_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_1231_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_704_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_704_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_721_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_721_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_738_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_738_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_755_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_755_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_772_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_772_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_789_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_789_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_806_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_806_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_823_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_823_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_840_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_840_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_857_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_857_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_874_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_874_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_891_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_891_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_908_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_908_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_925_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_925_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_942_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_942_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_959_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_959_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_976_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_976_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_reg_unsigned_short_s_fu_993_ap_ce = 1'b1;
    end else begin
        grp_reg_unsigned_short_s_fu_993_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        image_height_out_blk_n = image_height_out_full_n;
    end else begin
        image_height_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        image_height_out_write = 1'b1;
    end else begin
        image_height_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_out_blk_n = n_out_full_n;
    end else begin
        n_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        n_out_write = 1'b1;
    end else begin
        n_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_0_ce0 = 1'b1;
    end else begin
        pline_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_0_we0 = 1'b1;
    end else begin
        pline_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_10_ce0 = 1'b1;
    end else begin
        pline_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_10_we0 = 1'b1;
    end else begin
        pline_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_11_ce0 = 1'b1;
    end else begin
        pline_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_11_we0 = 1'b1;
    end else begin
        pline_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_12_ce0 = 1'b1;
    end else begin
        pline_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_12_we0 = 1'b1;
    end else begin
        pline_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_13_ce0 = 1'b1;
    end else begin
        pline_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_13_we0 = 1'b1;
    end else begin
        pline_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_14_ce0 = 1'b1;
    end else begin
        pline_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_14_we0 = 1'b1;
    end else begin
        pline_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_15_ce0 = 1'b1;
    end else begin
        pline_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_15_we0 = 1'b1;
    end else begin
        pline_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_16_ce0 = 1'b1;
    end else begin
        pline_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_16_we0 = 1'b1;
    end else begin
        pline_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_17_ce0 = 1'b1;
    end else begin
        pline_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_17_we0 = 1'b1;
    end else begin
        pline_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_18_ce0 = 1'b1;
    end else begin
        pline_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_18_we0 = 1'b1;
    end else begin
        pline_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_19_ce0 = 1'b1;
    end else begin
        pline_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_19_we0 = 1'b1;
    end else begin
        pline_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_1_ce0 = 1'b1;
    end else begin
        pline_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_1_we0 = 1'b1;
    end else begin
        pline_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_20_ce0 = 1'b1;
    end else begin
        pline_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_20_we0 = 1'b1;
    end else begin
        pline_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_21_ce0 = 1'b1;
    end else begin
        pline_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_21_we0 = 1'b1;
    end else begin
        pline_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_22_ce0 = 1'b1;
    end else begin
        pline_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_22_we0 = 1'b1;
    end else begin
        pline_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_23_ce0 = 1'b1;
    end else begin
        pline_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_23_we0 = 1'b1;
    end else begin
        pline_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_24_ce0 = 1'b1;
    end else begin
        pline_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_24_we0 = 1'b1;
    end else begin
        pline_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_25_ce0 = 1'b1;
    end else begin
        pline_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_25_we0 = 1'b1;
    end else begin
        pline_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_26_ce0 = 1'b1;
    end else begin
        pline_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_26_we0 = 1'b1;
    end else begin
        pline_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_27_ce0 = 1'b1;
    end else begin
        pline_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_27_we0 = 1'b1;
    end else begin
        pline_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_28_ce0 = 1'b1;
    end else begin
        pline_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_28_we0 = 1'b1;
    end else begin
        pline_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_29_ce0 = 1'b1;
    end else begin
        pline_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_29_we0 = 1'b1;
    end else begin
        pline_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_2_ce0 = 1'b1;
    end else begin
        pline_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_2_we0 = 1'b1;
    end else begin
        pline_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_30_ce0 = 1'b1;
    end else begin
        pline_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_30_we0 = 1'b1;
    end else begin
        pline_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_31_ce0 = 1'b1;
    end else begin
        pline_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_31_we0 = 1'b1;
    end else begin
        pline_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_3_ce0 = 1'b1;
    end else begin
        pline_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_3_we0 = 1'b1;
    end else begin
        pline_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_4_ce0 = 1'b1;
    end else begin
        pline_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_4_we0 = 1'b1;
    end else begin
        pline_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_5_ce0 = 1'b1;
    end else begin
        pline_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_5_we0 = 1'b1;
    end else begin
        pline_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_6_ce0 = 1'b1;
    end else begin
        pline_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_6_we0 = 1'b1;
    end else begin
        pline_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_7_ce0 = 1'b1;
    end else begin
        pline_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_7_we0 = 1'b1;
    end else begin
        pline_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_8_ce0 = 1'b1;
    end else begin
        pline_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_8_we0 = 1'b1;
    end else begin
        pline_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_9_ce0 = 1'b1;
    end else begin
        pline_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_reg_pp0_iter1_tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pline_9_we0 = 1'b1;
    end else begin
        pline_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_i_i_fu_684_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_i_i_fu_684_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((app_input_data_V_len0_status == 1'b0) & (tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((app_input_data_V_len0_status == 1'b0) & (tmp_i_i_reg_1274 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (image_height_out_full_n == 1'b0) | (n_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((app_input_data_V_len0_status == 1'b0) & (tmp_i_i_reg_1274 == 1'd0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign app_input_data_V_data_V_read = app_input_data_V_len0_update;

assign app_input_data_V_eop_read = app_input_data_V_len0_update;

assign app_input_data_V_len0_status = (app_input_data_V_len_empty_n & app_input_data_V_eop_empty_n & app_input_data_V_data_V_empty_n);

assign app_input_data_V_len_read = app_input_data_V_len0_update;

assign grp_reg_unsigned_short_s_fu_1010_in_r = {{app_input_data_V_data_V_dout[303:288]}};

assign grp_reg_unsigned_short_s_fu_1027_in_r = {{app_input_data_V_data_V_dout[319:304]}};

assign grp_reg_unsigned_short_s_fu_1044_in_r = {{app_input_data_V_data_V_dout[335:320]}};

assign grp_reg_unsigned_short_s_fu_1061_in_r = {{app_input_data_V_data_V_dout[351:336]}};

assign grp_reg_unsigned_short_s_fu_1078_in_r = {{app_input_data_V_data_V_dout[367:352]}};

assign grp_reg_unsigned_short_s_fu_1095_in_r = {{app_input_data_V_data_V_dout[383:368]}};

assign grp_reg_unsigned_short_s_fu_1112_in_r = {{app_input_data_V_data_V_dout[399:384]}};

assign grp_reg_unsigned_short_s_fu_1129_in_r = {{app_input_data_V_data_V_dout[415:400]}};

assign grp_reg_unsigned_short_s_fu_1146_in_r = {{app_input_data_V_data_V_dout[431:416]}};

assign grp_reg_unsigned_short_s_fu_1163_in_r = {{app_input_data_V_data_V_dout[447:432]}};

assign grp_reg_unsigned_short_s_fu_1180_in_r = {{app_input_data_V_data_V_dout[463:448]}};

assign grp_reg_unsigned_short_s_fu_1197_in_r = {{app_input_data_V_data_V_dout[479:464]}};

assign grp_reg_unsigned_short_s_fu_1214_in_r = {{app_input_data_V_data_V_dout[495:480]}};

assign grp_reg_unsigned_short_s_fu_1231_in_r = {{app_input_data_V_data_V_dout[511:496]}};

assign grp_reg_unsigned_short_s_fu_704_in_r = app_input_data_V_data_V_dout[15:0];

assign grp_reg_unsigned_short_s_fu_721_in_r = {{app_input_data_V_data_V_dout[31:16]}};

assign grp_reg_unsigned_short_s_fu_738_in_r = {{app_input_data_V_data_V_dout[47:32]}};

assign grp_reg_unsigned_short_s_fu_755_in_r = {{app_input_data_V_data_V_dout[63:48]}};

assign grp_reg_unsigned_short_s_fu_772_in_r = {{app_input_data_V_data_V_dout[79:64]}};

assign grp_reg_unsigned_short_s_fu_789_in_r = {{app_input_data_V_data_V_dout[95:80]}};

assign grp_reg_unsigned_short_s_fu_806_in_r = {{app_input_data_V_data_V_dout[111:96]}};

assign grp_reg_unsigned_short_s_fu_823_in_r = {{app_input_data_V_data_V_dout[127:112]}};

assign grp_reg_unsigned_short_s_fu_840_in_r = {{app_input_data_V_data_V_dout[143:128]}};

assign grp_reg_unsigned_short_s_fu_857_in_r = {{app_input_data_V_data_V_dout[159:144]}};

assign grp_reg_unsigned_short_s_fu_874_in_r = {{app_input_data_V_data_V_dout[175:160]}};

assign grp_reg_unsigned_short_s_fu_891_in_r = {{app_input_data_V_data_V_dout[191:176]}};

assign grp_reg_unsigned_short_s_fu_908_in_r = {{app_input_data_V_data_V_dout[207:192]}};

assign grp_reg_unsigned_short_s_fu_925_in_r = {{app_input_data_V_data_V_dout[223:208]}};

assign grp_reg_unsigned_short_s_fu_942_in_r = {{app_input_data_V_data_V_dout[239:224]}};

assign grp_reg_unsigned_short_s_fu_959_in_r = {{app_input_data_V_data_V_dout[255:240]}};

assign grp_reg_unsigned_short_s_fu_976_in_r = {{app_input_data_V_data_V_dout[271:256]}};

assign grp_reg_unsigned_short_s_fu_993_in_r = {{app_input_data_V_data_V_dout[287:272]}};

assign i_fu_690_p2 = (ap_phi_mux_i_i_i_phi_fu_676_p4 + 5'd1);

assign image_height_out_din = image_height;

assign n_out_din = n;

assign pline_0_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_0_d0 = grp_reg_unsigned_short_s_fu_704_ap_return;

assign pline_10_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_10_d0 = grp_reg_unsigned_short_s_fu_874_ap_return;

assign pline_11_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_11_d0 = grp_reg_unsigned_short_s_fu_891_ap_return;

assign pline_12_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_12_d0 = grp_reg_unsigned_short_s_fu_908_ap_return;

assign pline_13_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_13_d0 = grp_reg_unsigned_short_s_fu_925_ap_return;

assign pline_14_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_14_d0 = grp_reg_unsigned_short_s_fu_942_ap_return;

assign pline_15_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_15_d0 = grp_reg_unsigned_short_s_fu_959_ap_return;

assign pline_16_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_16_d0 = grp_reg_unsigned_short_s_fu_976_ap_return;

assign pline_17_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_17_d0 = grp_reg_unsigned_short_s_fu_993_ap_return;

assign pline_18_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_18_d0 = grp_reg_unsigned_short_s_fu_1010_ap_return;

assign pline_19_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_19_d0 = grp_reg_unsigned_short_s_fu_1027_ap_return;

assign pline_1_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_1_d0 = grp_reg_unsigned_short_s_fu_721_ap_return;

assign pline_20_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_20_d0 = grp_reg_unsigned_short_s_fu_1044_ap_return;

assign pline_21_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_21_d0 = grp_reg_unsigned_short_s_fu_1061_ap_return;

assign pline_22_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_22_d0 = grp_reg_unsigned_short_s_fu_1078_ap_return;

assign pline_23_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_23_d0 = grp_reg_unsigned_short_s_fu_1095_ap_return;

assign pline_24_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_24_d0 = grp_reg_unsigned_short_s_fu_1112_ap_return;

assign pline_25_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_25_d0 = grp_reg_unsigned_short_s_fu_1129_ap_return;

assign pline_26_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_26_d0 = grp_reg_unsigned_short_s_fu_1146_ap_return;

assign pline_27_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_27_d0 = grp_reg_unsigned_short_s_fu_1163_ap_return;

assign pline_28_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_28_d0 = grp_reg_unsigned_short_s_fu_1180_ap_return;

assign pline_29_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_29_d0 = grp_reg_unsigned_short_s_fu_1197_ap_return;

assign pline_2_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_2_d0 = grp_reg_unsigned_short_s_fu_738_ap_return;

assign pline_30_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_30_d0 = grp_reg_unsigned_short_s_fu_1214_ap_return;

assign pline_31_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_31_d0 = grp_reg_unsigned_short_s_fu_1231_ap_return;

assign pline_3_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_3_d0 = grp_reg_unsigned_short_s_fu_755_ap_return;

assign pline_4_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_4_d0 = grp_reg_unsigned_short_s_fu_772_ap_return;

assign pline_5_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_5_d0 = grp_reg_unsigned_short_s_fu_789_ap_return;

assign pline_6_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_6_d0 = grp_reg_unsigned_short_s_fu_806_ap_return;

assign pline_7_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_7_d0 = grp_reg_unsigned_short_s_fu_823_ap_return;

assign pline_8_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_8_d0 = grp_reg_unsigned_short_s_fu_840_ap_return;

assign pline_9_address0 = tmp_i_i_75_fu_1238_p1;

assign pline_9_d0 = grp_reg_unsigned_short_s_fu_857_ap_return;

assign tmp_i_i_75_fu_1238_p1 = ap_reg_pp0_iter1_i_i_i_reg_672;

assign tmp_i_i_fu_684_p2 = ((ap_phi_mux_i_i_i_phi_fu_676_p4 == 5'd16) ? 1'b1 : 1'b0);

endmodule //step_047
