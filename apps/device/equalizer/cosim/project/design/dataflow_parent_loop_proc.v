// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dataflow_parent_loop_proc (
        tmp_cast,
        app_input_data_V_data_V_dout,
        app_input_data_V_data_V_empty_n,
        app_input_data_V_data_V_read,
        app_input_data_V_len_dout,
        app_input_data_V_len_empty_n,
        app_input_data_V_len_read,
        app_input_data_V_eop_dout,
        app_input_data_V_eop_empty_n,
        app_input_data_V_eop_read,
        image_height,
        app_output_data_V_data_V_din,
        app_output_data_V_data_V_full_n,
        app_output_data_V_data_V_write,
        app_output_data_V_len_din,
        app_output_data_V_len_full_n,
        app_output_data_V_len_write,
        app_output_data_V_eop_din,
        app_output_data_V_eop_full_n,
        app_output_data_V_eop_write,
        ap_clk,
        ap_rst,
        image_height_ap_vld,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [26:0] tmp_cast;
input  [511:0] app_input_data_V_data_V_dout;
input   app_input_data_V_data_V_empty_n;
output   app_input_data_V_data_V_read;
input  [15:0] app_input_data_V_len_dout;
input   app_input_data_V_len_empty_n;
output   app_input_data_V_len_read;
input  [0:0] app_input_data_V_eop_dout;
input   app_input_data_V_eop_empty_n;
output   app_input_data_V_eop_read;
input  [31:0] image_height;
output  [511:0] app_output_data_V_data_V_din;
input   app_output_data_V_data_V_full_n;
output   app_output_data_V_data_V_write;
output  [15:0] app_output_data_V_len_din;
input   app_output_data_V_len_full_n;
output   app_output_data_V_len_write;
output  [0:0] app_output_data_V_eop_din;
input   app_output_data_V_eop_full_n;
output   app_output_data_V_eop_write;
input   ap_clk;
input   ap_rst;
input   image_height_ap_vld;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg ap_done;
reg ap_ready;

wire    dataflow_in_loop_U0_app_input_data_V_data_V_read;
wire    dataflow_in_loop_U0_app_input_data_V_len_read;
wire    dataflow_in_loop_U0_app_input_data_V_eop_read;
wire   [511:0] dataflow_in_loop_U0_app_output_data_V_data_V_din;
wire    dataflow_in_loop_U0_app_output_data_V_data_V_write;
wire   [15:0] dataflow_in_loop_U0_app_output_data_V_len_din;
wire    dataflow_in_loop_U0_app_output_data_V_len_write;
wire   [0:0] dataflow_in_loop_U0_app_output_data_V_eop_din;
wire    dataflow_in_loop_U0_app_output_data_V_eop_write;
wire    dataflow_in_loop_U0_ap_done;
reg    dataflow_in_loop_U0_ap_start;
wire    dataflow_in_loop_U0_ap_ready;
wire    dataflow_in_loop_U0_ap_idle;
wire    dataflow_in_loop_U0_ap_continue;
wire    ap_sync_continue;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    loop_dataflow_enable;
reg   [26:0] loop_dataflow_input_count;
reg   [26:0] loop_dataflow_output_count;
reg    loop_dataflow_busy;
wire    dataflow_in_loop_U0_start_full_n;
wire    dataflow_in_loop_U0_start_write;

// power-on initialization
initial begin
#0 loop_dataflow_enable = 1'b0;
#0 loop_dataflow_input_count = 27'd0;
#0 loop_dataflow_output_count = 27'd0;
#0 loop_dataflow_busy = 1'b0;
end

dataflow_in_loop dataflow_in_loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .app_input_data_V_data_V_dout(app_input_data_V_data_V_dout),
    .app_input_data_V_data_V_empty_n(app_input_data_V_data_V_empty_n),
    .app_input_data_V_data_V_read(dataflow_in_loop_U0_app_input_data_V_data_V_read),
    .app_input_data_V_len_dout(app_input_data_V_len_dout),
    .app_input_data_V_len_empty_n(app_input_data_V_len_empty_n),
    .app_input_data_V_len_read(dataflow_in_loop_U0_app_input_data_V_len_read),
    .app_input_data_V_eop_dout(app_input_data_V_eop_dout),
    .app_input_data_V_eop_empty_n(app_input_data_V_eop_empty_n),
    .app_input_data_V_eop_read(dataflow_in_loop_U0_app_input_data_V_eop_read),
    .n(loop_dataflow_input_count),
    .image_height(image_height),
    .app_output_data_V_data_V_din(dataflow_in_loop_U0_app_output_data_V_data_V_din),
    .app_output_data_V_data_V_full_n(app_output_data_V_data_V_full_n),
    .app_output_data_V_data_V_write(dataflow_in_loop_U0_app_output_data_V_data_V_write),
    .app_output_data_V_len_din(dataflow_in_loop_U0_app_output_data_V_len_din),
    .app_output_data_V_len_full_n(app_output_data_V_len_full_n),
    .app_output_data_V_len_write(dataflow_in_loop_U0_app_output_data_V_len_write),
    .app_output_data_V_eop_din(dataflow_in_loop_U0_app_output_data_V_eop_din),
    .app_output_data_V_eop_full_n(app_output_data_V_eop_full_n),
    .app_output_data_V_eop_write(dataflow_in_loop_U0_app_output_data_V_eop_write),
    .n_ap_vld(1'b0),
    .image_height_ap_vld(image_height_ap_vld),
    .ap_done(dataflow_in_loop_U0_ap_done),
    .ap_start(dataflow_in_loop_U0_ap_start),
    .ap_ready(dataflow_in_loop_U0_ap_ready),
    .ap_idle(dataflow_in_loop_U0_ap_idle),
    .ap_continue(dataflow_in_loop_U0_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_busy <= 1'b0;
    end else begin
        if (((ap_continue == 1'b1) & (tmp_cast == loop_dataflow_output_count))) begin
            loop_dataflow_busy <= 1'b0;
        end else if ((ap_start == 1'b1)) begin
            loop_dataflow_busy <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_enable <= 1'b0;
    end else begin
        if (((loop_dataflow_enable == 1'b0) & (ap_start == 1'b1))) begin
            loop_dataflow_enable <= 1'b1;
        end else if (((loop_dataflow_enable == 1'b1) & (tmp_cast == loop_dataflow_input_count))) begin
            loop_dataflow_enable <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_input_count <= 27'd0;
    end else begin
        if (((loop_dataflow_enable == 1'b1) & (tmp_cast == loop_dataflow_input_count))) begin
            loop_dataflow_input_count <= 27'd0;
        end else if (((loop_dataflow_enable == 1'b1) & (dataflow_in_loop_U0_ap_ready == 1'b1))) begin
            loop_dataflow_input_count <= (loop_dataflow_input_count + 27'd1);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        loop_dataflow_output_count <= 27'd0;
    end else begin
        if (((ap_continue == 1'b1) & (tmp_cast == loop_dataflow_output_count))) begin
            loop_dataflow_output_count <= 27'd0;
        end else if ((dataflow_in_loop_U0_ap_done == 1'b1)) begin
            loop_dataflow_output_count <= (loop_dataflow_output_count + 27'd1);
        end
    end
end

always @ (*) begin
    if (((loop_dataflow_busy == 1'b1) & (tmp_cast == loop_dataflow_output_count))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_cast == loop_dataflow_input_count)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_cast == loop_dataflow_input_count) & (loop_dataflow_enable == 1'b1))) begin
        dataflow_in_loop_U0_ap_start = 1'b1;
    end else begin
        dataflow_in_loop_U0_ap_start = 1'b0;
    end
end

assign ap_idle = dataflow_in_loop_U0_ap_idle;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = dataflow_in_loop_U0_ap_done;

assign ap_sync_ready = dataflow_in_loop_U0_ap_ready;

assign app_input_data_V_data_V_read = dataflow_in_loop_U0_app_input_data_V_data_V_read;

assign app_input_data_V_eop_read = dataflow_in_loop_U0_app_input_data_V_eop_read;

assign app_input_data_V_len_read = dataflow_in_loop_U0_app_input_data_V_len_read;

assign app_output_data_V_data_V_din = dataflow_in_loop_U0_app_output_data_V_data_V_din;

assign app_output_data_V_data_V_write = dataflow_in_loop_U0_app_output_data_V_data_V_write;

assign app_output_data_V_eop_din = dataflow_in_loop_U0_app_output_data_V_eop_din;

assign app_output_data_V_eop_write = dataflow_in_loop_U0_app_output_data_V_eop_write;

assign app_output_data_V_len_din = dataflow_in_loop_U0_app_output_data_V_len_din;

assign app_output_data_V_len_write = dataflow_in_loop_U0_app_output_data_V_len_write;

assign dataflow_in_loop_U0_ap_continue = 1'b1;

assign dataflow_in_loop_U0_start_full_n = 1'b1;

assign dataflow_in_loop_U0_start_write = 1'b0;

endmodule //dataflow_parent_loop_proc
