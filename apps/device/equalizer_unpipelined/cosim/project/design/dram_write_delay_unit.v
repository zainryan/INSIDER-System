// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dram_write_delay_unit,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.997000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2151,HLS_SYN_LUT=712}" *)

module dram_write_delay_unit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        device_write_delay_cycle_cnts_V_dout,
        device_write_delay_cycle_cnts_V_empty_n,
        device_write_delay_cycle_cnts_V_read,
        before_delay_dram_write_req_data_V_last_dout,
        before_delay_dram_write_req_data_V_last_empty_n,
        before_delay_dram_write_req_data_V_last_read,
        before_delay_dram_write_req_data_V_data_V_dout,
        before_delay_dram_write_req_data_V_data_V_empty_n,
        before_delay_dram_write_req_data_V_data_V_read,
        before_delay_dram_write_req_apply_with_time_V_req_apply_num_dout,
        before_delay_dram_write_req_apply_with_time_V_req_apply_num_empty_n,
        before_delay_dram_write_req_apply_with_time_V_req_apply_num_read,
        before_delay_dram_write_req_apply_with_time_V_req_apply_addr_dout,
        before_delay_dram_write_req_apply_with_time_V_req_apply_addr_empty_n,
        before_delay_dram_write_req_apply_with_time_V_req_apply_addr_read,
        before_delay_dram_write_req_apply_with_time_V_time_dout,
        before_delay_dram_write_req_apply_with_time_V_time_empty_n,
        before_delay_dram_write_req_apply_with_time_V_time_read,
        before_throttle_unified_dram_write_req_data_V_last_din,
        before_throttle_unified_dram_write_req_data_V_last_full_n,
        before_throttle_unified_dram_write_req_data_V_last_write,
        before_throttle_unified_dram_write_req_data_V_data_V_din,
        before_throttle_unified_dram_write_req_data_V_data_V_full_n,
        before_throttle_unified_dram_write_req_data_V_data_V_write,
        before_throttle_unified_dram_write_req_apply_V_num_din,
        before_throttle_unified_dram_write_req_apply_V_num_full_n,
        before_throttle_unified_dram_write_req_apply_V_num_write,
        before_throttle_unified_dram_write_req_apply_V_addr_din,
        before_throttle_unified_dram_write_req_apply_V_addr_full_n,
        before_throttle_unified_dram_write_req_apply_V_addr_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] device_write_delay_cycle_cnts_V_dout;
input   device_write_delay_cycle_cnts_V_empty_n;
output   device_write_delay_cycle_cnts_V_read;
input   before_delay_dram_write_req_data_V_last_dout;
input   before_delay_dram_write_req_data_V_last_empty_n;
output   before_delay_dram_write_req_data_V_last_read;
input  [511:0] before_delay_dram_write_req_data_V_data_V_dout;
input   before_delay_dram_write_req_data_V_data_V_empty_n;
output   before_delay_dram_write_req_data_V_data_V_read;
input  [7:0] before_delay_dram_write_req_apply_with_time_V_req_apply_num_dout;
input   before_delay_dram_write_req_apply_with_time_V_req_apply_num_empty_n;
output   before_delay_dram_write_req_apply_with_time_V_req_apply_num_read;
input  [63:0] before_delay_dram_write_req_apply_with_time_V_req_apply_addr_dout;
input   before_delay_dram_write_req_apply_with_time_V_req_apply_addr_empty_n;
output   before_delay_dram_write_req_apply_with_time_V_req_apply_addr_read;
input  [63:0] before_delay_dram_write_req_apply_with_time_V_time_dout;
input   before_delay_dram_write_req_apply_with_time_V_time_empty_n;
output   before_delay_dram_write_req_apply_with_time_V_time_read;
output   before_throttle_unified_dram_write_req_data_V_last_din;
input   before_throttle_unified_dram_write_req_data_V_last_full_n;
output   before_throttle_unified_dram_write_req_data_V_last_write;
output  [511:0] before_throttle_unified_dram_write_req_data_V_data_V_din;
input   before_throttle_unified_dram_write_req_data_V_data_V_full_n;
output   before_throttle_unified_dram_write_req_data_V_data_V_write;
output  [7:0] before_throttle_unified_dram_write_req_apply_V_num_din;
input   before_throttle_unified_dram_write_req_apply_V_num_full_n;
output   before_throttle_unified_dram_write_req_apply_V_num_write;
output  [63:0] before_throttle_unified_dram_write_req_apply_V_addr_din;
input   before_throttle_unified_dram_write_req_apply_V_addr_full_n;
output   before_throttle_unified_dram_write_req_apply_V_addr_write;

reg ap_idle;
reg device_write_delay_cycle_cnts_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] p_011_1_s_reg_240;
reg   [63:0] p_011_0_1_s_reg_252;
reg   [7:0] p_011_0_0_s_reg_264;
reg   [63:0] delay_cycle_cnt_reg_276;
reg   [0:0] valid_write_req_apply_with_time_reg_287;
reg   [0:0] valid_write_req_data_reg_299;
reg   [511:0] write_req_data_1_s_reg_311;
reg   [0:0] write_req_data_0_s_reg_322;
reg   [63:0] time_reg_333;
wire   [63:0] delay_cycle_cnt_1_fu_524_p3;
reg   [63:0] delay_cycle_cnt_1_reg_603;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] empty_n_5_fu_532_p1;
reg   [0:0] empty_n_5_reg_609;
reg   [0:0] ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4;
wire   [0:0] empty_n_6_fu_548_p1;
reg   [0:0] empty_n_6_reg_633;
reg   [0:0] ap_phi_mux_valid_write_req_data_phi_fu_303_p4;
wire   [63:0] time_1_fu_560_p2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] ap_phi_mux_p_011_1_2_phi_fu_390_p6;
reg   [63:0] ap_phi_mux_p_011_1_s_phi_fu_244_p4;
wire    ap_block_pp0_stage0;
reg   [63:0] ap_phi_mux_p_011_0_1_2_phi_fu_405_p6;
reg   [63:0] ap_phi_mux_p_011_0_1_s_phi_fu_256_p4;
reg   [7:0] ap_phi_mux_p_011_0_0_2_phi_fu_420_p6;
reg   [7:0] ap_phi_mux_p_011_0_0_s_phi_fu_268_p4;
reg   [63:0] ap_phi_mux_delay_cycle_cnt_phi_fu_280_p4;
reg   [0:0] ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6;
reg   [0:0] ap_phi_mux_valid_write_req_data_3_phi_fu_505_p4;
reg   [511:0] ap_phi_mux_write_req_data_1_2_phi_fu_481_p4;
reg   [0:0] ap_phi_mux_write_req_data_0_2_phi_fu_493_p4;
wire   [63:0] ap_phi_reg_pp0_iter0_p_011_1_1_reg_344;
reg   [63:0] ap_phi_reg_pp0_iter1_p_011_1_1_reg_344;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_addr_reg_354;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_addr_reg_354;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_num_reg_365;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_num_reg_365;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_376;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376;
reg   [63:0] ap_phi_reg_pp0_iter1_p_011_1_2_reg_386;
wire   [0:0] tmp_4_fu_571_p2;
wire   [63:0] ap_phi_reg_pp0_iter0_p_011_1_2_reg_386;
reg   [63:0] ap_phi_reg_pp0_iter1_p_011_0_1_2_reg_401;
wire   [63:0] ap_phi_reg_pp0_iter0_p_011_0_1_2_reg_401;
reg   [7:0] ap_phi_reg_pp0_iter1_p_011_0_0_2_reg_416;
wire   [7:0] ap_phi_reg_pp0_iter0_p_011_0_0_2_reg_416;
wire   [0:0] p_valid_write_req_apply_with_time_1_fu_583_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_431;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_431;
reg   [511:0] ap_phi_mux_tmp_data_V_phi_fu_448_p4;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_V_reg_445;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_V_reg_445;
reg   [0:0] ap_phi_mux_tmp_last_phi_fu_459_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_reg_456;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_reg_456;
reg   [0:0] ap_phi_mux_valid_write_req_data_1_phi_fu_470_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_write_req_data_1_reg_467;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_write_req_data_1_reg_467;
reg   [511:0] ap_phi_reg_pp0_iter1_write_req_data_1_2_reg_477;
wire   [511:0] ap_phi_reg_pp0_iter0_write_req_data_1_2_reg_477;
reg   [0:0] ap_phi_reg_pp0_iter1_write_req_data_0_2_reg_489;
wire   [0:0] ap_phi_reg_pp0_iter0_write_req_data_0_2_reg_489;
wire   [0:0] p_valid_write_req_data_1_fu_596_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_501;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_501;
reg    before_delay_dram_write_req_apply_with_time_V_time0_update;
wire   [0:0] empty_n_3_nbread_fu_202_p4_0;
reg    before_delay_dram_write_req_data_V_last0_update;
wire   [0:0] empty_n_4_nbread_fu_212_p3_0;
reg    before_throttle_unified_dram_write_req_apply_V_num1_update;
wire   [0:0] full_n_nbwrite_fu_220_p5;
wire    ap_block_pp0_stage0_01001;
reg    before_throttle_unified_dram_write_req_data_V_last1_update;
wire   [0:0] full_n_1_nbwrite_fu_230_p5;
wire   [0:0] delay_cycle_cnt_1_fu_524_p0;
wire   [63:0] delay_cycle_cnt_2_fu_520_p1;
wire   [63:0] tmp_3_fu_566_p2;
wire   [0:0] not_full_n_i_fu_577_p2;
wire   [0:0] not_full_n_i7_fu_590_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_202;
reg    ap_condition_212;
reg    ap_condition_163;
reg    ap_condition_124;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_011_0_0_2_reg_416 <= before_delay_dram_write_req_apply_with_time_V_req_apply_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_011_0_0_2_reg_416 <= ap_phi_reg_pp0_iter0_p_011_0_0_2_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_011_0_1_2_reg_401 <= before_delay_dram_write_req_apply_with_time_V_req_apply_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_011_0_1_2_reg_401 <= ap_phi_reg_pp0_iter0_p_011_0_1_2_reg_401;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_p_011_1_1_reg_344 <= before_delay_dram_write_req_apply_with_time_V_time_dout;
        end else if ((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_011_1_1_reg_344 <= ap_phi_mux_p_011_1_s_phi_fu_244_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_011_1_1_reg_344 <= ap_phi_reg_pp0_iter0_p_011_1_1_reg_344;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_011_1_2_reg_386 <= before_delay_dram_write_req_apply_with_time_V_time_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_011_1_2_reg_386 <= ap_phi_reg_pp0_iter0_p_011_1_2_reg_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_addr_reg_354 <= before_delay_dram_write_req_apply_with_time_V_req_apply_addr_dout;
        end else if ((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmp_addr_reg_354 <= ap_phi_mux_p_011_0_1_s_phi_fu_256_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_addr_reg_354 <= ap_phi_reg_pp0_iter0_tmp_addr_reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((empty_n_6_fu_548_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_445 <= before_delay_dram_write_req_data_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_445 <= ap_phi_reg_pp0_iter0_tmp_data_V_reg_445;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((empty_n_6_fu_548_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_456 <= before_delay_dram_write_req_data_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_456 <= ap_phi_reg_pp0_iter0_tmp_last_reg_456;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_365 <= before_delay_dram_write_req_apply_with_time_V_req_apply_num_dout;
        end else if ((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_365 <= ap_phi_mux_p_011_0_0_s_phi_fu_268_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_365 <= ap_phi_reg_pp0_iter0_tmp_num_reg_365;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376 <= empty_n_3_nbread_fu_202_p4_0;
        end else if ((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376 <= ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376 <= ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_376;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (empty_n_5_fu_532_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_431 <= empty_n_3_nbread_fu_202_p4_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_431 <= ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_431;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((empty_n_6_fu_548_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_write_req_data_1_reg_467 <= empty_n_4_nbread_fu_212_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_write_req_data_1_reg_467 <= ap_phi_reg_pp0_iter0_valid_write_req_data_1_reg_467;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0) & (empty_n_6_fu_548_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_501 <= empty_n_4_nbread_fu_212_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_501 <= ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_501;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0) & (empty_n_6_fu_548_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_write_req_data_0_2_reg_489 <= before_delay_dram_write_req_data_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_write_req_data_0_2_reg_489 <= ap_phi_reg_pp0_iter0_write_req_data_0_2_reg_489;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_124)) begin
        if (((ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0) & (empty_n_6_fu_548_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_write_req_data_1_2_reg_477 <= before_delay_dram_write_req_data_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_write_req_data_1_2_reg_477 <= ap_phi_reg_pp0_iter0_write_req_data_1_2_reg_477;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delay_cycle_cnt_reg_276 <= delay_cycle_cnt_1_reg_603;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        delay_cycle_cnt_reg_276 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        time_reg_333 <= time_1_fu_560_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        time_reg_333 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_write_req_apply_with_time_reg_287 <= ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_write_req_apply_with_time_reg_287 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_write_req_data_reg_299 <= ap_phi_mux_valid_write_req_data_3_phi_fu_505_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_write_req_data_reg_299 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delay_cycle_cnt_1_reg_603 <= delay_cycle_cnt_1_fu_524_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_5_reg_609 <= empty_n_3_nbread_fu_202_p4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_6_reg_633 <= empty_n_4_nbread_fu_212_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_011_0_0_s_reg_264 <= ap_phi_mux_p_011_0_0_2_phi_fu_420_p6;
        p_011_0_1_s_reg_252 <= ap_phi_mux_p_011_0_1_2_phi_fu_405_p6;
        p_011_1_s_reg_240 <= ap_phi_mux_p_011_1_2_phi_fu_390_p6;
        write_req_data_0_s_reg_322 <= ap_phi_mux_write_req_data_0_2_phi_fu_493_p4;
        write_req_data_1_s_reg_311 <= ap_phi_mux_write_req_data_1_2_phi_fu_481_p4;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_delay_cycle_cnt_phi_fu_280_p4 = delay_cycle_cnt_1_reg_603;
    end else begin
        ap_phi_mux_delay_cycle_cnt_phi_fu_280_p4 = delay_cycle_cnt_reg_276;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd1) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd0) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd0)))))) begin
        ap_phi_mux_p_011_0_0_2_phi_fu_420_p6 = ap_phi_reg_pp0_iter1_tmp_num_reg_365;
    end else begin
        ap_phi_mux_p_011_0_0_2_phi_fu_420_p6 = ap_phi_reg_pp0_iter1_p_011_0_0_2_reg_416;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_011_0_0_s_phi_fu_268_p4 = ap_phi_mux_p_011_0_0_2_phi_fu_420_p6;
    end else begin
        ap_phi_mux_p_011_0_0_s_phi_fu_268_p4 = p_011_0_0_s_reg_264;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd1) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd0) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd0)))))) begin
        ap_phi_mux_p_011_0_1_2_phi_fu_405_p6 = ap_phi_reg_pp0_iter1_tmp_addr_reg_354;
    end else begin
        ap_phi_mux_p_011_0_1_2_phi_fu_405_p6 = ap_phi_reg_pp0_iter1_p_011_0_1_2_reg_401;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_011_0_1_s_phi_fu_256_p4 = ap_phi_mux_p_011_0_1_2_phi_fu_405_p6;
    end else begin
        ap_phi_mux_p_011_0_1_s_phi_fu_256_p4 = p_011_0_1_s_reg_252;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd1) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_4_fu_571_p2 == 1'd0) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd0)))))) begin
        ap_phi_mux_p_011_1_2_phi_fu_390_p6 = ap_phi_reg_pp0_iter1_p_011_1_1_reg_344;
    end else begin
        ap_phi_mux_p_011_1_2_phi_fu_390_p6 = ap_phi_reg_pp0_iter1_p_011_1_2_reg_386;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_011_1_s_phi_fu_244_p4 = ap_phi_mux_p_011_1_2_phi_fu_390_p6;
    end else begin
        ap_phi_mux_p_011_1_s_phi_fu_244_p4 = p_011_1_s_reg_240;
    end
end

always @ (*) begin
    if (((valid_write_req_data_reg_299 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_tmp_data_V_phi_fu_448_p4 = write_req_data_1_s_reg_311;
    end else begin
        ap_phi_mux_tmp_data_V_phi_fu_448_p4 = ap_phi_reg_pp0_iter1_tmp_data_V_reg_445;
    end
end

always @ (*) begin
    if (((valid_write_req_data_reg_299 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_tmp_last_phi_fu_459_p4 = write_req_data_0_s_reg_322;
    end else begin
        ap_phi_mux_tmp_last_phi_fu_459_p4 = ap_phi_reg_pp0_iter1_tmp_last_reg_456;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_163)) begin
        if ((1'b1 == ap_condition_212)) begin
            ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6 = ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376;
        end else if ((1'b1 == ap_condition_202)) begin
            ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6 = p_valid_write_req_apply_with_time_1_fu_583_p2;
        end else begin
            ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6 = ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_431;
        end
    end else begin
        ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6 = ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_4_reg_431;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 = ap_phi_mux_valid_write_req_apply_with_time_4_phi_fu_435_p6;
    end else begin
        ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 = valid_write_req_apply_with_time_reg_287;
    end
end

always @ (*) begin
    if (((valid_write_req_data_reg_299 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_valid_write_req_data_1_phi_fu_470_p4 = valid_write_req_data_reg_299;
    end else begin
        ap_phi_mux_valid_write_req_data_1_phi_fu_470_p4 = ap_phi_reg_pp0_iter1_valid_write_req_data_1_reg_467;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & ((valid_write_req_data_reg_299 == 1'd1) | (empty_n_6_reg_633 == 1'd1)))) begin
        ap_phi_mux_valid_write_req_data_3_phi_fu_505_p4 = p_valid_write_req_data_1_fu_596_p2;
    end else begin
        ap_phi_mux_valid_write_req_data_3_phi_fu_505_p4 = ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_501;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_valid_write_req_data_phi_fu_303_p4 = ap_phi_mux_valid_write_req_data_3_phi_fu_505_p4;
    end else begin
        ap_phi_mux_valid_write_req_data_phi_fu_303_p4 = valid_write_req_data_reg_299;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & ((valid_write_req_data_reg_299 == 1'd1) | (empty_n_6_reg_633 == 1'd1)))) begin
        ap_phi_mux_write_req_data_0_2_phi_fu_493_p4 = ap_phi_mux_tmp_last_phi_fu_459_p4;
    end else begin
        ap_phi_mux_write_req_data_0_2_phi_fu_493_p4 = ap_phi_reg_pp0_iter1_write_req_data_0_2_reg_489;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & ((valid_write_req_data_reg_299 == 1'd1) | (empty_n_6_reg_633 == 1'd1)))) begin
        ap_phi_mux_write_req_data_1_2_phi_fu_481_p4 = ap_phi_mux_tmp_data_V_phi_fu_448_p4;
    end else begin
        ap_phi_mux_write_req_data_1_2_phi_fu_481_p4 = ap_phi_reg_pp0_iter1_write_req_data_1_2_reg_477;
    end
end

always @ (*) begin
    if ((((before_delay_dram_write_req_apply_with_time_V_time_empty_n & before_delay_dram_write_req_apply_with_time_V_req_apply_num_empty_n & before_delay_dram_write_req_apply_with_time_V_req_apply_addr_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_valid_write_req_apply_with_time_phi_fu_291_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        before_delay_dram_write_req_apply_with_time_V_time0_update = 1'b1;
    end else begin
        before_delay_dram_write_req_apply_with_time_V_time0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((before_delay_dram_write_req_data_V_last_empty_n & before_delay_dram_write_req_data_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_valid_write_req_data_phi_fu_303_p4 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        before_delay_dram_write_req_data_V_last0_update = 1'b1;
    end else begin
        before_delay_dram_write_req_data_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((before_throttle_unified_dram_write_req_apply_V_num_full_n & before_throttle_unified_dram_write_req_apply_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((tmp_4_fu_571_p2 == 1'd0) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd0))))) begin
        before_throttle_unified_dram_write_req_apply_V_num1_update = 1'b1;
    end else begin
        before_throttle_unified_dram_write_req_apply_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((before_throttle_unified_dram_write_req_data_V_last_full_n & before_throttle_unified_dram_write_req_data_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((valid_write_req_data_reg_299 == 1'd1) | (empty_n_6_reg_633 == 1'd1)))) begin
        before_throttle_unified_dram_write_req_data_V_last1_update = 1'b1;
    end else begin
        before_throttle_unified_dram_write_req_data_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((device_write_delay_cycle_cnts_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        device_write_delay_cycle_cnts_V_read = 1'b1;
    end else begin
        device_write_delay_cycle_cnts_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_124 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_163 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_202 = (((tmp_4_fu_571_p2 == 1'd0) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd0)));
end

always @ (*) begin
    ap_condition_212 = (((tmp_4_fu_571_p2 == 1'd1) & (empty_n_5_reg_609 == 1'd1)) | ((valid_write_req_apply_with_time_reg_287 == 1'd1) & (tmp_4_fu_571_p2 == 1'd1)));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_p_011_0_0_2_reg_416 = 'bx;

assign ap_phi_reg_pp0_iter0_p_011_0_1_2_reg_401 = 'bx;

assign ap_phi_reg_pp0_iter0_p_011_1_1_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_p_011_1_2_reg_386 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_addr_reg_354 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_reg_445 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_reg_456 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num_reg_365 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_1_reg_376 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_write_req_apply_with_time_4_reg_431 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_write_req_data_1_reg_467 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_501 = 'bx;

assign ap_phi_reg_pp0_iter0_write_req_data_0_2_reg_489 = 'bx;

assign ap_phi_reg_pp0_iter0_write_req_data_1_2_reg_477 = 'bx;

assign ap_ready = 1'b0;

assign before_delay_dram_write_req_apply_with_time_V_req_apply_addr_read = before_delay_dram_write_req_apply_with_time_V_time0_update;

assign before_delay_dram_write_req_apply_with_time_V_req_apply_num_read = before_delay_dram_write_req_apply_with_time_V_time0_update;

assign before_delay_dram_write_req_apply_with_time_V_time_read = before_delay_dram_write_req_apply_with_time_V_time0_update;

assign before_delay_dram_write_req_data_V_data_V_read = before_delay_dram_write_req_data_V_last0_update;

assign before_delay_dram_write_req_data_V_last_read = before_delay_dram_write_req_data_V_last0_update;

assign before_throttle_unified_dram_write_req_apply_V_addr_din = ap_phi_reg_pp0_iter1_tmp_addr_reg_354;

assign before_throttle_unified_dram_write_req_apply_V_addr_write = before_throttle_unified_dram_write_req_apply_V_num1_update;

assign before_throttle_unified_dram_write_req_apply_V_num_din = ap_phi_reg_pp0_iter1_tmp_num_reg_365;

assign before_throttle_unified_dram_write_req_apply_V_num_write = before_throttle_unified_dram_write_req_apply_V_num1_update;

assign before_throttle_unified_dram_write_req_data_V_data_V_din = ap_phi_mux_tmp_data_V_phi_fu_448_p4;

assign before_throttle_unified_dram_write_req_data_V_data_V_write = before_throttle_unified_dram_write_req_data_V_last1_update;

assign before_throttle_unified_dram_write_req_data_V_last_din = ap_phi_mux_tmp_last_phi_fu_459_p4;

assign before_throttle_unified_dram_write_req_data_V_last_write = before_throttle_unified_dram_write_req_data_V_last1_update;

assign delay_cycle_cnt_1_fu_524_p0 = device_write_delay_cycle_cnts_V_empty_n;

assign delay_cycle_cnt_1_fu_524_p3 = ((delay_cycle_cnt_1_fu_524_p0[0:0] === 1'b1) ? delay_cycle_cnt_2_fu_520_p1 : ap_phi_mux_delay_cycle_cnt_phi_fu_280_p4);

assign delay_cycle_cnt_2_fu_520_p1 = device_write_delay_cycle_cnts_V_dout;

assign empty_n_3_nbread_fu_202_p4_0 = (before_delay_dram_write_req_apply_with_time_V_time_empty_n & before_delay_dram_write_req_apply_with_time_V_req_apply_num_empty_n & before_delay_dram_write_req_apply_with_time_V_req_apply_addr_empty_n);

assign empty_n_4_nbread_fu_212_p3_0 = (before_delay_dram_write_req_data_V_last_empty_n & before_delay_dram_write_req_data_V_data_V_empty_n);

assign empty_n_5_fu_532_p1 = empty_n_3_nbread_fu_202_p4_0;

assign empty_n_6_fu_548_p1 = empty_n_4_nbread_fu_212_p3_0;

assign full_n_1_nbwrite_fu_230_p5 = (before_throttle_unified_dram_write_req_data_V_last_full_n & before_throttle_unified_dram_write_req_data_V_data_V_full_n);

assign full_n_nbwrite_fu_220_p5 = (before_throttle_unified_dram_write_req_apply_V_num_full_n & before_throttle_unified_dram_write_req_apply_V_addr_full_n);

assign not_full_n_i7_fu_590_p2 = (full_n_1_nbwrite_fu_230_p5 ^ 1'd1);

assign not_full_n_i_fu_577_p2 = (full_n_nbwrite_fu_220_p5 ^ 1'd1);

assign p_valid_write_req_apply_with_time_1_fu_583_p2 = (not_full_n_i_fu_577_p2 & ap_phi_reg_pp0_iter1_valid_write_req_apply_with_time_1_reg_376);

assign p_valid_write_req_data_1_fu_596_p2 = (not_full_n_i7_fu_590_p2 & ap_phi_mux_valid_write_req_data_1_phi_fu_470_p4);

assign time_1_fu_560_p2 = (time_reg_333 + 64'd1);

assign tmp_3_fu_566_p2 = (ap_phi_reg_pp0_iter1_p_011_1_1_reg_344 + delay_cycle_cnt_1_reg_603);

assign tmp_4_fu_571_p2 = ((tmp_3_fu_566_p2 > time_reg_333) ? 1'b1 : 1'b0);

endmodule //dram_write_delay_unit
