// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="peek_handler,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.714500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=182,HLS_SYN_LUT=462}" *)

module peek_handler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        peek_req_V_dout,
        peek_req_V_empty_n,
        peek_req_V_read,
        peek_resp_V_din,
        peek_resp_V_full_n,
        peek_resp_V_write,
        peek_real_written_bytes_req_V_din,
        peek_real_written_bytes_req_V_full_n,
        peek_real_written_bytes_req_V_write,
        peek_real_written_bytes_resp_V_dout,
        peek_real_written_bytes_resp_V_empty_n,
        peek_real_written_bytes_resp_V_read,
        peek_write_finished_req_V_din,
        peek_write_finished_req_V_full_n,
        peek_write_finished_req_V_write,
        peek_write_finished_resp_V_dout,
        peek_write_finished_resp_V_empty_n,
        peek_write_finished_resp_V_read,
        peek_virt_written_bytes_req_V_din,
        peek_virt_written_bytes_req_V_full_n,
        peek_virt_written_bytes_req_V_write,
        peek_virt_written_bytes_resp_V_dout,
        peek_virt_written_bytes_resp_V_empty_n,
        peek_virt_written_bytes_resp_V_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] peek_req_V_dout;
input   peek_req_V_empty_n;
output   peek_req_V_read;
output  [31:0] peek_resp_V_din;
input   peek_resp_V_full_n;
output   peek_resp_V_write;
output  [31:0] peek_real_written_bytes_req_V_din;
input   peek_real_written_bytes_req_V_full_n;
output   peek_real_written_bytes_req_V_write;
input  [31:0] peek_real_written_bytes_resp_V_dout;
input   peek_real_written_bytes_resp_V_empty_n;
output   peek_real_written_bytes_resp_V_read;
output  [31:0] peek_write_finished_req_V_din;
input   peek_write_finished_req_V_full_n;
output   peek_write_finished_req_V_write;
input  [31:0] peek_write_finished_resp_V_dout;
input   peek_write_finished_resp_V_empty_n;
output   peek_write_finished_resp_V_read;
output  [31:0] peek_virt_written_bytes_req_V_din;
input   peek_virt_written_bytes_req_V_full_n;
output   peek_virt_written_bytes_req_V_write;
input  [31:0] peek_virt_written_bytes_resp_V_dout;
input   peek_virt_written_bytes_resp_V_empty_n;
output   peek_virt_written_bytes_resp_V_read;

reg ap_idle;
reg peek_req_V_read;
reg[31:0] peek_resp_V_din;
reg peek_resp_V_write;
reg peek_real_written_bytes_req_V_write;
reg peek_real_written_bytes_resp_V_read;
reg peek_write_finished_req_V_write;
reg peek_write_finished_resp_V_read;
reg peek_virt_written_bytes_req_V_write;
reg peek_virt_written_bytes_resp_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    peek_resp_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] has_inflight_req_reg_230;
reg   [0:0] ap_reg_pp0_iter1_has_inflight_req_reg_230;
reg   [0:0] tmp_2_reg_483;
reg   [0:0] tmp_5_reg_487;
reg   [0:0] tmp_reg_499;
reg   [0:0] empty_n_1_reg_529;
reg   [0:0] tmp_3_reg_503;
reg   [0:0] empty_n_2_reg_520;
reg   [0:0] tmp_8_reg_507;
reg   [0:0] empty_n_3_reg_511;
reg    peek_real_written_bytes_req_V_blk_n;
reg   [0:0] tmp_10_reg_491;
reg    peek_write_finished_req_V_blk_n;
reg   [0:0] sel_tmp6_reg_479;
reg    peek_virt_written_bytes_req_V_blk_n;
reg   [0:0] tmp_12_reg_495;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
reg    ap_predicate_op82_write_state4;
reg    ap_predicate_op85_write_state4;
reg    ap_predicate_op88_write_state4;
reg    ap_predicate_op90_write_state4;
reg    ap_predicate_op91_write_state4;
reg    ap_predicate_op92_write_state4;
reg    ap_predicate_op93_write_state4;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] empty_n_reg_463;
reg   [0:0] ap_phi_mux_has_inflight_req_phi_fu_234_p4;
reg   [31:0] tmp_13_reg_470;
reg   [31:0] ap_reg_pp0_iter1_tmp_13_reg_470;
wire   [0:0] sel_tmp6_fu_334_p2;
wire   [0:0] tmp_2_fu_365_p2;
wire   [0:0] tmp_5_fu_371_p2;
wire   [0:0] tmp_10_fu_377_p2;
wire   [0:0] tmp_12_fu_383_p2;
wire   [0:0] tmp_fu_397_p2;
wire   [0:0] tmp_3_fu_403_p2;
wire   [0:0] tmp_8_fu_409_p2;
wire   [0:0] empty_n_3_fu_415_p1;
reg   [31:0] tmp_14_reg_515;
wire   [0:0] empty_n_2_fu_428_p1;
reg   [31:0] tmp_11_reg_524;
wire   [0:0] empty_n_1_fu_441_p1;
reg   [31:0] tmp_7_reg_533;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_has_inflight_req_9_phi_fu_246_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_has_inflight_req_9_reg_242;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] inflight_req_state_s_fu_172;
wire   [7:0] inflight_req_state_cast_fu_361_p1;
wire   [0:0] tmp_s_fu_297_p2;
wire   [2:0] state_fu_302_p3;
wire   [0:0] tmp_4_fu_287_p2;
wire   [0:0] tmp_9_fu_292_p2;
wire   [0:0] sel_tmp4_fu_322_p2;
wire   [0:0] tmp8_fu_328_p2;
wire   [0:0] sel_tmp2_fu_317_p2;
wire   [0:0] tmp_1_fu_347_p2;
wire   [2:0] sel_tmp3_cast_fu_339_p3;
wire   [2:0] sel_tmp1_fu_310_p3;
wire   [2:0] inflight_req_state_fu_353_p3;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_190;
reg    ap_condition_211;
reg    ap_condition_217;
reg    ap_condition_237;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        has_inflight_req_reg_230 <= ap_phi_mux_has_inflight_req_9_phi_fu_246_p20;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        has_inflight_req_reg_230 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_237)) begin
        if (((tmp_fu_397_p2 == 1'd1) & (has_inflight_req_reg_230 == 1'd1))) begin
                        inflight_req_state_s_fu_172[0] <= 1'b0;
            inflight_req_state_s_fu_172[1] <= 1'b1;
            inflight_req_state_s_fu_172[2] <= 1'b0;
        end else if ((1'b1 == ap_condition_217)) begin
                        inflight_req_state_s_fu_172[0] <= 1'b1;
            inflight_req_state_s_fu_172[1] <= 1'b1;
            inflight_req_state_s_fu_172[2] <= 1'b0;
        end else if ((1'b1 == ap_condition_211)) begin
                        inflight_req_state_s_fu_172[0] <= 1'b0;
            inflight_req_state_s_fu_172[1] <= 1'b0;
            inflight_req_state_s_fu_172[2] <= 1'b1;
        end else if ((1'b1 == ap_condition_190)) begin
                        inflight_req_state_s_fu_172[2 : 0] <= inflight_req_state_cast_fu_361_p1[2 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_has_inflight_req_reg_230 <= has_inflight_req_reg_230;
        ap_reg_pp0_iter1_tmp_13_reg_470 <= tmp_13_reg_470;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_397_p2 == 1'd1) & (has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_1_reg_529 <= peek_real_written_bytes_resp_V_empty_n;
        tmp_7_reg_533 <= peek_real_written_bytes_resp_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_403_p2 == 1'd1) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_2_reg_520 <= peek_write_finished_resp_V_empty_n;
        tmp_11_reg_524 <= peek_write_finished_resp_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_fu_409_p2 == 1'd1) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_3_reg_511 <= peek_virt_written_bytes_resp_V_empty_n;
        tmp_14_reg_515 <= peek_virt_written_bytes_resp_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_has_inflight_req_phi_fu_234_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_reg_463 <= peek_req_V_empty_n;
        tmp_13_reg_470 <= peek_req_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((has_inflight_req_reg_230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sel_tmp6_reg_479 <= sel_tmp6_fu_334_p2;
        tmp_2_reg_483 <= tmp_2_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_5_fu_371_p2 == 1'd0) & (tmp_2_fu_365_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_491 <= tmp_10_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_377_p2 == 1'd0) & (tmp_5_fu_371_p2 == 1'd0) & (tmp_2_fu_365_p2 == 1'd0) & (sel_tmp6_fu_334_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_12_reg_495 <= tmp_12_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_503 <= tmp_3_fu_403_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_2_fu_365_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_5_reg_487 <= tmp_5_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_8_reg_507 <= tmp_8_fu_409_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((has_inflight_req_reg_230 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_reg_499 <= tmp_fu_397_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_fu_397_p2 == 1'd1) & (empty_n_1_fu_441_p1 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_3_fu_403_p2 == 1'd1) & (empty_n_2_fu_428_p1 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_fu_409_p2 == 1'd0) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_8_fu_409_p2 == 1'd1) & (empty_n_3_fu_415_p1 == 1'd0) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_5_fu_371_p2 == 1'd0) & (tmp_2_fu_365_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_has_inflight_req_9_phi_fu_246_p20 = 1'd1;
    end else if ((((empty_n_1_fu_441_p1 == 1'd1) & (tmp_fu_397_p2 == 1'd1) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((empty_n_2_fu_428_p1 == 1'd1) & (tmp_3_fu_403_p2 == 1'd1) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((empty_n_3_fu_415_p1 == 1'd1) & (tmp_8_fu_409_p2 == 1'd1) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_2_fu_365_p2 == 1'd1) & (has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((tmp_5_fu_371_p2 == 1'd1) & (tmp_2_fu_365_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_mux_has_inflight_req_9_phi_fu_246_p20 = 1'd0;
    end else begin
        ap_phi_mux_has_inflight_req_9_phi_fu_246_p20 = ap_phi_reg_pp0_iter1_has_inflight_req_9_reg_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_has_inflight_req_phi_fu_234_p4 = ap_phi_mux_has_inflight_req_9_phi_fu_246_p20;
    end else begin
        ap_phi_mux_has_inflight_req_phi_fu_234_p4 = has_inflight_req_reg_230;
    end
end

always @ (*) begin
    if (((tmp_10_reg_491 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        peek_real_written_bytes_req_V_blk_n = peek_real_written_bytes_req_V_full_n;
    end else begin
        peek_real_written_bytes_req_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op88_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_real_written_bytes_req_V_write = 1'b1;
    end else begin
        peek_real_written_bytes_req_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_fu_397_p2 == 1'd1) & (has_inflight_req_reg_230 == 1'd1) & (peek_real_written_bytes_resp_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_real_written_bytes_resp_V_read = 1'b1;
    end else begin
        peek_real_written_bytes_resp_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_has_inflight_req_phi_fu_234_p4 == 1'd0) & (peek_req_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_req_V_read = 1'b1;
    end else begin
        peek_req_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((empty_n_3_reg_511 == 1'd1) & (tmp_8_reg_507 == 1'd1) & (tmp_3_reg_503 == 1'd0) & (tmp_reg_499 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((empty_n_2_reg_520 == 1'd1) & (tmp_3_reg_503 == 1'd1) & (tmp_reg_499 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((empty_n_1_reg_529 == 1'd1) & (tmp_reg_499 == 1'd1) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((tmp_5_reg_487 == 1'd1) & (tmp_2_reg_483 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        peek_resp_V_blk_n = peek_resp_V_full_n;
    end else begin
        peek_resp_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op93_write_state4 == 1'b1)) begin
            peek_resp_V_din = tmp_7_reg_533;
        end else if ((ap_predicate_op92_write_state4 == 1'b1)) begin
            peek_resp_V_din = tmp_11_reg_524;
        end else if ((ap_predicate_op91_write_state4 == 1'b1)) begin
            peek_resp_V_din = tmp_14_reg_515;
        end else if ((ap_predicate_op90_write_state4 == 1'b1)) begin
            peek_resp_V_din = 32'd0;
        end else begin
            peek_resp_V_din = 'bx;
        end
    end else begin
        peek_resp_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op93_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op92_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op91_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op90_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        peek_resp_V_write = 1'b1;
    end else begin
        peek_resp_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_12_reg_495 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (sel_tmp6_reg_479 == 1'd0) & (tmp_10_reg_491 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        peek_virt_written_bytes_req_V_blk_n = peek_virt_written_bytes_req_V_full_n;
    end else begin
        peek_virt_written_bytes_req_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op82_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_virt_written_bytes_req_V_write = 1'b1;
    end else begin
        peek_virt_written_bytes_req_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_8_fu_409_p2 == 1'd1) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (peek_virt_written_bytes_resp_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_virt_written_bytes_resp_V_read = 1'b1;
    end else begin
        peek_virt_written_bytes_resp_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((sel_tmp6_reg_479 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (tmp_10_reg_491 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        peek_write_finished_req_V_blk_n = peek_write_finished_req_V_full_n;
    end else begin
        peek_write_finished_req_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op85_write_state4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_write_finished_req_V_write = 1'b1;
    end else begin
        peek_write_finished_req_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_3_fu_403_p2 == 1'd1) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1) & (peek_write_finished_resp_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        peek_write_finished_resp_V_read = 1'b1;
    end else begin
        peek_write_finished_resp_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((peek_resp_V_full_n == 1'b0) & (ap_predicate_op93_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op92_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op91_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((peek_real_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op88_write_state4 == 1'b1)) | ((peek_write_finished_req_V_full_n == 1'b0) & (ap_predicate_op85_write_state4 == 1'b1)) | ((peek_virt_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op82_write_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((peek_resp_V_full_n == 1'b0) & (ap_predicate_op93_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op92_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op91_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((peek_real_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op88_write_state4 == 1'b1)) | ((peek_write_finished_req_V_full_n == 1'b0) & (ap_predicate_op85_write_state4 == 1'b1)) | ((peek_virt_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op82_write_state4 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((peek_resp_V_full_n == 1'b0) & (ap_predicate_op93_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op92_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op91_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((peek_real_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op88_write_state4 == 1'b1)) | ((peek_write_finished_req_V_full_n == 1'b0) & (ap_predicate_op85_write_state4 == 1'b1)) | ((peek_virt_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op82_write_state4 == 1'b1))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((peek_resp_V_full_n == 1'b0) & (ap_predicate_op93_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op92_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op91_write_state4 == 1'b1)) | ((peek_resp_V_full_n == 1'b0) & (ap_predicate_op90_write_state4 == 1'b1)) | ((peek_real_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op88_write_state4 == 1'b1)) | ((peek_write_finished_req_V_full_n == 1'b0) & (ap_predicate_op85_write_state4 == 1'b1)) | ((peek_virt_written_bytes_req_V_full_n == 1'b0) & (ap_predicate_op82_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_190 = ((tmp_5_fu_371_p2 == 1'd0) & (tmp_2_fu_365_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd0));
end

always @ (*) begin
    ap_condition_211 = ((tmp_8_fu_409_p2 == 1'd1) & (tmp_3_fu_403_p2 == 1'd0) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1));
end

always @ (*) begin
    ap_condition_217 = ((tmp_3_fu_403_p2 == 1'd1) & (tmp_fu_397_p2 == 1'd0) & (has_inflight_req_reg_230 == 1'd1));
end

always @ (*) begin
    ap_condition_237 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_has_inflight_req_9_reg_242 = 'bx;

always @ (*) begin
    ap_predicate_op82_write_state4 = ((tmp_12_reg_495 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (sel_tmp6_reg_479 == 1'd0) & (tmp_10_reg_491 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0));
end

always @ (*) begin
    ap_predicate_op85_write_state4 = ((sel_tmp6_reg_479 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (tmp_10_reg_491 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0));
end

always @ (*) begin
    ap_predicate_op88_write_state4 = ((tmp_10_reg_491 == 1'd1) & (tmp_5_reg_487 == 1'd0) & (tmp_2_reg_483 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0));
end

always @ (*) begin
    ap_predicate_op90_write_state4 = ((tmp_5_reg_487 == 1'd1) & (tmp_2_reg_483 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd0));
end

always @ (*) begin
    ap_predicate_op91_write_state4 = ((empty_n_3_reg_511 == 1'd1) & (tmp_8_reg_507 == 1'd1) & (tmp_3_reg_503 == 1'd0) & (tmp_reg_499 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1));
end

always @ (*) begin
    ap_predicate_op92_write_state4 = ((empty_n_2_reg_520 == 1'd1) & (tmp_3_reg_503 == 1'd1) & (tmp_reg_499 == 1'd0) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_write_state4 = ((empty_n_1_reg_529 == 1'd1) & (tmp_reg_499 == 1'd1) & (ap_reg_pp0_iter1_has_inflight_req_reg_230 == 1'd1));
end

assign ap_ready = 1'b0;

assign empty_n_1_fu_441_p1 = peek_real_written_bytes_resp_V_empty_n;

assign empty_n_2_fu_428_p1 = peek_write_finished_resp_V_empty_n;

assign empty_n_3_fu_415_p1 = peek_virt_written_bytes_resp_V_empty_n;

assign inflight_req_state_cast_fu_361_p1 = inflight_req_state_fu_353_p3;

assign inflight_req_state_fu_353_p3 = ((tmp_1_fu_347_p2[0:0] === 1'b1) ? sel_tmp3_cast_fu_339_p3 : sel_tmp1_fu_310_p3);

assign peek_real_written_bytes_req_V_din = ap_reg_pp0_iter1_tmp_13_reg_470;

assign peek_virt_written_bytes_req_V_din = ap_reg_pp0_iter1_tmp_13_reg_470;

assign peek_write_finished_req_V_din = 32'd80;

assign sel_tmp1_fu_310_p3 = ((empty_n_reg_463[0:0] === 1'b1) ? state_fu_302_p3 : 3'd0);

assign sel_tmp2_fu_317_p2 = (tmp_4_fu_287_p2 & empty_n_reg_463);

assign sel_tmp3_cast_fu_339_p3 = ((sel_tmp6_fu_334_p2[0:0] === 1'b1) ? 3'd3 : 3'd2);

assign sel_tmp4_fu_322_p2 = (tmp_4_fu_287_p2 ^ 1'd1);

assign sel_tmp6_fu_334_p2 = (tmp8_fu_328_p2 & empty_n_reg_463);

assign state_fu_302_p3 = ((tmp_s_fu_297_p2[0:0] === 1'b1) ? 3'd4 : 3'd1);

assign tmp8_fu_328_p2 = (tmp_9_fu_292_p2 & sel_tmp4_fu_322_p2);

assign tmp_10_fu_377_p2 = ((inflight_req_state_fu_353_p3 == 3'd2) ? 1'b1 : 1'b0);

assign tmp_12_fu_383_p2 = ((inflight_req_state_fu_353_p3 == 3'd4) ? 1'b1 : 1'b0);

assign tmp_1_fu_347_p2 = (sel_tmp6_fu_334_p2 | sel_tmp2_fu_317_p2);

assign tmp_2_fu_365_p2 = ((inflight_req_state_fu_353_p3 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_3_fu_403_p2 = ((inflight_req_state_s_fu_172 == 8'd3) ? 1'b1 : 1'b0);

assign tmp_4_fu_287_p2 = ((tmp_13_reg_470 == 32'd76) ? 1'b1 : 1'b0);

assign tmp_5_fu_371_p2 = ((inflight_req_state_fu_353_p3 == 3'd1) ? 1'b1 : 1'b0);

assign tmp_8_fu_409_p2 = ((inflight_req_state_s_fu_172 == 8'd4) ? 1'b1 : 1'b0);

assign tmp_9_fu_292_p2 = ((tmp_13_reg_470 == 32'd80) ? 1'b1 : 1'b0);

assign tmp_fu_397_p2 = ((inflight_req_state_s_fu_172 == 8'd2) ? 1'b1 : 1'b0);

assign tmp_s_fu_297_p2 = ((tmp_13_reg_470 == 32'd84) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    inflight_req_state_s_fu_172[7:3] <= 5'b00000;
end

endmodule //peek_handler
