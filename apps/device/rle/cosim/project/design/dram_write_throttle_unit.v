// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dram_write_throttle_unit,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.196250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1106,HLS_SYN_LUT=752}" *)

module dram_write_throttle_unit (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        drive_write_throttle_params_V_dout,
        drive_write_throttle_params_V_empty_n,
        drive_write_throttle_params_V_read,
        before_throttle_unified_dram_write_req_data_V_last_dout,
        before_throttle_unified_dram_write_req_data_V_last_empty_n,
        before_throttle_unified_dram_write_req_data_V_last_read,
        before_throttle_unified_dram_write_req_data_V_data_V_dout,
        before_throttle_unified_dram_write_req_data_V_data_V_empty_n,
        before_throttle_unified_dram_write_req_data_V_data_V_read,
        before_throttle_unified_dram_write_req_apply_V_num_dout,
        before_throttle_unified_dram_write_req_apply_V_num_empty_n,
        before_throttle_unified_dram_write_req_apply_V_num_read,
        before_throttle_unified_dram_write_req_apply_V_addr_dout,
        before_throttle_unified_dram_write_req_apply_V_addr_empty_n,
        before_throttle_unified_dram_write_req_apply_V_addr_read,
        after_throttle_unified_dram_write_req_data_V_last_din,
        after_throttle_unified_dram_write_req_data_V_last_full_n,
        after_throttle_unified_dram_write_req_data_V_last_write,
        after_throttle_unified_dram_write_req_data_V_data_V_din,
        after_throttle_unified_dram_write_req_data_V_data_V_full_n,
        after_throttle_unified_dram_write_req_data_V_data_V_write,
        after_throttle_unified_dram_write_req_apply_V_num_din,
        after_throttle_unified_dram_write_req_apply_V_num_full_n,
        after_throttle_unified_dram_write_req_apply_V_num_write,
        after_throttle_unified_dram_write_req_apply_V_addr_din,
        after_throttle_unified_dram_write_req_apply_V_addr_full_n,
        after_throttle_unified_dram_write_req_apply_V_addr_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] drive_write_throttle_params_V_dout;
input   drive_write_throttle_params_V_empty_n;
output   drive_write_throttle_params_V_read;
input   before_throttle_unified_dram_write_req_data_V_last_dout;
input   before_throttle_unified_dram_write_req_data_V_last_empty_n;
output   before_throttle_unified_dram_write_req_data_V_last_read;
input  [511:0] before_throttle_unified_dram_write_req_data_V_data_V_dout;
input   before_throttle_unified_dram_write_req_data_V_data_V_empty_n;
output   before_throttle_unified_dram_write_req_data_V_data_V_read;
input  [7:0] before_throttle_unified_dram_write_req_apply_V_num_dout;
input   before_throttle_unified_dram_write_req_apply_V_num_empty_n;
output   before_throttle_unified_dram_write_req_apply_V_num_read;
input  [63:0] before_throttle_unified_dram_write_req_apply_V_addr_dout;
input   before_throttle_unified_dram_write_req_apply_V_addr_empty_n;
output   before_throttle_unified_dram_write_req_apply_V_addr_read;
output   after_throttle_unified_dram_write_req_data_V_last_din;
input   after_throttle_unified_dram_write_req_data_V_last_full_n;
output   after_throttle_unified_dram_write_req_data_V_last_write;
output  [511:0] after_throttle_unified_dram_write_req_data_V_data_V_din;
input   after_throttle_unified_dram_write_req_data_V_data_V_full_n;
output   after_throttle_unified_dram_write_req_data_V_data_V_write;
output  [7:0] after_throttle_unified_dram_write_req_apply_V_num_din;
input   after_throttle_unified_dram_write_req_apply_V_num_full_n;
output   after_throttle_unified_dram_write_req_apply_V_num_write;
output  [63:0] after_throttle_unified_dram_write_req_apply_V_addr_din;
input   after_throttle_unified_dram_write_req_apply_V_addr_full_n;
output   after_throttle_unified_dram_write_req_apply_V_addr_write;

reg ap_idle;
reg drive_write_throttle_params_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] throttle_threshold_reg_244;
reg   [31:0] throttle_cnt_reg_255;
reg   [0:0] valid_write_req_data_reg_266;
reg   [0:0] has_write_req_apply_reg_278;
reg   [7:0] p_010_0_s_reg_290;
reg   [63:0] p_010_1_s_reg_301;
reg   [0:0] empty_n_reg_712;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [15:0] throttle_cnt_2_fu_452_p1;
reg   [15:0] throttle_cnt_2_reg_721;
reg   [15:0] throttle_threshold_1_reg_726;
wire   [31:0] throttle_threshold_3_fu_489_p3;
reg   [31:0] throttle_threshold_3_reg_731;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] throttle_cnt_1_fu_496_p3;
reg   [31:0] throttle_cnt_1_reg_736;
wire   [0:0] write_req_stall_1_fu_508_p2;
wire   [0:0] empty_n_5_fu_522_p1;
reg   [0:0] empty_n_5_reg_745;
reg   [0:0] ap_phi_mux_has_write_req_apply_phi_fu_282_p4;
wire   [0:0] empty_n_4_fu_534_p1;
reg   [0:0] ap_phi_mux_valid_write_req_data_phi_fu_270_p4;
wire   [0:0] or_cond_fu_566_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_phi_mux_throttle_threshold_phi_fu_248_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_throttle_cnt_phi_fu_259_p4;
reg   [0:0] ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4;
reg   [0:0] ap_phi_mux_has_write_req_apply_3_phi_fu_372_p4;
reg   [7:0] ap_phi_mux_p_010_0_2_phi_fu_348_p4;
reg   [63:0] ap_phi_mux_p_010_1_2_phi_fu_360_p4;
reg   [7:0] ap_phi_mux_tmp_num_phi_fu_315_p4;
reg   [7:0] ap_phi_reg_pp0_iter2_tmp_num_reg_312;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_num_reg_312;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_num_reg_312;
reg   [63:0] ap_phi_mux_tmp_addr_phi_fu_326_p4;
reg   [63:0] ap_phi_reg_pp0_iter2_tmp_addr_reg_323;
wire   [63:0] ap_phi_reg_pp0_iter0_tmp_addr_reg_323;
reg   [63:0] ap_phi_reg_pp0_iter1_tmp_addr_reg_323;
reg   [0:0] ap_phi_mux_has_write_req_apply_1_phi_fu_337_p4;
reg   [0:0] ap_phi_reg_pp0_iter2_has_write_req_apply_1_reg_334;
wire   [0:0] ap_phi_reg_pp0_iter0_has_write_req_apply_1_reg_334;
reg   [0:0] ap_phi_reg_pp0_iter1_has_write_req_apply_1_reg_334;
reg   [7:0] ap_phi_reg_pp0_iter2_p_010_0_2_reg_344;
wire   [7:0] ap_phi_reg_pp0_iter0_p_010_0_2_reg_344;
reg   [7:0] ap_phi_reg_pp0_iter1_p_010_0_2_reg_344;
reg   [63:0] ap_phi_reg_pp0_iter2_p_010_1_2_reg_356;
wire   [63:0] ap_phi_reg_pp0_iter0_p_010_1_2_reg_356;
reg   [63:0] ap_phi_reg_pp0_iter1_p_010_1_2_reg_356;
wire   [0:0] p_has_write_req_apply_1_fu_652_p2;
reg   [0:0] ap_phi_reg_pp0_iter2_has_write_req_apply_3_reg_368;
wire   [0:0] ap_phi_reg_pp0_iter0_has_write_req_apply_3_reg_368;
reg   [0:0] ap_phi_reg_pp0_iter1_has_write_req_apply_3_reg_368;
wire   [0:0] ap_phi_mux_valid_write_req_data_3_phi_fu_384_p10;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_379;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_379;
reg   [0:0] ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379;
wire   [0:0] not_full_n_i_fu_667_p2;
wire   [0:0] ap_phi_reg_pp0_iter2_valid_write_req_data_5_reg_401;
reg    before_throttle_unified_dram_write_req_apply_V_num0_update;
wire   [0:0] empty_n_3_nbread_fu_208_p3_0;
reg    before_throttle_unified_dram_write_req_data_V_last0_update;
wire   [0:0] empty_n_2_nbread_fu_216_p3_0;
reg    after_throttle_unified_dram_write_req_apply_V_num1_update;
wire   [0:0] full_n_nbwrite_fu_224_p5;
wire    ap_block_pp0_stage0_01001;
reg    after_throttle_unified_dram_write_req_data_V_last1_update;
wire   [0:0] full_n_1_nbwrite_fu_234_p5;
reg   [31:0] write_req_stall_times_fu_182;
wire   [31:0] write_req_stall_times_1_fu_514_p3;
wire   [31:0] p_s_fu_623_p3;
reg   [0:0] write_req_stall_fu_186;
wire   [0:0] tmp_2_fu_576_p2;
wire   [0:0] not_s_fu_617_p2;
reg   [24:0] write_req_contiguous_times_V_1_fu_190;
wire   [24:0] p_1_fu_582_p3;
wire   [24:0] write_req_contiguous_times_V_fu_548_p2;
wire   [24:0] p_0_1_fu_481_p3;
reg   [0:0] tmp_last_fu_194;
reg   [511:0] tmp_data_V_fu_198;
wire   [31:0] throttle_threshold_2_fu_475_p1;
wire   [31:0] throttle_cnt_2_cast_fu_478_p1;
wire   [0:0] not_empty_n_fu_503_p2;
wire   [0:0] tmp_9_fu_554_p2;
wire   [0:0] tmp_s_fu_560_p2;
wire   [31:0] tmp_1_fu_572_p1;
wire   [31:0] write_req_stall_times_2_fu_605_p2;
wire   [0:0] tmp_6_fu_611_p2;
wire   [0:0] not_full_n_i7_fu_646_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_110;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_has_write_req_apply_1_reg_334 <= empty_n_3_nbread_fu_208_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_has_write_req_apply_1_reg_334 <= ap_phi_reg_pp0_iter1_has_write_req_apply_1_reg_334;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_has_write_req_apply_3_reg_368 <= empty_n_3_nbread_fu_208_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_has_write_req_apply_3_reg_368 <= ap_phi_reg_pp0_iter1_has_write_req_apply_3_reg_368;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_010_0_2_reg_344 <= before_throttle_unified_dram_write_req_apply_V_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_010_0_2_reg_344 <= ap_phi_reg_pp0_iter1_p_010_0_2_reg_344;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_p_010_1_2_reg_356 <= before_throttle_unified_dram_write_req_apply_V_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_p_010_1_2_reg_356 <= ap_phi_reg_pp0_iter1_p_010_1_2_reg_356;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_tmp_addr_reg_323 <= before_throttle_unified_dram_write_req_apply_V_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_addr_reg_323 <= ap_phi_reg_pp0_iter1_tmp_addr_reg_323;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_110)) begin
        if (((ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0) & (empty_n_5_fu_522_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter2_tmp_num_reg_312 <= before_throttle_unified_dram_write_req_apply_V_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_tmp_num_reg_312 <= ap_phi_reg_pp0_iter1_tmp_num_reg_312;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_n_4_fu_534_p1 == 1'd1) & (or_cond_fu_566_p2 == 1'd0) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_fu_566_p2 == 1'd1) & (empty_n_4_fu_534_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)))) begin
        ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379 <= 1'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (empty_n_4_fu_534_p1 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)))) begin
        ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd1))) begin
        ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379 <= ap_phi_mux_valid_write_req_data_phi_fu_270_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379 <= ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        has_write_req_apply_reg_278 <= ap_phi_mux_has_write_req_apply_3_phi_fu_372_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        has_write_req_apply_reg_278 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        throttle_cnt_reg_255 <= throttle_cnt_1_reg_736;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        throttle_cnt_reg_255 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        throttle_threshold_reg_244 <= throttle_threshold_3_reg_731;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        throttle_threshold_reg_244 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        valid_write_req_data_reg_266 <= ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_write_req_data_reg_266 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd1)))) begin
        write_req_contiguous_times_V_1_fu_190 <= p_0_1_fu_481_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_fu_566_p2 == 1'd1) & (empty_n_4_fu_534_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0))) begin
        write_req_contiguous_times_V_1_fu_190 <= write_req_contiguous_times_V_fu_548_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_n_4_fu_534_p1 == 1'd1) & (or_cond_fu_566_p2 == 1'd0) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0))) begin
        write_req_contiguous_times_V_1_fu_190 <= p_1_fu_582_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (empty_n_4_fu_534_p1 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        write_req_contiguous_times_V_1_fu_190 <= 25'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd1))) begin
        write_req_stall_fu_186 <= write_req_stall_1_fu_508_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd1))) begin
        write_req_stall_fu_186 <= not_s_fu_617_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_n_4_fu_534_p1 == 1'd1) & (or_cond_fu_566_p2 == 1'd0) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0))) begin
        write_req_stall_fu_186 <= tmp_2_fu_576_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (empty_n_4_fu_534_p1 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_fu_566_p2 == 1'd1) & (empty_n_4_fu_534_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        write_req_stall_fu_186 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd1))) begin
        write_req_stall_times_fu_182 <= p_s_fu_623_p3;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (empty_n_4_fu_534_p1 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_n_4_fu_534_p1 == 1'd1) & (or_cond_fu_566_p2 == 1'd0) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_fu_566_p2 == 1'd1) & (empty_n_4_fu_534_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)))) begin
        write_req_stall_times_fu_182 <= write_req_stall_times_1_fu_514_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        write_req_stall_times_fu_182 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        ap_phi_reg_pp0_iter1_has_write_req_apply_1_reg_334 <= ap_phi_reg_pp0_iter0_has_write_req_apply_1_reg_334;
        ap_phi_reg_pp0_iter1_has_write_req_apply_3_reg_368 <= ap_phi_reg_pp0_iter0_has_write_req_apply_3_reg_368;
        ap_phi_reg_pp0_iter1_p_010_0_2_reg_344 <= ap_phi_reg_pp0_iter0_p_010_0_2_reg_344;
        ap_phi_reg_pp0_iter1_p_010_1_2_reg_356 <= ap_phi_reg_pp0_iter0_p_010_1_2_reg_356;
        ap_phi_reg_pp0_iter1_tmp_addr_reg_323 <= ap_phi_reg_pp0_iter0_tmp_addr_reg_323;
        ap_phi_reg_pp0_iter1_tmp_num_reg_312 <= ap_phi_reg_pp0_iter0_tmp_num_reg_312;
        ap_phi_reg_pp0_iter1_valid_write_req_data_3_reg_379 <= ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_379;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0))) begin
        empty_n_5_reg_745 <= empty_n_3_nbread_fu_208_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_n_reg_712 <= drive_write_throttle_params_V_empty_n;
        throttle_cnt_2_reg_721 <= throttle_cnt_2_fu_452_p1;
        throttle_threshold_1_reg_726 <= {{drive_write_throttle_params_V_dout[31:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_010_0_s_reg_290 <= ap_phi_mux_p_010_0_2_phi_fu_348_p4;
        p_010_1_s_reg_301 <= ap_phi_mux_p_010_1_2_phi_fu_360_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        throttle_cnt_1_reg_736 <= throttle_cnt_1_fu_496_p3;
        throttle_threshold_3_reg_731 <= throttle_threshold_3_fu_489_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (empty_n_4_fu_534_p1 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_n_4_fu_534_p1 == 1'd1) & (or_cond_fu_566_p2 == 1'd0) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_cond_fu_566_p2 == 1'd1) & (empty_n_4_fu_534_p1 == 1'd1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0)))) begin
        tmp_data_V_fu_198 <= before_throttle_unified_dram_write_req_data_V_data_V_dout;
        tmp_last_fu_194 <= before_throttle_unified_dram_write_req_data_V_last_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((after_throttle_unified_dram_write_req_apply_V_num_full_n & after_throttle_unified_dram_write_req_apply_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & ((has_write_req_apply_reg_278 == 1'd1) | (empty_n_5_reg_745 == 1'd1)))) begin
        after_throttle_unified_dram_write_req_apply_V_num1_update = 1'b1;
    end else begin
        after_throttle_unified_dram_write_req_apply_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((after_throttle_unified_dram_write_req_data_V_last_full_n & after_throttle_unified_dram_write_req_data_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_phi_mux_valid_write_req_data_3_phi_fu_384_p10 == 1'd1))) begin
        after_throttle_unified_dram_write_req_data_V_last1_update = 1'b1;
    end else begin
        after_throttle_unified_dram_write_req_data_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((has_write_req_apply_reg_278 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_has_write_req_apply_1_phi_fu_337_p4 = has_write_req_apply_reg_278;
    end else begin
        ap_phi_mux_has_write_req_apply_1_phi_fu_337_p4 = ap_phi_reg_pp0_iter2_has_write_req_apply_1_reg_334;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((has_write_req_apply_reg_278 == 1'd1) | (empty_n_5_reg_745 == 1'd1)))) begin
        ap_phi_mux_has_write_req_apply_3_phi_fu_372_p4 = p_has_write_req_apply_1_fu_652_p2;
    end else begin
        ap_phi_mux_has_write_req_apply_3_phi_fu_372_p4 = ap_phi_reg_pp0_iter2_has_write_req_apply_3_reg_368;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_has_write_req_apply_phi_fu_282_p4 = ap_phi_mux_has_write_req_apply_3_phi_fu_372_p4;
    end else begin
        ap_phi_mux_has_write_req_apply_phi_fu_282_p4 = has_write_req_apply_reg_278;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((has_write_req_apply_reg_278 == 1'd1) | (empty_n_5_reg_745 == 1'd1)))) begin
        ap_phi_mux_p_010_0_2_phi_fu_348_p4 = ap_phi_mux_tmp_num_phi_fu_315_p4;
    end else begin
        ap_phi_mux_p_010_0_2_phi_fu_348_p4 = ap_phi_reg_pp0_iter2_p_010_0_2_reg_344;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & ((has_write_req_apply_reg_278 == 1'd1) | (empty_n_5_reg_745 == 1'd1)))) begin
        ap_phi_mux_p_010_1_2_phi_fu_360_p4 = ap_phi_mux_tmp_addr_phi_fu_326_p4;
    end else begin
        ap_phi_mux_p_010_1_2_phi_fu_360_p4 = ap_phi_reg_pp0_iter2_p_010_1_2_reg_356;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_throttle_cnt_phi_fu_259_p4 = throttle_cnt_1_reg_736;
    end else begin
        ap_phi_mux_throttle_cnt_phi_fu_259_p4 = throttle_cnt_reg_255;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_throttle_threshold_phi_fu_248_p4 = throttle_threshold_3_reg_731;
    end else begin
        ap_phi_mux_throttle_threshold_phi_fu_248_p4 = throttle_threshold_reg_244;
    end
end

always @ (*) begin
    if (((has_write_req_apply_reg_278 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_tmp_addr_phi_fu_326_p4 = p_010_1_s_reg_301;
    end else begin
        ap_phi_mux_tmp_addr_phi_fu_326_p4 = ap_phi_reg_pp0_iter2_tmp_addr_reg_323;
    end
end

always @ (*) begin
    if (((has_write_req_apply_reg_278 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_tmp_num_phi_fu_315_p4 = p_010_0_s_reg_290;
    end else begin
        ap_phi_mux_tmp_num_phi_fu_315_p4 = ap_phi_reg_pp0_iter2_tmp_num_reg_312;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((ap_phi_mux_valid_write_req_data_3_phi_fu_384_p10 == 1'd0)) begin
            ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4 = ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379;
        end else if ((ap_phi_mux_valid_write_req_data_3_phi_fu_384_p10 == 1'd1)) begin
            ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4 = not_full_n_i_fu_667_p2;
        end else begin
            ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4 = ap_phi_reg_pp0_iter2_valid_write_req_data_5_reg_401;
        end
    end else begin
        ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4 = ap_phi_reg_pp0_iter2_valid_write_req_data_5_reg_401;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_valid_write_req_data_phi_fu_270_p4 = ap_phi_mux_valid_write_req_data_5_phi_fu_405_p4;
    end else begin
        ap_phi_mux_valid_write_req_data_phi_fu_270_p4 = valid_write_req_data_reg_266;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((before_throttle_unified_dram_write_req_apply_V_num_empty_n & before_throttle_unified_dram_write_req_apply_V_addr_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_has_write_req_apply_phi_fu_282_p4 == 1'd0))) begin
        before_throttle_unified_dram_write_req_apply_V_num0_update = 1'b1;
    end else begin
        before_throttle_unified_dram_write_req_apply_V_num0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((before_throttle_unified_dram_write_req_data_V_last_empty_n & before_throttle_unified_dram_write_req_data_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_phi_mux_valid_write_req_data_phi_fu_270_p4 == 1'd0) & (write_req_stall_1_fu_508_p2 == 1'd0))) begin
        before_throttle_unified_dram_write_req_data_V_last0_update = 1'b1;
    end else begin
        before_throttle_unified_dram_write_req_data_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (drive_write_throttle_params_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        drive_write_throttle_params_V_read = 1'b1;
    end else begin
        drive_write_throttle_params_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign after_throttle_unified_dram_write_req_apply_V_addr_din = ap_phi_mux_tmp_addr_phi_fu_326_p4;

assign after_throttle_unified_dram_write_req_apply_V_addr_write = after_throttle_unified_dram_write_req_apply_V_num1_update;

assign after_throttle_unified_dram_write_req_apply_V_num_din = ap_phi_mux_tmp_num_phi_fu_315_p4;

assign after_throttle_unified_dram_write_req_apply_V_num_write = after_throttle_unified_dram_write_req_apply_V_num1_update;

assign after_throttle_unified_dram_write_req_data_V_data_V_din = tmp_data_V_fu_198;

assign after_throttle_unified_dram_write_req_data_V_data_V_write = after_throttle_unified_dram_write_req_data_V_last1_update;

assign after_throttle_unified_dram_write_req_data_V_last_din = tmp_last_fu_194;

assign after_throttle_unified_dram_write_req_data_V_last_write = after_throttle_unified_dram_write_req_data_V_last1_update;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_110 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_valid_write_req_data_3_phi_fu_384_p10 = ap_phi_reg_pp0_iter2_valid_write_req_data_3_reg_379;

assign ap_phi_reg_pp0_iter0_has_write_req_apply_1_reg_334 = 'bx;

assign ap_phi_reg_pp0_iter0_has_write_req_apply_3_reg_368 = 'bx;

assign ap_phi_reg_pp0_iter0_p_010_0_2_reg_344 = 'bx;

assign ap_phi_reg_pp0_iter0_p_010_1_2_reg_356 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_addr_reg_323 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num_reg_312 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_write_req_data_3_reg_379 = 'bx;

assign ap_phi_reg_pp0_iter2_valid_write_req_data_5_reg_401 = 'bx;

assign ap_ready = 1'b0;

assign before_throttle_unified_dram_write_req_apply_V_addr_read = before_throttle_unified_dram_write_req_apply_V_num0_update;

assign before_throttle_unified_dram_write_req_apply_V_num_read = before_throttle_unified_dram_write_req_apply_V_num0_update;

assign before_throttle_unified_dram_write_req_data_V_data_V_read = before_throttle_unified_dram_write_req_data_V_last0_update;

assign before_throttle_unified_dram_write_req_data_V_last_read = before_throttle_unified_dram_write_req_data_V_last0_update;

assign empty_n_2_nbread_fu_216_p3_0 = (before_throttle_unified_dram_write_req_data_V_last_empty_n & before_throttle_unified_dram_write_req_data_V_data_V_empty_n);

assign empty_n_3_nbread_fu_208_p3_0 = (before_throttle_unified_dram_write_req_apply_V_num_empty_n & before_throttle_unified_dram_write_req_apply_V_addr_empty_n);

assign empty_n_4_fu_534_p1 = empty_n_2_nbread_fu_216_p3_0;

assign empty_n_5_fu_522_p1 = empty_n_3_nbread_fu_208_p3_0;

assign full_n_1_nbwrite_fu_234_p5 = (after_throttle_unified_dram_write_req_data_V_last_full_n & after_throttle_unified_dram_write_req_data_V_data_V_full_n);

assign full_n_nbwrite_fu_224_p5 = (after_throttle_unified_dram_write_req_apply_V_num_full_n & after_throttle_unified_dram_write_req_apply_V_addr_full_n);

assign not_empty_n_fu_503_p2 = (empty_n_reg_712 ^ 1'd1);

assign not_full_n_i7_fu_646_p2 = (full_n_nbwrite_fu_224_p5 ^ 1'd1);

assign not_full_n_i_fu_667_p2 = (full_n_1_nbwrite_fu_234_p5 ^ 1'd1);

assign not_s_fu_617_p2 = (tmp_6_fu_611_p2 ^ 1'd1);

assign or_cond_fu_566_p2 = (tmp_s_fu_560_p2 | tmp_9_fu_554_p2);

assign p_0_1_fu_481_p3 = ((empty_n_reg_712[0:0] === 1'b1) ? 25'd0 : write_req_contiguous_times_V_1_fu_190);

assign p_1_fu_582_p3 = ((tmp_2_fu_576_p2[0:0] === 1'b1) ? 25'd0 : write_req_contiguous_times_V_fu_548_p2);

assign p_has_write_req_apply_1_fu_652_p2 = (not_full_n_i7_fu_646_p2 & ap_phi_mux_has_write_req_apply_1_phi_fu_337_p4);

assign p_s_fu_623_p3 = ((tmp_6_fu_611_p2[0:0] === 1'b1) ? 32'd0 : write_req_stall_times_2_fu_605_p2);

assign throttle_cnt_1_fu_496_p3 = ((empty_n_reg_712[0:0] === 1'b1) ? throttle_cnt_2_cast_fu_478_p1 : ap_phi_mux_throttle_cnt_phi_fu_259_p4);

assign throttle_cnt_2_cast_fu_478_p1 = throttle_cnt_2_reg_721;

assign throttle_cnt_2_fu_452_p1 = drive_write_throttle_params_V_dout[15:0];

assign throttle_threshold_2_fu_475_p1 = throttle_threshold_1_reg_726;

assign throttle_threshold_3_fu_489_p3 = ((empty_n_reg_712[0:0] === 1'b1) ? throttle_threshold_2_fu_475_p1 : ap_phi_mux_throttle_threshold_phi_fu_248_p4);

assign tmp_1_fu_572_p1 = write_req_contiguous_times_V_fu_548_p2;

assign tmp_2_fu_576_p2 = ((tmp_1_fu_572_p1 == throttle_threshold_3_fu_489_p3) ? 1'b1 : 1'b0);

assign tmp_6_fu_611_p2 = ((write_req_stall_times_2_fu_605_p2 == throttle_cnt_1_fu_496_p3) ? 1'b1 : 1'b0);

assign tmp_9_fu_554_p2 = ((throttle_threshold_3_fu_489_p3 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_560_p2 = ((throttle_cnt_1_fu_496_p3 == 32'd0) ? 1'b1 : 1'b0);

assign write_req_contiguous_times_V_fu_548_p2 = (p_0_1_fu_481_p3 + 25'd1);

assign write_req_stall_1_fu_508_p2 = (write_req_stall_fu_186 & not_empty_n_fu_503_p2);

assign write_req_stall_times_1_fu_514_p3 = ((empty_n_reg_712[0:0] === 1'b1) ? 32'd0 : write_req_stall_times_fu_182);

assign write_req_stall_times_2_fu_605_p2 = (write_req_stall_times_1_fu_514_p3 + 32'd1);

endmodule //dram_write_throttle_unit
