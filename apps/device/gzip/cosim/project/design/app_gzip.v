// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="app_gzip,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.335250,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=677,HLS_SYN_DSP=0,HLS_SYN_FF=41532,HLS_SYN_LUT=147942}" *)

module app_gzip (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        reset_app_gzip_V_dout,
        reset_app_gzip_V_empty_n,
        reset_app_gzip_V_read,
        app_input_data_V_data_V_dout,
        app_input_data_V_data_V_empty_n,
        app_input_data_V_data_V_read,
        app_input_data_V_len_dout,
        app_input_data_V_len_empty_n,
        app_input_data_V_len_read,
        app_input_data_V_eop_dout,
        app_input_data_V_eop_empty_n,
        app_input_data_V_eop_read,
        app_output_data_V_data_V_din,
        app_output_data_V_data_V_full_n,
        app_output_data_V_data_V_write,
        app_output_data_V_len_din,
        app_output_data_V_len_full_n,
        app_output_data_V_len_write,
        app_output_data_V_eop_din,
        app_output_data_V_eop_full_n,
        app_output_data_V_eop_write,
        app_input_params_V_dout,
        app_input_params_V_empty_n,
        app_input_params_V_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input   reset_app_gzip_V_dout;
input   reset_app_gzip_V_empty_n;
output   reset_app_gzip_V_read;
input  [511:0] app_input_data_V_data_V_dout;
input   app_input_data_V_data_V_empty_n;
output   app_input_data_V_data_V_read;
input  [15:0] app_input_data_V_len_dout;
input   app_input_data_V_len_empty_n;
output   app_input_data_V_len_read;
input   app_input_data_V_eop_dout;
input   app_input_data_V_eop_empty_n;
output   app_input_data_V_eop_read;
output  [511:0] app_output_data_V_data_V_din;
input   app_output_data_V_data_V_full_n;
output   app_output_data_V_data_V_write;
output  [15:0] app_output_data_V_len_din;
input   app_output_data_V_len_full_n;
output   app_output_data_V_len_write;
output   app_output_data_V_eop_din;
input   app_output_data_V_eop_full_n;
output   app_output_data_V_eop_write;
input  [31:0] app_input_params_V_dout;
input   app_input_params_V_empty_n;
output   app_input_params_V_read;

reg ap_idle;
reg reset_app_gzip_V_read;
reg app_input_data_V_data_V_read;
reg app_input_data_V_len_read;
reg app_input_data_V_eop_read;
reg app_output_data_V_data_V_write;
reg app_output_data_V_len_write;
reg app_output_data_V_eop_write;
reg app_input_params_V_read;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] empty_n_4_fu_431_p1;
reg   [0:0] empty_n_4_reg_580;
wire    ap_CS_fsm_state2;
wire   [0:0] ap_phi_mux_reset_phi_fu_268_p4;
wire   [0:0] tmp_129_fu_438_p2;
reg   [0:0] tmp_129_reg_585;
wire   [0:0] tmp_130_fu_444_p2;
reg   [0:0] tmp_130_reg_589;
wire   [0:0] grp_fu_413_p1;
reg   [0:0] empty_n_3_reg_593;
wire   [39:0] truncated_input_size_V_fu_491_p3;
reg   [39:0] truncated_input_size_V_reg_597;
wire    grp_gzip_fu_311_app_input_data_V_data_V_read;
wire    grp_gzip_fu_311_app_input_data_V_len_read;
wire    grp_gzip_fu_311_app_input_data_V_eop_read;
wire   [511:0] grp_gzip_fu_311_app_output_data_V_data_V_din;
wire    grp_gzip_fu_311_app_output_data_V_data_V_write;
wire   [15:0] grp_gzip_fu_311_app_output_data_V_len_din;
wire    grp_gzip_fu_311_app_output_data_V_len_write;
wire    grp_gzip_fu_311_app_output_data_V_eop_din;
wire    grp_gzip_fu_311_app_output_data_V_eop_write;
wire    grp_gzip_fu_311_ap_done;
wire    grp_gzip_fu_311_ap_start;
wire    grp_gzip_fu_311_ap_ready;
wire    grp_gzip_fu_311_ap_idle;
reg    grp_gzip_fu_311_ap_continue;
reg   [0:0] reset_reg_264;
reg   [0:0] ap_phi_mux_reset_be_phi_fu_291_p12;
wire    ap_CS_fsm_state3;
reg    ap_predicate_op63_call_state3;
reg    ap_block_state3_on_subcall_done;
reg   [0:0] reset_1_reg_276;
wire   [0:0] p_reset_1_fu_539_p2;
reg   [0:0] reset_be_reg_286;
reg    ap_reg_grp_gzip_fu_311_ap_start;
reg    ap_sync_reg_grp_gzip_fu_311_ap_ready;
reg    ap_sync_grp_gzip_fu_311_ap_ready;
reg   [31:0] reset_cnt_fu_240;
wire   [31:0] p_s_fu_546_p3;
reg   [63:0] input_size_fu_244;
wire   [63:0] input_size_2_fu_473_p3;
wire   [63:0] input_size_1_fu_505_p3;
reg   [1:0] state_fu_248;
wire   [31:0] tmp_fu_453_p1;
wire   [31:0] tmp_132_fu_463_p4;
wire   [31:0] tmp_131_fu_457_p2;
wire   [7:0] tmp_133_fu_481_p4;
wire   [31:0] reset_cnt_1_fu_521_p2;
wire   [0:0] tmp_s_fu_527_p2;
wire   [0:0] not_s_fu_533_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_132;
reg    ap_condition_683;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_reg_grp_gzip_fu_311_ap_start = 1'b0;
#0 ap_sync_reg_grp_gzip_fu_311_ap_ready = 1'b0;
end

gzip grp_gzip_fu_311(
    .app_input_data_V_data_V_dout(app_input_data_V_data_V_dout),
    .app_input_data_V_data_V_empty_n(app_input_data_V_data_V_empty_n),
    .app_input_data_V_data_V_read(grp_gzip_fu_311_app_input_data_V_data_V_read),
    .app_input_data_V_len_dout(app_input_data_V_len_dout),
    .app_input_data_V_len_empty_n(app_input_data_V_len_empty_n),
    .app_input_data_V_len_read(grp_gzip_fu_311_app_input_data_V_len_read),
    .app_input_data_V_eop_dout(app_input_data_V_eop_dout),
    .app_input_data_V_eop_empty_n(app_input_data_V_eop_empty_n),
    .app_input_data_V_eop_read(grp_gzip_fu_311_app_input_data_V_eop_read),
    .app_output_data_V_data_V_din(grp_gzip_fu_311_app_output_data_V_data_V_din),
    .app_output_data_V_data_V_full_n(app_output_data_V_data_V_full_n),
    .app_output_data_V_data_V_write(grp_gzip_fu_311_app_output_data_V_data_V_write),
    .app_output_data_V_len_din(grp_gzip_fu_311_app_output_data_V_len_din),
    .app_output_data_V_len_full_n(app_output_data_V_len_full_n),
    .app_output_data_V_len_write(grp_gzip_fu_311_app_output_data_V_len_write),
    .app_output_data_V_eop_din(grp_gzip_fu_311_app_output_data_V_eop_din),
    .app_output_data_V_eop_full_n(app_output_data_V_eop_full_n),
    .app_output_data_V_eop_write(grp_gzip_fu_311_app_output_data_V_eop_write),
    .input_size_V(truncated_input_size_V_reg_597),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .input_size_V_ap_vld(1'b1),
    .ap_done(grp_gzip_fu_311_ap_done),
    .ap_start(grp_gzip_fu_311_ap_start),
    .ap_ready(grp_gzip_fu_311_ap_ready),
    .ap_idle(grp_gzip_fu_311_ap_idle),
    .ap_continue(grp_gzip_fu_311_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_gzip_fu_311_ap_start <= 1'b0;
    end else begin
        if ((((grp_fu_413_p1 == 1'd1) & (tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_sync_grp_gzip_fu_311_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1)))) begin
            ap_reg_grp_gzip_fu_311_ap_start <= 1'b1;
        end else if ((grp_gzip_fu_311_ap_ready == 1'b1)) begin
            ap_reg_grp_gzip_fu_311_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_gzip_fu_311_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
            if ((1'b0 == ap_block_state3_on_subcall_done)) begin
                ap_sync_reg_grp_gzip_fu_311_ap_ready <= 1'b0;
            end else if ((grp_gzip_fu_311_ap_ready == 1'b1)) begin
                ap_sync_reg_grp_gzip_fu_311_ap_ready <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_683)) begin
        if ((tmp_129_fu_438_p2 == 1'd1)) begin
            input_size_fu_244 <= input_size_1_fu_505_p3;
        end else if (((tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0))) begin
            input_size_fu_244 <= input_size_2_fu_473_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if (((ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd1))) begin
            reset_1_reg_276 <= reset_app_gzip_V_empty_n;
        end else if ((ap_phi_mux_reset_phi_fu_268_p4 == 1'd1)) begin
            reset_1_reg_276 <= reset_reg_264;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_413_p1 == 1'd1) & (tmp_129_fu_438_p2 == 1'd1) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_130_fu_444_p2 == 1'd1) & (grp_fu_413_p1 == 1'd0) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_130_fu_444_p2 == 1'd0) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_129_fu_438_p2 == 1'd1) & (grp_fu_413_p1 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((empty_n_3_reg_593 == 1'd1) & (tmp_130_reg_589 == 1'd1) & (tmp_129_reg_585 == 1'd0) & (reset_reg_264 == 1'd0) & (empty_n_4_reg_580 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done)))) begin
        reset_be_reg_286 <= 1'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done) & ((reset_reg_264 == 1'd1) | (empty_n_4_reg_580 == 1'd1)))) begin
        reset_be_reg_286 <= p_reset_1_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done) & ((reset_reg_264 == 1'd1) | (empty_n_4_reg_580 == 1'd1)))) begin
        reset_cnt_fu_240 <= p_s_fu_546_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_cnt_fu_240 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        reset_reg_264 <= ap_phi_mux_reset_be_phi_fu_291_p12;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_reg_264 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_fu_413_p1 == 1'd1) & (tmp_129_fu_438_p2 == 1'd1) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_130_fu_444_p2 == 1'd1) & (grp_fu_413_p1 == 1'd0) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
                state_fu_248[0] <= 1'b1;
    end else if ((((grp_fu_413_p1 == 1'd1) & (tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((tmp_129_fu_438_p2 == 1'd1) & (grp_fu_413_p1 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done) & ((reset_reg_264 == 1'd1) | (empty_n_4_reg_580 == 1'd1))))) begin
                state_fu_248[0] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_n_3_reg_593 <= app_input_params_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_n_4_reg_580 <= reset_app_gzip_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_129_reg_585 <= tmp_129_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_130_reg_589 <= tmp_130_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_413_p1 == 1'd1) & (tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        truncated_input_size_V_reg_597 <= truncated_input_size_V_fu_491_p3;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        if ((1'b1 == ap_condition_132)) begin
            ap_phi_mux_reset_be_phi_fu_291_p12 = 1'd0;
        end else if (((reset_reg_264 == 1'd1) | (empty_n_4_reg_580 == 1'd1))) begin
            ap_phi_mux_reset_be_phi_fu_291_p12 = p_reset_1_fu_539_p2;
        end else begin
            ap_phi_mux_reset_be_phi_fu_291_p12 = reset_be_reg_286;
        end
    end else begin
        ap_phi_mux_reset_be_phi_fu_291_p12 = reset_be_reg_286;
    end
end

always @ (*) begin
    if ((ap_sync_reg_grp_gzip_fu_311_ap_ready == 1'b0)) begin
        ap_sync_grp_gzip_fu_311_ap_ready = grp_gzip_fu_311_ap_ready;
    end else begin
        ap_sync_grp_gzip_fu_311_ap_ready = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_input_data_V_data_V_read = grp_gzip_fu_311_app_input_data_V_data_V_read;
    end else begin
        app_input_data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_input_data_V_eop_read = grp_gzip_fu_311_app_input_data_V_eop_read;
    end else begin
        app_input_data_V_eop_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_input_data_V_len_read = grp_gzip_fu_311_app_input_data_V_len_read;
    end else begin
        app_input_data_V_len_read = 1'b0;
    end
end

always @ (*) begin
    if (((app_input_params_V_empty_n == 1'b1) & (((app_input_params_V_empty_n == 1'b1) & (((tmp_130_fu_444_p2 == 1'd1) & (tmp_129_fu_438_p2 == 1'd0) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (app_input_params_V_empty_n == 1'b1)) | ((tmp_129_fu_438_p2 == 1'd1) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) | ((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done) & ((reset_reg_264 == 1'd1) | (empty_n_4_reg_580 == 1'd1)))))) begin
        app_input_params_V_read = 1'b1;
    end else begin
        app_input_params_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_output_data_V_data_V_write = grp_gzip_fu_311_app_output_data_V_data_V_write;
    end else begin
        app_output_data_V_data_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_output_data_V_eop_write = grp_gzip_fu_311_app_output_data_V_eop_write;
    end else begin
        app_output_data_V_eop_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1))) begin
        app_output_data_V_len_write = grp_gzip_fu_311_app_output_data_V_len_write;
    end else begin
        app_output_data_V_len_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (ap_predicate_op63_call_state3 == 1'b1) & (1'b0 == ap_block_state3_on_subcall_done))) begin
        grp_gzip_fu_311_ap_continue = 1'b1;
    end else begin
        grp_gzip_fu_311_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (reset_app_gzip_V_empty_n == 1'b1))) begin
        reset_app_gzip_V_read = 1'b1;
    end else begin
        reset_app_gzip_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (1'b0 == ap_block_state3_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3_on_subcall_done = ((grp_gzip_fu_311_ap_done == 1'b0) & (ap_predicate_op63_call_state3 == 1'b1));
end

always @ (*) begin
    ap_condition_132 = ((empty_n_3_reg_593 == 1'd1) & (tmp_130_reg_589 == 1'd1) & (tmp_129_reg_585 == 1'd0) & (reset_reg_264 == 1'd0) & (empty_n_4_reg_580 == 1'd0));
end

always @ (*) begin
    ap_condition_683 = ((grp_fu_413_p1 == 1'd1) & (ap_phi_mux_reset_phi_fu_268_p4 == 1'd0) & (empty_n_4_fu_431_p1 == 1'd0) & (1'b1 == ap_CS_fsm_state2));
end

assign ap_done = 1'b0;

assign ap_phi_mux_reset_phi_fu_268_p4 = reset_reg_264;

always @ (*) begin
    ap_predicate_op63_call_state3 = ((empty_n_3_reg_593 == 1'd1) & (tmp_130_reg_589 == 1'd1) & (tmp_129_reg_585 == 1'd0) & (reset_reg_264 == 1'd0) & (empty_n_4_reg_580 == 1'd0));
end

assign ap_ready = 1'b0;

assign app_output_data_V_data_V_din = grp_gzip_fu_311_app_output_data_V_data_V_din;

assign app_output_data_V_eop_din = grp_gzip_fu_311_app_output_data_V_eop_din;

assign app_output_data_V_len_din = grp_gzip_fu_311_app_output_data_V_len_din;

assign empty_n_4_fu_431_p1 = reset_app_gzip_V_empty_n;

assign grp_fu_413_p1 = app_input_params_V_empty_n;

assign grp_gzip_fu_311_ap_start = ap_reg_grp_gzip_fu_311_ap_start;

assign input_size_1_fu_505_p3 = {{app_input_params_V_dout}, {32'd0}};

assign input_size_2_fu_473_p3 = {{tmp_132_fu_463_p4}, {tmp_131_fu_457_p2}};

assign not_s_fu_533_p2 = (tmp_s_fu_527_p2 ^ 1'd1);

assign p_reset_1_fu_539_p2 = (reset_1_reg_276 & not_s_fu_533_p2);

assign p_s_fu_546_p3 = ((tmp_s_fu_527_p2[0:0] === 1'b1) ? 32'd0 : reset_cnt_1_fu_521_p2);

assign reset_cnt_1_fu_521_p2 = (reset_cnt_fu_240 + 32'd1);

assign tmp_129_fu_438_p2 = ((state_fu_248 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_130_fu_444_p2 = ((state_fu_248 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_131_fu_457_p2 = (tmp_fu_453_p1 | app_input_params_V_dout);

assign tmp_132_fu_463_p4 = {{input_size_fu_244[63:32]}};

assign tmp_133_fu_481_p4 = {{input_size_fu_244[39:32]}};

assign tmp_fu_453_p1 = input_size_fu_244[31:0];

assign tmp_s_fu_527_p2 = ((reset_cnt_1_fu_521_p2 == 32'd2048) ? 1'b1 : 1'b0);

assign truncated_input_size_V_fu_491_p3 = {{tmp_133_fu_481_p4}, {tmp_131_fu_457_p2}};

always @ (posedge ap_clk) begin
    state_fu_248[1] <= 1'b0;
end

endmodule //app_gzip
