// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="pipe1_data_handler,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.692500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1816,HLS_SYN_LUT=1054}" *)

module pipe1_data_handler (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        rd_reqs_pipe1_read_V_sector_off_dout,
        rd_reqs_pipe1_read_V_sector_off_empty_n,
        rd_reqs_pipe1_read_V_sector_off_read,
        rd_reqs_pipe1_read_V_sector_num_dout,
        rd_reqs_pipe1_read_V_sector_num_empty_n,
        rd_reqs_pipe1_read_V_sector_num_read,
        rd_reqs_pipe1_read_V_tag_dout,
        rd_reqs_pipe1_read_V_tag_empty_n,
        rd_reqs_pipe1_read_V_tag_read,
        rd_reqs_pipe1_read_V_rw_dout,
        rd_reqs_pipe1_read_V_rw_empty_n,
        rd_reqs_pipe1_read_V_rw_read,
        wr_reqs_pipe1_read_V_sector_off_dout,
        wr_reqs_pipe1_read_V_sector_off_empty_n,
        wr_reqs_pipe1_read_V_sector_off_read,
        wr_reqs_pipe1_read_V_sector_num_dout,
        wr_reqs_pipe1_read_V_sector_num_empty_n,
        wr_reqs_pipe1_read_V_sector_num_read,
        wr_reqs_pipe1_read_V_tag_dout,
        wr_reqs_pipe1_read_V_tag_empty_n,
        wr_reqs_pipe1_read_V_tag_read,
        wr_reqs_pipe1_read_V_rw_dout,
        wr_reqs_pipe1_read_V_rw_empty_n,
        wr_reqs_pipe1_read_V_rw_read,
        host_dram_read_resp_V_last_dout,
        host_dram_read_resp_V_last_empty_n,
        host_dram_read_resp_V_last_read,
        host_dram_read_resp_V_data_V_dout,
        host_dram_read_resp_V_data_V_empty_n,
        host_dram_read_resp_V_data_V_read,
        pcie_read_resp_V_last_dout,
        pcie_read_resp_V_last_empty_n,
        pcie_read_resp_V_last_read,
        pcie_read_resp_V_data_V_dout,
        pcie_read_resp_V_data_V_empty_n,
        pcie_read_resp_V_data_V_read,
        rd_reqs_pipe1_write_V_sector_off_din,
        rd_reqs_pipe1_write_V_sector_off_full_n,
        rd_reqs_pipe1_write_V_sector_off_write,
        rd_reqs_pipe1_write_V_sector_num_din,
        rd_reqs_pipe1_write_V_sector_num_full_n,
        rd_reqs_pipe1_write_V_sector_num_write,
        rd_reqs_pipe1_write_V_tag_din,
        rd_reqs_pipe1_write_V_tag_full_n,
        rd_reqs_pipe1_write_V_tag_write,
        rd_reqs_pipe1_write_V_rw_din,
        rd_reqs_pipe1_write_V_rw_full_n,
        rd_reqs_pipe1_write_V_rw_write,
        wr_reqs_pipe1_write_V_sector_off_din,
        wr_reqs_pipe1_write_V_sector_off_full_n,
        wr_reqs_pipe1_write_V_sector_off_write,
        wr_reqs_pipe1_write_V_sector_num_din,
        wr_reqs_pipe1_write_V_sector_num_full_n,
        wr_reqs_pipe1_write_V_sector_num_write,
        wr_reqs_pipe1_write_V_tag_din,
        wr_reqs_pipe1_write_V_tag_full_n,
        wr_reqs_pipe1_write_V_tag_write,
        wr_reqs_pipe1_write_V_rw_din,
        wr_reqs_pipe1_write_V_rw_full_n,
        wr_reqs_pipe1_write_V_rw_write,
        rd_data_valid_pipe1_write_V_din,
        rd_data_valid_pipe1_write_V_full_n,
        rd_data_valid_pipe1_write_V_write,
        wr_data_valid_pipe1_write_V_din,
        wr_data_valid_pipe1_write_V_full_n,
        wr_data_valid_pipe1_write_V_write,
        data_pipe2_V_last_din,
        data_pipe2_V_last_full_n,
        data_pipe2_V_last_write,
        data_pipe2_V_data_V_din,
        data_pipe2_V_data_V_full_n,
        data_pipe2_V_data_V_write,
        host_dram_write_req_data_V_last_din,
        host_dram_write_req_data_V_last_full_n,
        host_dram_write_req_data_V_last_write,
        host_dram_write_req_data_V_data_V_din,
        host_dram_write_req_data_V_data_V_full_n,
        host_dram_write_req_data_V_data_V_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input  [31:0] rd_reqs_pipe1_read_V_sector_off_dout;
input   rd_reqs_pipe1_read_V_sector_off_empty_n;
output   rd_reqs_pipe1_read_V_sector_off_read;
input  [31:0] rd_reqs_pipe1_read_V_sector_num_dout;
input   rd_reqs_pipe1_read_V_sector_num_empty_n;
output   rd_reqs_pipe1_read_V_sector_num_read;
input  [31:0] rd_reqs_pipe1_read_V_tag_dout;
input   rd_reqs_pipe1_read_V_tag_empty_n;
output   rd_reqs_pipe1_read_V_tag_read;
input   rd_reqs_pipe1_read_V_rw_dout;
input   rd_reqs_pipe1_read_V_rw_empty_n;
output   rd_reqs_pipe1_read_V_rw_read;
input  [31:0] wr_reqs_pipe1_read_V_sector_off_dout;
input   wr_reqs_pipe1_read_V_sector_off_empty_n;
output   wr_reqs_pipe1_read_V_sector_off_read;
input  [31:0] wr_reqs_pipe1_read_V_sector_num_dout;
input   wr_reqs_pipe1_read_V_sector_num_empty_n;
output   wr_reqs_pipe1_read_V_sector_num_read;
input  [31:0] wr_reqs_pipe1_read_V_tag_dout;
input   wr_reqs_pipe1_read_V_tag_empty_n;
output   wr_reqs_pipe1_read_V_tag_read;
input   wr_reqs_pipe1_read_V_rw_dout;
input   wr_reqs_pipe1_read_V_rw_empty_n;
output   wr_reqs_pipe1_read_V_rw_read;
input   host_dram_read_resp_V_last_dout;
input   host_dram_read_resp_V_last_empty_n;
output   host_dram_read_resp_V_last_read;
input  [511:0] host_dram_read_resp_V_data_V_dout;
input   host_dram_read_resp_V_data_V_empty_n;
output   host_dram_read_resp_V_data_V_read;
input   pcie_read_resp_V_last_dout;
input   pcie_read_resp_V_last_empty_n;
output   pcie_read_resp_V_last_read;
input  [511:0] pcie_read_resp_V_data_V_dout;
input   pcie_read_resp_V_data_V_empty_n;
output   pcie_read_resp_V_data_V_read;
output  [31:0] rd_reqs_pipe1_write_V_sector_off_din;
input   rd_reqs_pipe1_write_V_sector_off_full_n;
output   rd_reqs_pipe1_write_V_sector_off_write;
output  [31:0] rd_reqs_pipe1_write_V_sector_num_din;
input   rd_reqs_pipe1_write_V_sector_num_full_n;
output   rd_reqs_pipe1_write_V_sector_num_write;
output  [31:0] rd_reqs_pipe1_write_V_tag_din;
input   rd_reqs_pipe1_write_V_tag_full_n;
output   rd_reqs_pipe1_write_V_tag_write;
output   rd_reqs_pipe1_write_V_rw_din;
input   rd_reqs_pipe1_write_V_rw_full_n;
output   rd_reqs_pipe1_write_V_rw_write;
output  [31:0] wr_reqs_pipe1_write_V_sector_off_din;
input   wr_reqs_pipe1_write_V_sector_off_full_n;
output   wr_reqs_pipe1_write_V_sector_off_write;
output  [31:0] wr_reqs_pipe1_write_V_sector_num_din;
input   wr_reqs_pipe1_write_V_sector_num_full_n;
output   wr_reqs_pipe1_write_V_sector_num_write;
output  [31:0] wr_reqs_pipe1_write_V_tag_din;
input   wr_reqs_pipe1_write_V_tag_full_n;
output   wr_reqs_pipe1_write_V_tag_write;
output   wr_reqs_pipe1_write_V_rw_din;
input   wr_reqs_pipe1_write_V_rw_full_n;
output   wr_reqs_pipe1_write_V_rw_write;
output   rd_data_valid_pipe1_write_V_din;
input   rd_data_valid_pipe1_write_V_full_n;
output   rd_data_valid_pipe1_write_V_write;
output   wr_data_valid_pipe1_write_V_din;
input   wr_data_valid_pipe1_write_V_full_n;
output   wr_data_valid_pipe1_write_V_write;
output   data_pipe2_V_last_din;
input   data_pipe2_V_last_full_n;
output   data_pipe2_V_last_write;
output  [511:0] data_pipe2_V_data_V_din;
input   data_pipe2_V_data_V_full_n;
output   data_pipe2_V_data_V_write;
output   host_dram_write_req_data_V_last_din;
input   host_dram_write_req_data_V_last_full_n;
output   host_dram_write_req_data_V_last_write;
output  [511:0] host_dram_write_req_data_V_data_V_din;
input   host_dram_write_req_data_V_data_V_full_n;
output   host_dram_write_req_data_V_data_V_write;

reg ap_idle;
reg rd_data_valid_pipe1_write_V_write;
reg wr_data_valid_pipe1_write_V_write;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    rd_reqs_pipe1_write_V_sector_off_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] has_rd_req_reg_620;
reg   [0:0] empty_n_3_reg_1084;
reg   [0:0] tmp_last_reg_1088;
reg   [0:0] empty_n_8_reg_1080;
reg    rd_reqs_pipe1_write_V_sector_num_blk_n;
reg    rd_reqs_pipe1_write_V_tag_blk_n;
reg    rd_reqs_pipe1_write_V_rw_blk_n;
reg    wr_reqs_pipe1_write_V_sector_off_blk_n;
reg   [0:0] has_wr_req_reg_520;
reg   [0:0] ap_reg_pp0_iter1_has_wr_req_reg_520;
reg   [0:0] tmp_6_reg_1098;
reg   [0:0] empty_n_9_reg_1050;
reg   [0:0] ap_reg_pp0_iter1_empty_n_9_reg_1050;
reg    wr_reqs_pipe1_write_V_sector_num_blk_n;
reg    wr_reqs_pipe1_write_V_tag_blk_n;
reg    wr_reqs_pipe1_write_V_rw_blk_n;
reg    rd_data_valid_pipe1_write_V_blk_n;
reg    wr_data_valid_pipe1_write_V_blk_n;
reg    data_pipe2_V_last_blk_n;
reg    data_pipe2_V_data_V_blk_n;
reg    host_dram_write_req_data_V_last_blk_n;
reg   [0:0] empty_n_7_reg_1102;
reg    host_dram_write_req_data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    data_pipe2_V_last1_status;
reg    ap_predicate_op125_write_state4;
wire    rd_reqs_pipe1_write_V_rw1_status;
reg    ap_predicate_op126_write_state4;
wire    wr_reqs_pipe1_write_V_rw1_status;
reg    ap_predicate_op128_write_state4;
wire    host_dram_write_req_data_V_last1_status;
reg    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] p_0_3_s_reg_532;
reg   [31:0] p_0_2_s_reg_543;
reg   [31:0] p_0_1_s_reg_554;
reg   [31:0] p_0_0_s_reg_565;
reg   [0:0] p_022_3_s_reg_576;
reg   [31:0] p_022_2_s_reg_587;
reg   [31:0] p_022_1_s_reg_598;
reg   [31:0] p_022_0_s_reg_609;
reg   [31:0] wr_req_cnt_reg_632;
reg   [0:0] tmp_rw_reg_643;
reg   [31:0] tmp_tag_reg_655;
reg   [31:0] tmp_sector_num_reg_667;
reg   [31:0] tmp_sector_off_reg_679;
reg   [0:0] p_0_3_2_reg_701;
reg   [31:0] p_0_2_2_reg_719;
reg   [31:0] p_0_1_2_reg_737;
reg   [31:0] p_0_0_2_reg_755;
reg   [0:0] has_rd_req_4_reg_773;
reg   [0:0] tmp_rw_2_reg_791;
reg   [31:0] tmp_tag_2_reg_803;
reg   [31:0] tmp_sector_num_2_reg_815;
reg   [31:0] tmp_sector_off_2_reg_827;
reg   [0:0] p_022_3_2_reg_849;
reg   [31:0] p_022_2_2_reg_864;
reg   [31:0] p_022_1_2_reg_879;
reg   [31:0] p_022_0_2_reg_894;
reg   [31:0] wr_req_cnt_2_reg_924;
reg   [0:0] ap_phi_mux_has_wr_req_phi_fu_524_p4;
reg   [31:0] tmp_sector_off_4_reg_1056;
reg   [31:0] tmp_sector_num_4_reg_1062;
reg   [31:0] tmp_tag_4_reg_1068;
reg   [0:0] tmp_rw_4_reg_1074;
wire   [0:0] empty_n_8_fu_970_p1;
reg   [0:0] ap_phi_mux_has_rd_req_phi_fu_624_p4;
wire   [0:0] empty_n_3_fu_1000_p1;
wire   [0:0] tmp_last_fu_1004_p1;
reg   [511:0] tmp_data_V_reg_1093;
wire   [0:0] tmp_6_fu_1012_p2;
wire   [0:0] empty_n_7_fu_1025_p1;
reg   [0:0] tmp_last_2_reg_1106;
reg   [511:0] tmp_data_V_2_reg_1112;
wire   [31:0] wr_req_cnt_3_fu_1037_p2;
reg   [31:0] wr_req_cnt_3_reg_1117;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_has_wr_req_3_phi_fu_913_p6;
reg   [0:0] ap_phi_mux_p_0_3_s_phi_fu_536_p4;
reg   [31:0] ap_phi_mux_p_0_2_s_phi_fu_547_p4;
reg   [31:0] ap_phi_mux_p_0_1_s_phi_fu_558_p4;
reg   [31:0] ap_phi_mux_p_0_0_s_phi_fu_569_p4;
reg   [0:0] ap_phi_mux_p_022_3_s_phi_fu_580_p4;
reg   [31:0] ap_phi_mux_p_022_2_s_phi_fu_591_p4;
reg   [31:0] ap_phi_mux_p_022_1_s_phi_fu_602_p4;
reg   [31:0] ap_phi_mux_p_022_0_s_phi_fu_613_p4;
reg   [31:0] ap_phi_mux_wr_req_cnt_phi_fu_636_p4;
reg   [31:0] ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4;
reg   [0:0] ap_phi_mux_tmp_rw_phi_fu_647_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_rw_reg_643;
reg   [31:0] ap_phi_mux_tmp_tag_phi_fu_659_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_tag_reg_655;
reg   [31:0] ap_phi_mux_tmp_sector_num_phi_fu_671_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_num_reg_667;
reg   [31:0] ap_phi_mux_tmp_sector_off_phi_fu_683_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_off_reg_679;
reg   [0:0] ap_phi_mux_has_rd_req_1_phi_fu_694_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_has_rd_req_1_reg_691;
wire   [0:0] ap_phi_reg_pp0_iter1_p_0_3_2_reg_701;
wire   [31:0] ap_phi_reg_pp0_iter1_p_0_2_2_reg_719;
wire   [31:0] ap_phi_reg_pp0_iter1_p_0_1_2_reg_737;
wire   [31:0] ap_phi_reg_pp0_iter1_p_0_0_2_reg_755;
wire   [0:0] ap_phi_reg_pp0_iter1_has_rd_req_4_reg_773;
reg   [0:0] ap_phi_mux_tmp_rw_2_phi_fu_795_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_tmp_rw_2_reg_791;
reg   [31:0] ap_phi_mux_tmp_tag_2_phi_fu_807_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_tag_2_reg_803;
reg   [31:0] ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_815;
reg   [31:0] ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_827;
reg   [0:0] ap_phi_mux_has_wr_req_1_phi_fu_842_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_has_wr_req_1_reg_839;
wire   [0:0] ap_phi_reg_pp0_iter1_p_022_3_2_reg_849;
wire   [31:0] ap_phi_reg_pp0_iter1_p_022_2_2_reg_864;
wire   [31:0] ap_phi_reg_pp0_iter1_p_022_1_2_reg_879;
wire   [31:0] ap_phi_reg_pp0_iter1_p_022_0_2_reg_894;
wire   [0:0] ap_phi_reg_pp0_iter1_has_wr_req_3_reg_909;
reg   [31:0] ap_phi_mux_wr_req_cnt_2_phi_fu_927_p6;
wire   [31:0] wr_req_cnt_1_fu_1018_p2;
wire   [31:0] ap_phi_reg_pp0_iter1_wr_req_cnt_2_reg_924;
wire   [31:0] p_wr_req_cnt_2_fu_1043_p3;
wire   [31:0] ap_phi_reg_pp0_iter2_wr_req_cnt_4_reg_938;
reg    wr_reqs_pipe1_read_V_rw0_update;
reg    ap_condition_468;
wire   [0:0] empty_n_5_nbread_fu_412_p5_0;
reg    rd_reqs_pipe1_read_V_rw0_update;
reg    ap_condition_481;
wire   [0:0] empty_n_4_nbread_fu_424_p5_0;
reg    host_dram_read_resp_V_last0_update;
wire   [0:0] empty_n_nbread_fu_436_p3_0;
reg    pcie_read_resp_V_last0_update;
wire   [0:0] empty_n_2_nbread_fu_444_p3_0;
reg    data_pipe2_V_last1_update;
reg    ap_block_pp0_stage0_01001;
reg    rd_reqs_pipe1_write_V_rw1_update;
reg    wr_reqs_pipe1_write_V_rw1_update;
reg    host_dram_write_req_data_V_last1_update;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_334;
reg    ap_condition_429;
reg    ap_condition_439;
reg    ap_condition_333;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_fu_1000_p1 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1)) | ((empty_n_3_fu_1000_p1 == 1'd0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))))) begin
        has_rd_req_4_reg_773 <= ap_phi_mux_has_rd_req_1_phi_fu_694_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd0))) begin
        has_rd_req_4_reg_773 <= empty_n_4_nbread_fu_424_p5_0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1))))) begin
        has_rd_req_4_reg_773 <= 1'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        has_rd_req_4_reg_773 <= ap_phi_reg_pp0_iter1_has_rd_req_4_reg_773;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        has_rd_req_reg_620 <= has_rd_req_4_reg_773;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        has_rd_req_reg_620 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        has_wr_req_reg_520 <= ap_phi_mux_has_wr_req_3_phi_fu_913_p6;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        has_wr_req_reg_520 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0))) begin
        p_022_0_2_reg_894 <= tmp_sector_off_4_reg_1056;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1)))))) begin
        p_022_0_2_reg_894 <= ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_022_0_2_reg_894 <= ap_phi_reg_pp0_iter1_p_022_0_2_reg_894;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0))) begin
        p_022_1_2_reg_879 <= tmp_sector_num_4_reg_1062;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1)))))) begin
        p_022_1_2_reg_879 <= ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_022_1_2_reg_879 <= ap_phi_reg_pp0_iter1_p_022_1_2_reg_879;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0))) begin
        p_022_2_2_reg_864 <= tmp_tag_4_reg_1068;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1)))))) begin
        p_022_2_2_reg_864 <= ap_phi_mux_tmp_tag_2_phi_fu_807_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_022_2_2_reg_864 <= ap_phi_reg_pp0_iter1_p_022_2_2_reg_864;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0))) begin
        p_022_3_2_reg_849 <= tmp_rw_4_reg_1074;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1)))))) begin
        p_022_3_2_reg_849 <= ap_phi_mux_tmp_rw_2_phi_fu_795_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_022_3_2_reg_849 <= ap_phi_reg_pp0_iter1_p_022_3_2_reg_849;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd0))) begin
        p_0_0_2_reg_755 <= rd_reqs_pipe1_read_V_sector_off_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_fu_1000_p1 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1)) | ((empty_n_3_fu_1000_p1 == 1'd0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))))) begin
        p_0_0_2_reg_755 <= ap_phi_mux_tmp_sector_off_phi_fu_683_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_2_reg_755 <= ap_phi_reg_pp0_iter1_p_0_0_2_reg_755;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd0))) begin
        p_0_1_2_reg_737 <= rd_reqs_pipe1_read_V_sector_num_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_fu_1000_p1 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1)) | ((empty_n_3_fu_1000_p1 == 1'd0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))))) begin
        p_0_1_2_reg_737 <= ap_phi_mux_tmp_sector_num_phi_fu_671_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_2_reg_737 <= ap_phi_reg_pp0_iter1_p_0_1_2_reg_737;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd0))) begin
        p_0_2_2_reg_719 <= rd_reqs_pipe1_read_V_tag_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_fu_1000_p1 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1)) | ((empty_n_3_fu_1000_p1 == 1'd0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))))) begin
        p_0_2_2_reg_719 <= ap_phi_mux_tmp_tag_phi_fu_659_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_2_reg_719 <= ap_phi_reg_pp0_iter1_p_0_2_2_reg_719;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd0))) begin
        p_0_3_2_reg_701 <= rd_reqs_pipe1_read_V_rw_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd0) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_fu_1000_p1 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1)) | ((empty_n_3_fu_1000_p1 == 1'd0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (empty_n_8_fu_970_p1 == 1'd1)) | ((tmp_last_fu_1004_p1 == 1'd1) & (empty_n_3_fu_1000_p1 == 1'd1) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)))))) begin
        p_0_3_2_reg_701 <= ap_phi_mux_tmp_rw_phi_fu_647_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_3_2_reg_701 <= ap_phi_reg_pp0_iter1_p_0_3_2_reg_701;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            tmp_rw_2_reg_791 <= tmp_rw_4_reg_1074;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            tmp_rw_2_reg_791 <= ap_phi_mux_p_022_3_s_phi_fu_580_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_rw_2_reg_791 <= ap_phi_reg_pp0_iter1_tmp_rw_2_reg_791;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            tmp_rw_reg_643 <= rd_reqs_pipe1_read_V_rw_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            tmp_rw_reg_643 <= ap_phi_mux_p_0_3_s_phi_fu_536_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_rw_reg_643 <= ap_phi_reg_pp0_iter1_tmp_rw_reg_643;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            tmp_sector_num_2_reg_815 <= tmp_sector_num_4_reg_1062;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            tmp_sector_num_2_reg_815 <= ap_phi_mux_p_022_1_s_phi_fu_602_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_sector_num_2_reg_815 <= ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_815;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            tmp_sector_num_reg_667 <= rd_reqs_pipe1_read_V_sector_num_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            tmp_sector_num_reg_667 <= ap_phi_mux_p_0_1_s_phi_fu_558_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_sector_num_reg_667 <= ap_phi_reg_pp0_iter1_tmp_sector_num_reg_667;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            tmp_sector_off_2_reg_827 <= tmp_sector_off_4_reg_1056;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            tmp_sector_off_2_reg_827 <= ap_phi_mux_p_022_0_s_phi_fu_613_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_sector_off_2_reg_827 <= ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_827;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            tmp_sector_off_reg_679 <= rd_reqs_pipe1_read_V_sector_off_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            tmp_sector_off_reg_679 <= ap_phi_mux_p_0_0_s_phi_fu_569_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_sector_off_reg_679 <= ap_phi_reg_pp0_iter1_tmp_sector_off_reg_679;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            tmp_tag_2_reg_803 <= tmp_tag_4_reg_1068;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            tmp_tag_2_reg_803 <= ap_phi_mux_p_022_2_s_phi_fu_591_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_tag_2_reg_803 <= ap_phi_reg_pp0_iter1_tmp_tag_2_reg_803;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_333)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            tmp_tag_reg_655 <= rd_reqs_pipe1_read_V_tag_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            tmp_tag_reg_655 <= ap_phi_mux_p_0_2_s_phi_fu_547_p4;
        end else if ((1'b1 == 1'b1)) begin
            tmp_tag_reg_655 <= ap_phi_reg_pp0_iter1_tmp_tag_reg_655;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0)))) begin
        wr_req_cnt_2_reg_924 <= ap_phi_mux_wr_req_cnt_phi_fu_636_p4;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1))))) begin
        wr_req_cnt_2_reg_924 <= wr_req_cnt_1_fu_1018_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        wr_req_cnt_2_reg_924 <= ap_phi_reg_pp0_iter1_wr_req_cnt_2_reg_924;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        wr_req_cnt_reg_632 <= ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        wr_req_cnt_reg_632 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_reg_pp0_iter1_empty_n_9_reg_1050 <= empty_n_9_reg_1050;
        ap_reg_pp0_iter1_has_wr_req_reg_520 <= has_wr_req_reg_520;
        empty_n_7_reg_1102 <= empty_n_2_nbread_fu_444_p3_0;
        tmp_data_V_2_reg_1112 <= pcie_read_resp_V_data_V_dout;
        tmp_last_2_reg_1106 <= pcie_read_resp_V_last_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1) | (empty_n_8_fu_970_p1 == 1'd1)))) begin
        empty_n_3_reg_1084 <= empty_n_nbread_fu_436_p3_0;
        tmp_data_V_reg_1093 <= host_dram_read_resp_V_data_V_dout;
        tmp_last_reg_1088 <= host_dram_read_resp_V_last_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0))) begin
        empty_n_8_reg_1080 <= empty_n_4_nbread_fu_424_p5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_wr_req_phi_fu_524_p4 == 1'd0))) begin
        empty_n_9_reg_1050 <= empty_n_5_nbread_fu_412_p5_0;
        tmp_rw_4_reg_1074 <= wr_reqs_pipe1_read_V_rw_dout;
        tmp_sector_num_4_reg_1062 <= wr_reqs_pipe1_read_V_sector_num_dout;
        tmp_sector_off_4_reg_1056 <= wr_reqs_pipe1_read_V_sector_off_dout;
        tmp_tag_4_reg_1068 <= wr_reqs_pipe1_read_V_tag_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_022_0_s_reg_609 <= p_022_0_2_reg_894;
        p_022_1_s_reg_598 <= p_022_1_2_reg_879;
        p_022_2_s_reg_587 <= p_022_2_2_reg_864;
        p_022_3_s_reg_576 <= p_022_3_2_reg_849;
        p_0_0_s_reg_565 <= p_0_0_2_reg_755;
        p_0_1_s_reg_554 <= p_0_1_2_reg_737;
        p_0_2_s_reg_543 <= p_0_2_2_reg_719;
        p_0_3_s_reg_532 <= p_0_3_2_reg_701;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_9_reg_1050 == 1'd1) | (has_wr_req_reg_520 == 1'd1)))) begin
        tmp_6_reg_1098 <= tmp_6_fu_1012_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_7_fu_1025_p1 == 1'd1))) begin
        wr_req_cnt_3_reg_1117 <= wr_req_cnt_3_fu_1037_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            ap_phi_mux_has_rd_req_1_phi_fu_694_p4 = empty_n_4_nbread_fu_424_p5_0;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            ap_phi_mux_has_rd_req_1_phi_fu_694_p4 = ap_phi_mux_has_rd_req_phi_fu_624_p4;
        end else begin
            ap_phi_mux_has_rd_req_1_phi_fu_694_p4 = ap_phi_reg_pp0_iter1_has_rd_req_1_reg_691;
        end
    end else begin
        ap_phi_mux_has_rd_req_1_phi_fu_694_p4 = ap_phi_reg_pp0_iter1_has_rd_req_1_reg_691;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_has_rd_req_phi_fu_624_p4 = has_rd_req_4_reg_773;
    end else begin
        ap_phi_mux_has_rd_req_phi_fu_624_p4 = has_rd_req_reg_620;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            ap_phi_mux_has_wr_req_1_phi_fu_842_p4 = empty_n_9_reg_1050;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            ap_phi_mux_has_wr_req_1_phi_fu_842_p4 = has_wr_req_reg_520;
        end else begin
            ap_phi_mux_has_wr_req_1_phi_fu_842_p4 = ap_phi_reg_pp0_iter1_has_wr_req_1_reg_839;
        end
    end else begin
        ap_phi_mux_has_wr_req_1_phi_fu_842_p4 = ap_phi_reg_pp0_iter1_has_wr_req_1_reg_839;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if ((1'b1 == ap_condition_439)) begin
            ap_phi_mux_has_wr_req_3_phi_fu_913_p6 = ap_phi_mux_has_wr_req_1_phi_fu_842_p4;
        end else if (((empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0))) begin
            ap_phi_mux_has_wr_req_3_phi_fu_913_p6 = empty_n_9_reg_1050;
        end else if ((1'b1 == ap_condition_429)) begin
            ap_phi_mux_has_wr_req_3_phi_fu_913_p6 = 1'd0;
        end else begin
            ap_phi_mux_has_wr_req_3_phi_fu_913_p6 = ap_phi_reg_pp0_iter1_has_wr_req_3_reg_909;
        end
    end else begin
        ap_phi_mux_has_wr_req_3_phi_fu_913_p6 = ap_phi_reg_pp0_iter1_has_wr_req_3_reg_909;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_has_wr_req_phi_fu_524_p4 = ap_phi_mux_has_wr_req_3_phi_fu_913_p6;
    end else begin
        ap_phi_mux_has_wr_req_phi_fu_524_p4 = has_wr_req_reg_520;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_022_0_s_phi_fu_613_p4 = p_022_0_2_reg_894;
    end else begin
        ap_phi_mux_p_022_0_s_phi_fu_613_p4 = p_022_0_s_reg_609;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_022_1_s_phi_fu_602_p4 = p_022_1_2_reg_879;
    end else begin
        ap_phi_mux_p_022_1_s_phi_fu_602_p4 = p_022_1_s_reg_598;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_022_2_s_phi_fu_591_p4 = p_022_2_2_reg_864;
    end else begin
        ap_phi_mux_p_022_2_s_phi_fu_591_p4 = p_022_2_s_reg_587;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_022_3_s_phi_fu_580_p4 = p_022_3_2_reg_849;
    end else begin
        ap_phi_mux_p_022_3_s_phi_fu_580_p4 = p_022_3_s_reg_576;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_0_0_s_phi_fu_569_p4 = p_0_0_2_reg_755;
    end else begin
        ap_phi_mux_p_0_0_s_phi_fu_569_p4 = p_0_0_s_reg_565;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_0_1_s_phi_fu_558_p4 = p_0_1_2_reg_737;
    end else begin
        ap_phi_mux_p_0_1_s_phi_fu_558_p4 = p_0_1_s_reg_554;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_0_2_s_phi_fu_547_p4 = p_0_2_2_reg_719;
    end else begin
        ap_phi_mux_p_0_2_s_phi_fu_547_p4 = p_0_2_s_reg_543;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_p_0_3_s_phi_fu_536_p4 = p_0_3_2_reg_701;
    end else begin
        ap_phi_mux_p_0_3_s_phi_fu_536_p4 = p_0_3_s_reg_532;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            ap_phi_mux_tmp_rw_2_phi_fu_795_p4 = tmp_rw_4_reg_1074;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            ap_phi_mux_tmp_rw_2_phi_fu_795_p4 = ap_phi_mux_p_022_3_s_phi_fu_580_p4;
        end else begin
            ap_phi_mux_tmp_rw_2_phi_fu_795_p4 = ap_phi_reg_pp0_iter1_tmp_rw_2_reg_791;
        end
    end else begin
        ap_phi_mux_tmp_rw_2_phi_fu_795_p4 = ap_phi_reg_pp0_iter1_tmp_rw_2_reg_791;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            ap_phi_mux_tmp_rw_phi_fu_647_p4 = rd_reqs_pipe1_read_V_rw_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            ap_phi_mux_tmp_rw_phi_fu_647_p4 = ap_phi_mux_p_0_3_s_phi_fu_536_p4;
        end else begin
            ap_phi_mux_tmp_rw_phi_fu_647_p4 = ap_phi_reg_pp0_iter1_tmp_rw_reg_643;
        end
    end else begin
        ap_phi_mux_tmp_rw_phi_fu_647_p4 = ap_phi_reg_pp0_iter1_tmp_rw_reg_643;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4 = tmp_sector_num_4_reg_1062;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4 = ap_phi_mux_p_022_1_s_phi_fu_602_p4;
        end else begin
            ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_815;
        end
    end else begin
        ap_phi_mux_tmp_sector_num_2_phi_fu_819_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_815;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            ap_phi_mux_tmp_sector_num_phi_fu_671_p4 = rd_reqs_pipe1_read_V_sector_num_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            ap_phi_mux_tmp_sector_num_phi_fu_671_p4 = ap_phi_mux_p_0_1_s_phi_fu_558_p4;
        end else begin
            ap_phi_mux_tmp_sector_num_phi_fu_671_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_reg_667;
        end
    end else begin
        ap_phi_mux_tmp_sector_num_phi_fu_671_p4 = ap_phi_reg_pp0_iter1_tmp_sector_num_reg_667;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4 = tmp_sector_off_4_reg_1056;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4 = ap_phi_mux_p_022_0_s_phi_fu_613_p4;
        end else begin
            ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_827;
        end
    end else begin
        ap_phi_mux_tmp_sector_off_2_phi_fu_831_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_827;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            ap_phi_mux_tmp_sector_off_phi_fu_683_p4 = rd_reqs_pipe1_read_V_sector_off_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            ap_phi_mux_tmp_sector_off_phi_fu_683_p4 = ap_phi_mux_p_0_0_s_phi_fu_569_p4;
        end else begin
            ap_phi_mux_tmp_sector_off_phi_fu_683_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_reg_679;
        end
    end else begin
        ap_phi_mux_tmp_sector_off_phi_fu_683_p4 = ap_phi_reg_pp0_iter1_tmp_sector_off_reg_679;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((has_wr_req_reg_520 == 1'd0) & (empty_n_9_reg_1050 == 1'd1))) begin
            ap_phi_mux_tmp_tag_2_phi_fu_807_p4 = tmp_tag_4_reg_1068;
        end else if ((has_wr_req_reg_520 == 1'd1)) begin
            ap_phi_mux_tmp_tag_2_phi_fu_807_p4 = ap_phi_mux_p_022_2_s_phi_fu_591_p4;
        end else begin
            ap_phi_mux_tmp_tag_2_phi_fu_807_p4 = ap_phi_reg_pp0_iter1_tmp_tag_2_reg_803;
        end
    end else begin
        ap_phi_mux_tmp_tag_2_phi_fu_807_p4 = ap_phi_reg_pp0_iter1_tmp_tag_2_reg_803;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_334)) begin
        if (((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0) & (empty_n_8_fu_970_p1 == 1'd1))) begin
            ap_phi_mux_tmp_tag_phi_fu_659_p4 = rd_reqs_pipe1_read_V_tag_dout;
        end else if ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1)) begin
            ap_phi_mux_tmp_tag_phi_fu_659_p4 = ap_phi_mux_p_0_2_s_phi_fu_547_p4;
        end else begin
            ap_phi_mux_tmp_tag_phi_fu_659_p4 = ap_phi_reg_pp0_iter1_tmp_tag_reg_655;
        end
    end else begin
        ap_phi_mux_tmp_tag_phi_fu_659_p4 = ap_phi_reg_pp0_iter1_tmp_tag_reg_655;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (empty_n_9_reg_1050 == 1'd0) & (has_wr_req_reg_520 == 1'd0) & (1'b0 == ap_block_pp0_stage0)))) begin
        ap_phi_mux_wr_req_cnt_2_phi_fu_927_p6 = ap_phi_mux_wr_req_cnt_phi_fu_636_p4;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1))))) begin
        ap_phi_mux_wr_req_cnt_2_phi_fu_927_p6 = wr_req_cnt_1_fu_1018_p2;
    end else begin
        ap_phi_mux_wr_req_cnt_2_phi_fu_927_p6 = ap_phi_reg_pp0_iter1_wr_req_cnt_2_reg_924;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        if ((empty_n_7_reg_1102 == 1'd0)) begin
            ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4 = wr_req_cnt_2_reg_924;
        end else if ((empty_n_7_reg_1102 == 1'd1)) begin
            ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4 = p_wr_req_cnt_2_fu_1043_p3;
        end else begin
            ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4 = ap_phi_reg_pp0_iter2_wr_req_cnt_4_reg_938;
        end
    end else begin
        ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4 = ap_phi_reg_pp0_iter2_wr_req_cnt_4_reg_938;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_wr_req_cnt_phi_fu_636_p4 = ap_phi_mux_wr_req_cnt_4_phi_fu_942_p4;
    end else begin
        ap_phi_mux_wr_req_cnt_phi_fu_636_p4 = wr_req_cnt_reg_632;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        data_pipe2_V_data_V_blk_n = data_pipe2_V_data_V_full_n;
    end else begin
        data_pipe2_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op125_write_state4 == 1'b1))) begin
        data_pipe2_V_last1_update = 1'b1;
    end else begin
        data_pipe2_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        data_pipe2_V_last_blk_n = data_pipe2_V_last_full_n;
    end else begin
        data_pipe2_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((host_dram_read_resp_V_last_empty_n & host_dram_read_resp_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd1) | (empty_n_8_fu_970_p1 == 1'd1)))) begin
        host_dram_read_resp_V_last0_update = 1'b1;
    end else begin
        host_dram_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_n_7_reg_1102 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        host_dram_write_req_data_V_data_V_blk_n = host_dram_write_req_data_V_data_V_full_n;
    end else begin
        host_dram_write_req_data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (empty_n_7_reg_1102 == 1'd1))) begin
        host_dram_write_req_data_V_last1_update = 1'b1;
    end else begin
        host_dram_write_req_data_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (empty_n_7_reg_1102 == 1'd1) & (1'b0 == ap_block_pp0_stage0))) begin
        host_dram_write_req_data_V_last_blk_n = host_dram_write_req_data_V_last_full_n;
    end else begin
        host_dram_write_req_data_V_last_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & ((pcie_read_resp_V_last_empty_n & pcie_read_resp_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pcie_read_resp_V_last0_update = 1'b1;
    end else begin
        pcie_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        rd_data_valid_pipe1_write_V_blk_n = rd_data_valid_pipe1_write_V_full_n;
    end else begin
        rd_data_valid_pipe1_write_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op126_write_state4 == 1'b1))) begin
        rd_data_valid_pipe1_write_V_write = 1'b1;
    end else begin
        rd_data_valid_pipe1_write_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_481) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_rd_req_phi_fu_624_p4 == 1'd0))) begin
        rd_reqs_pipe1_read_V_rw0_update = 1'b1;
    end else begin
        rd_reqs_pipe1_read_V_rw0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op126_write_state4 == 1'b1))) begin
        rd_reqs_pipe1_write_V_rw1_update = 1'b1;
    end else begin
        rd_reqs_pipe1_write_V_rw1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        rd_reqs_pipe1_write_V_rw_blk_n = rd_reqs_pipe1_write_V_rw_full_n;
    end else begin
        rd_reqs_pipe1_write_V_rw_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        rd_reqs_pipe1_write_V_sector_num_blk_n = rd_reqs_pipe1_write_V_sector_num_full_n;
    end else begin
        rd_reqs_pipe1_write_V_sector_num_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        rd_reqs_pipe1_write_V_sector_off_blk_n = rd_reqs_pipe1_write_V_sector_off_full_n;
    end else begin
        rd_reqs_pipe1_write_V_sector_off_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1))))) begin
        rd_reqs_pipe1_write_V_tag_blk_n = rd_reqs_pipe1_write_V_tag_full_n;
    end else begin
        rd_reqs_pipe1_write_V_tag_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1))))) begin
        wr_data_valid_pipe1_write_V_blk_n = wr_data_valid_pipe1_write_V_full_n;
    end else begin
        wr_data_valid_pipe1_write_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op128_write_state4 == 1'b1))) begin
        wr_data_valid_pipe1_write_V_write = 1'b1;
    end else begin
        wr_data_valid_pipe1_write_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_468) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_has_wr_req_phi_fu_524_p4 == 1'd0))) begin
        wr_reqs_pipe1_read_V_rw0_update = 1'b1;
    end else begin
        wr_reqs_pipe1_read_V_rw0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op128_write_state4 == 1'b1))) begin
        wr_reqs_pipe1_write_V_rw1_update = 1'b1;
    end else begin
        wr_reqs_pipe1_write_V_rw1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1))))) begin
        wr_reqs_pipe1_write_V_rw_blk_n = wr_reqs_pipe1_write_V_rw_full_n;
    end else begin
        wr_reqs_pipe1_write_V_rw_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1))))) begin
        wr_reqs_pipe1_write_V_sector_num_blk_n = wr_reqs_pipe1_write_V_sector_num_full_n;
    end else begin
        wr_reqs_pipe1_write_V_sector_num_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1))))) begin
        wr_reqs_pipe1_write_V_sector_off_blk_n = wr_reqs_pipe1_write_V_sector_off_full_n;
    end else begin
        wr_reqs_pipe1_write_V_sector_off_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1))))) begin
        wr_reqs_pipe1_write_V_tag_blk_n = wr_reqs_pipe1_write_V_tag_full_n;
    end else begin
        wr_reqs_pipe1_write_V_tag_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((wr_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((wr_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((rd_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((rd_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((data_pipe2_V_last1_status == 1'b0) & (ap_predicate_op125_write_state4 == 1'b1)) | ((host_dram_write_req_data_V_last1_status == 1'b0) & (empty_n_7_reg_1102 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((wr_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((wr_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((rd_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((rd_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((data_pipe2_V_last1_status == 1'b0) & (ap_predicate_op125_write_state4 == 1'b1)) | ((host_dram_write_req_data_V_last1_status == 1'b0) & (empty_n_7_reg_1102 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter2 == 1'b1) & (((wr_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((wr_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((rd_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((rd_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((data_pipe2_V_last1_status == 1'b0) & (ap_predicate_op125_write_state4 == 1'b1)) | ((host_dram_write_req_data_V_last1_status == 1'b0) & (empty_n_7_reg_1102 == 1'd1))));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter2 = (((wr_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((wr_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op128_write_state4 == 1'b1)) | ((rd_data_valid_pipe1_write_V_full_n == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((rd_reqs_pipe1_write_V_rw1_status == 1'b0) & (ap_predicate_op126_write_state4 == 1'b1)) | ((data_pipe2_V_last1_status == 1'b0) & (ap_predicate_op125_write_state4 == 1'b1)) | ((host_dram_write_req_data_V_last1_status == 1'b0) & (empty_n_7_reg_1102 == 1'd1)));
end

always @ (*) begin
    ap_condition_333 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_334 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0));
end

always @ (*) begin
    ap_condition_429 = (((tmp_6_fu_1012_p2 == 1'd0) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd0) & (has_wr_req_reg_520 == 1'd1)));
end

always @ (*) begin
    ap_condition_439 = (((tmp_6_fu_1012_p2 == 1'd1) & (empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_fu_1012_p2 == 1'd1) & (has_wr_req_reg_520 == 1'd1)));
end

always @ (*) begin
    ap_condition_468 = ((wr_reqs_pipe1_read_V_tag_empty_n & wr_reqs_pipe1_read_V_sector_off_empty_n & wr_reqs_pipe1_read_V_sector_num_empty_n & wr_reqs_pipe1_read_V_rw_empty_n) == 1'b1);
end

always @ (*) begin
    ap_condition_481 = ((rd_reqs_pipe1_read_V_tag_empty_n & rd_reqs_pipe1_read_V_sector_off_empty_n & rd_reqs_pipe1_read_V_sector_num_empty_n & rd_reqs_pipe1_read_V_rw_empty_n) == 1'b1);
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_has_rd_req_1_reg_691 = 'bx;

assign ap_phi_reg_pp0_iter1_has_rd_req_4_reg_773 = 'bx;

assign ap_phi_reg_pp0_iter1_has_wr_req_1_reg_839 = 'bx;

assign ap_phi_reg_pp0_iter1_has_wr_req_3_reg_909 = 'bx;

assign ap_phi_reg_pp0_iter1_p_022_0_2_reg_894 = 'bx;

assign ap_phi_reg_pp0_iter1_p_022_1_2_reg_879 = 'bx;

assign ap_phi_reg_pp0_iter1_p_022_2_2_reg_864 = 'bx;

assign ap_phi_reg_pp0_iter1_p_022_3_2_reg_849 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_0_2_reg_755 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_1_2_reg_737 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_2_2_reg_719 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_3_2_reg_701 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_rw_2_reg_791 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_rw_reg_643 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_sector_num_2_reg_815 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_sector_num_reg_667 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_sector_off_2_reg_827 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_sector_off_reg_679 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_tag_2_reg_803 = 'bx;

assign ap_phi_reg_pp0_iter1_tmp_tag_reg_655 = 'bx;

assign ap_phi_reg_pp0_iter1_wr_req_cnt_2_reg_924 = 'bx;

assign ap_phi_reg_pp0_iter2_wr_req_cnt_4_reg_938 = 'bx;

always @ (*) begin
    ap_predicate_op125_write_state4 = (((empty_n_8_reg_1080 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op126_write_state4 = (((empty_n_8_reg_1080 == 1'd1) & (tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1)) | ((tmp_last_reg_1088 == 1'd1) & (empty_n_3_reg_1084 == 1'd1) & (has_rd_req_reg_620 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op128_write_state4 = (((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_empty_n_9_reg_1050 == 1'd1)) | ((tmp_6_reg_1098 == 1'd0) & (ap_reg_pp0_iter1_has_wr_req_reg_520 == 1'd1)));
end

assign ap_ready = 1'b0;

assign data_pipe2_V_data_V_din = tmp_data_V_reg_1093;

assign data_pipe2_V_data_V_write = data_pipe2_V_last1_update;

assign data_pipe2_V_last1_status = (data_pipe2_V_last_full_n & data_pipe2_V_data_V_full_n);

assign data_pipe2_V_last_din = tmp_last_reg_1088;

assign data_pipe2_V_last_write = data_pipe2_V_last1_update;

assign empty_n_2_nbread_fu_444_p3_0 = (pcie_read_resp_V_last_empty_n & pcie_read_resp_V_data_V_empty_n);

assign empty_n_3_fu_1000_p1 = empty_n_nbread_fu_436_p3_0;

assign empty_n_4_nbread_fu_424_p5_0 = (rd_reqs_pipe1_read_V_tag_empty_n & rd_reqs_pipe1_read_V_sector_off_empty_n & rd_reqs_pipe1_read_V_sector_num_empty_n & rd_reqs_pipe1_read_V_rw_empty_n);

assign empty_n_5_nbread_fu_412_p5_0 = (wr_reqs_pipe1_read_V_tag_empty_n & wr_reqs_pipe1_read_V_sector_off_empty_n & wr_reqs_pipe1_read_V_sector_num_empty_n & wr_reqs_pipe1_read_V_rw_empty_n);

assign empty_n_7_fu_1025_p1 = empty_n_2_nbread_fu_444_p3_0;

assign empty_n_8_fu_970_p1 = empty_n_4_nbread_fu_424_p5_0;

assign empty_n_nbread_fu_436_p3_0 = (host_dram_read_resp_V_last_empty_n & host_dram_read_resp_V_data_V_empty_n);

assign host_dram_read_resp_V_data_V_read = host_dram_read_resp_V_last0_update;

assign host_dram_read_resp_V_last_read = host_dram_read_resp_V_last0_update;

assign host_dram_write_req_data_V_data_V_din = tmp_data_V_2_reg_1112;

assign host_dram_write_req_data_V_data_V_write = host_dram_write_req_data_V_last1_update;

assign host_dram_write_req_data_V_last1_status = (host_dram_write_req_data_V_last_full_n & host_dram_write_req_data_V_data_V_full_n);

assign host_dram_write_req_data_V_last_din = tmp_last_2_reg_1106;

assign host_dram_write_req_data_V_last_write = host_dram_write_req_data_V_last1_update;

assign p_wr_req_cnt_2_fu_1043_p3 = ((tmp_last_2_reg_1106[0:0] === 1'b1) ? wr_req_cnt_3_reg_1117 : wr_req_cnt_2_reg_924);

assign pcie_read_resp_V_data_V_read = pcie_read_resp_V_last0_update;

assign pcie_read_resp_V_last_read = pcie_read_resp_V_last0_update;

assign rd_data_valid_pipe1_write_V_din = 1'd1;

assign rd_reqs_pipe1_read_V_rw_read = rd_reqs_pipe1_read_V_rw0_update;

assign rd_reqs_pipe1_read_V_sector_num_read = rd_reqs_pipe1_read_V_rw0_update;

assign rd_reqs_pipe1_read_V_sector_off_read = rd_reqs_pipe1_read_V_rw0_update;

assign rd_reqs_pipe1_read_V_tag_read = rd_reqs_pipe1_read_V_rw0_update;

assign rd_reqs_pipe1_write_V_rw1_status = (rd_reqs_pipe1_write_V_tag_full_n & rd_reqs_pipe1_write_V_sector_off_full_n & rd_reqs_pipe1_write_V_sector_num_full_n & rd_reqs_pipe1_write_V_rw_full_n);

assign rd_reqs_pipe1_write_V_rw_din = tmp_rw_reg_643;

assign rd_reqs_pipe1_write_V_rw_write = rd_reqs_pipe1_write_V_rw1_update;

assign rd_reqs_pipe1_write_V_sector_num_din = tmp_sector_num_reg_667;

assign rd_reqs_pipe1_write_V_sector_num_write = rd_reqs_pipe1_write_V_rw1_update;

assign rd_reqs_pipe1_write_V_sector_off_din = tmp_sector_off_reg_679;

assign rd_reqs_pipe1_write_V_sector_off_write = rd_reqs_pipe1_write_V_rw1_update;

assign rd_reqs_pipe1_write_V_tag_din = tmp_tag_reg_655;

assign rd_reqs_pipe1_write_V_tag_write = rd_reqs_pipe1_write_V_rw1_update;

assign tmp_6_fu_1012_p2 = ((ap_phi_mux_wr_req_cnt_phi_fu_636_p4 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_last_fu_1004_p1 = host_dram_read_resp_V_last_dout;

assign wr_data_valid_pipe1_write_V_din = 1'd1;

assign wr_req_cnt_1_fu_1018_p2 = ($signed(ap_phi_mux_wr_req_cnt_phi_fu_636_p4) + $signed(32'd4294967295));

assign wr_req_cnt_3_fu_1037_p2 = (ap_phi_mux_wr_req_cnt_2_phi_fu_927_p6 + 32'd1);

assign wr_reqs_pipe1_read_V_rw_read = wr_reqs_pipe1_read_V_rw0_update;

assign wr_reqs_pipe1_read_V_sector_num_read = wr_reqs_pipe1_read_V_rw0_update;

assign wr_reqs_pipe1_read_V_sector_off_read = wr_reqs_pipe1_read_V_rw0_update;

assign wr_reqs_pipe1_read_V_tag_read = wr_reqs_pipe1_read_V_rw0_update;

assign wr_reqs_pipe1_write_V_rw1_status = (wr_reqs_pipe1_write_V_tag_full_n & wr_reqs_pipe1_write_V_sector_off_full_n & wr_reqs_pipe1_write_V_sector_num_full_n & wr_reqs_pipe1_write_V_rw_full_n);

assign wr_reqs_pipe1_write_V_rw_din = tmp_rw_2_reg_791;

assign wr_reqs_pipe1_write_V_rw_write = wr_reqs_pipe1_write_V_rw1_update;

assign wr_reqs_pipe1_write_V_sector_num_din = tmp_sector_num_2_reg_815;

assign wr_reqs_pipe1_write_V_sector_num_write = wr_reqs_pipe1_write_V_rw1_update;

assign wr_reqs_pipe1_write_V_sector_off_din = tmp_sector_off_2_reg_827;

assign wr_reqs_pipe1_write_V_sector_off_write = wr_reqs_pipe1_write_V_rw1_update;

assign wr_reqs_pipe1_write_V_tag_din = tmp_tag_2_reg_803;

assign wr_reqs_pipe1_write_V_tag_write = wr_reqs_pipe1_write_V_rw1_update;

endmodule //pipe1_data_handler
