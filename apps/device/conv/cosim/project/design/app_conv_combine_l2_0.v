// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="app_conv_combine_l2_0,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.025500,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1071,HLS_SYN_LUT=655}" *)

module app_conv_combine_l2_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        reset_app_conv_combine_l2_0_V_dout,
        reset_app_conv_combine_l2_0_V_empty_n,
        reset_app_conv_combine_l2_0_V_read,
        app_conv_combine_l2_input_data_0_V_data_V_dout,
        app_conv_combine_l2_input_data_0_V_data_V_empty_n,
        app_conv_combine_l2_input_data_0_V_data_V_read,
        app_conv_combine_l2_input_data_0_V_eop_dout,
        app_conv_combine_l2_input_data_0_V_eop_empty_n,
        app_conv_combine_l2_input_data_0_V_eop_read,
        app_conv_combine_l2_input_data_1_V_data_V_dout,
        app_conv_combine_l2_input_data_1_V_data_V_empty_n,
        app_conv_combine_l2_input_data_1_V_data_V_read,
        app_conv_combine_l2_input_data_1_V_eop_dout,
        app_conv_combine_l2_input_data_1_V_eop_empty_n,
        app_conv_combine_l2_input_data_1_V_eop_read,
        app_conv_writer_input_data_V_data_V_din,
        app_conv_writer_input_data_V_data_V_full_n,
        app_conv_writer_input_data_V_data_V_write,
        app_conv_writer_input_data_V_len_din,
        app_conv_writer_input_data_V_len_full_n,
        app_conv_writer_input_data_V_len_write,
        app_conv_writer_input_data_V_eop_din,
        app_conv_writer_input_data_V_eop_full_n,
        app_conv_writer_input_data_V_eop_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
input   reset_app_conv_combine_l2_0_V_dout;
input   reset_app_conv_combine_l2_0_V_empty_n;
output   reset_app_conv_combine_l2_0_V_read;
input  [255:0] app_conv_combine_l2_input_data_0_V_data_V_dout;
input   app_conv_combine_l2_input_data_0_V_data_V_empty_n;
output   app_conv_combine_l2_input_data_0_V_data_V_read;
input   app_conv_combine_l2_input_data_0_V_eop_dout;
input   app_conv_combine_l2_input_data_0_V_eop_empty_n;
output   app_conv_combine_l2_input_data_0_V_eop_read;
input  [255:0] app_conv_combine_l2_input_data_1_V_data_V_dout;
input   app_conv_combine_l2_input_data_1_V_data_V_empty_n;
output   app_conv_combine_l2_input_data_1_V_data_V_read;
input   app_conv_combine_l2_input_data_1_V_eop_dout;
input   app_conv_combine_l2_input_data_1_V_eop_empty_n;
output   app_conv_combine_l2_input_data_1_V_eop_read;
output  [511:0] app_conv_writer_input_data_V_data_V_din;
input   app_conv_writer_input_data_V_data_V_full_n;
output   app_conv_writer_input_data_V_data_V_write;
output  [15:0] app_conv_writer_input_data_V_len_din;
input   app_conv_writer_input_data_V_len_full_n;
output   app_conv_writer_input_data_V_len_write;
output   app_conv_writer_input_data_V_eop_din;
input   app_conv_writer_input_data_V_eop_full_n;
output   app_conv_writer_input_data_V_eop_write;

reg ap_idle;
reg reset_app_conv_combine_l2_0_V_read;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    app_conv_writer_input_data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] reset_reg_228;
reg   [0:0] empty_n_reg_609;
reg   [0:0] data_0_ready_reg_216;
reg   [0:0] data_1_ready_reg_204;
reg   [0:0] empty_n_3_reg_614;
reg   [0:0] empty_n_4_reg_632;
reg    app_conv_writer_input_data_V_len_blk_n;
reg    app_conv_writer_input_data_V_eop_blk_n;
reg   [0:0] input_data_1_1_reg_240;
reg   [255:0] input_data_1_reg_251;
reg   [0:0] input_data_0_1_reg_262;
reg   [255:0] input_data_0_reg_273;
wire   [0:0] empty_n_fu_517_p1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    app_conv_writer_input_data_V_len1_status;
reg    ap_predicate_op56_write_state3;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] ap_phi_mux_reset_phi_fu_232_p4;
wire   [0:0] empty_n_3_fu_521_p1;
reg   [0:0] ap_phi_mux_data_0_ready_phi_fu_220_p4;
reg   [255:0] tmp_data_V_1_reg_620;
reg   [0:0] tmp_eop_1_reg_626;
reg   [0:0] ap_phi_mux_data_1_ready_phi_fu_208_p4;
reg   [255:0] tmp_data_V_2_reg_637;
reg   [0:0] tmp_eop_2_reg_643;
reg    ap_enable_reg_pp0_iter0;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_data_1_ready_be_phi_fu_478_p4;
reg   [0:0] ap_phi_mux_data_0_ready_be_phi_fu_491_p4;
reg   [0:0] ap_phi_mux_reset_be_phi_fu_504_p4;
reg   [0:0] ap_phi_mux_input_data_1_1_be_phi_fu_426_p4;
reg   [255:0] ap_phi_mux_input_data_1_be_phi_fu_439_p4;
reg   [0:0] ap_phi_mux_input_data_0_1_be_phi_fu_452_p4;
reg   [255:0] ap_phi_mux_input_data_0_be_phi_fu_465_p4;
reg   [0:0] ap_phi_mux_input_data_0_1_1_phi_fu_287_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_0_1_1_reg_284;
reg   [255:0] ap_phi_mux_input_data_0_0_1_phi_fu_297_p4;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_0_0_1_reg_294;
reg   [0:0] ap_phi_mux_data_0_ready_1_phi_fu_307_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_data_0_ready_1_reg_304;
reg   [0:0] ap_phi_mux_input_data_1_1_1_phi_fu_317_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_1_1_1_reg_314;
reg   [255:0] ap_phi_mux_input_data_1_0_1_phi_fu_327_p4;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_1_0_1_reg_324;
reg   [0:0] ap_phi_mux_input_data_1_1_2_phi_fu_337_p6;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_1_1_2_reg_334;
reg   [255:0] ap_phi_mux_input_data_1_0_2_phi_fu_350_p6;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_1_0_2_reg_347;
reg   [0:0] ap_phi_mux_input_data_0_1_2_phi_fu_363_p6;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_0_1_2_reg_360;
reg   [255:0] ap_phi_mux_input_data_0_0_2_phi_fu_376_p6;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_0_0_2_reg_373;
reg   [0:0] ap_phi_mux_data_1_ready_1_phi_fu_389_p6;
wire   [0:0] ap_phi_reg_pp0_iter1_data_1_ready_1_reg_386;
reg   [0:0] ap_phi_mux_data_0_ready_2_phi_fu_402_p6;
wire   [0:0] ap_phi_reg_pp0_iter1_data_0_ready_2_reg_399;
wire   [0:0] ap_phi_reg_pp0_iter0_reset_1_reg_412;
reg   [0:0] ap_phi_reg_pp0_iter1_reset_1_reg_412;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_1_1_be_reg_422;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_1_be_reg_435;
wire   [0:0] ap_phi_reg_pp0_iter1_input_data_0_1_be_reg_448;
wire   [255:0] ap_phi_reg_pp0_iter1_input_data_0_be_reg_461;
wire   [0:0] ap_phi_reg_pp0_iter1_data_1_ready_be_reg_474;
wire   [0:0] ap_phi_reg_pp0_iter1_data_0_ready_be_reg_487;
wire   [0:0] p_reset_1_fu_582_p2;
wire   [0:0] ap_phi_reg_pp0_iter1_reset_be_reg_500;
reg    app_conv_combine_l2_input_data_0_V_eop0_update;
wire   [0:0] empty_n_1_nbread_fu_174_p3_0;
reg    app_conv_combine_l2_input_data_1_V_eop0_update;
wire   [0:0] empty_n_2_nbread_fu_182_p3_0;
reg    app_conv_writer_input_data_V_len1_update;
reg    ap_block_pp0_stage0_01001;
reg   [31:0] reset_cnt_fu_164;
wire   [31:0] p_s_fu_589_p3;
wire   [31:0] reset_cnt_1_fu_564_p2;
wire   [0:0] tmp_4_fu_570_p2;
wire   [0:0] not_s_fu_576_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_278;
reg    ap_condition_91;
reg    ap_condition_244;
reg    ap_condition_250;
reg    ap_condition_67;
reg    ap_condition_85;
reg    ap_condition_229;
reg    ap_condition_270;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_270)) begin
        if (((empty_n_fu_517_p1 == 1'd1) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_reset_1_reg_412 <= reset_app_conv_combine_l2_0_V_empty_n;
        end else if ((ap_phi_mux_reset_phi_fu_232_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_reset_1_reg_412 <= ap_phi_mux_reset_phi_fu_232_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_reset_1_reg_412 <= ap_phi_reg_pp0_iter0_reset_1_reg_412;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_0_ready_reg_216 <= ap_phi_mux_data_0_ready_be_phi_fu_491_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_0_ready_reg_216 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_1_ready_reg_204 <= ap_phi_mux_data_1_ready_be_phi_fu_478_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_1_ready_reg_204 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1)))) begin
        reset_cnt_fu_164 <= p_s_fu_589_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_cnt_fu_164 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reset_reg_228 <= ap_phi_mux_reset_be_phi_fu_504_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reset_reg_228 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_data_0_ready_phi_fu_220_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_3_reg_614 <= empty_n_1_nbread_fu_174_p3_0;
        tmp_data_V_1_reg_620 <= app_conv_combine_l2_input_data_0_V_data_V_dout;
        tmp_eop_1_reg_626 <= app_conv_combine_l2_input_data_0_V_eop_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (((empty_n_3_fu_521_p1 == 1'd1) & (ap_phi_mux_data_1_ready_phi_fu_208_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0)) | ((ap_phi_mux_data_0_ready_phi_fu_220_p4 == 1'd1) & (ap_phi_mux_data_1_ready_phi_fu_208_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0))))) begin
        empty_n_4_reg_632 <= empty_n_2_nbread_fu_182_p3_0;
        tmp_data_V_2_reg_637 <= app_conv_combine_l2_input_data_1_V_data_V_dout;
        tmp_eop_2_reg_643 <= app_conv_combine_l2_input_data_1_V_eop_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_reg_609 <= reset_app_conv_combine_l2_0_V_empty_n;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_data_0_1_reg_262 <= ap_phi_mux_input_data_0_1_be_phi_fu_452_p4;
        input_data_0_reg_273 <= ap_phi_mux_input_data_0_be_phi_fu_465_p4;
        input_data_1_1_reg_240 <= ap_phi_mux_input_data_1_1_be_phi_fu_426_p4;
        input_data_1_reg_251 <= ap_phi_mux_input_data_1_be_phi_fu_439_p4;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_3_reg_614 == 1'd1) & (data_0_ready_reg_216 == 1'd0))) begin
            ap_phi_mux_data_0_ready_1_phi_fu_307_p4 = empty_n_3_reg_614;
        end else if ((data_0_ready_reg_216 == 1'd1)) begin
            ap_phi_mux_data_0_ready_1_phi_fu_307_p4 = data_0_ready_reg_216;
        end else begin
            ap_phi_mux_data_0_ready_1_phi_fu_307_p4 = ap_phi_reg_pp0_iter1_data_0_ready_1_reg_304;
        end
    end else begin
        ap_phi_mux_data_0_ready_1_phi_fu_307_p4 = ap_phi_reg_pp0_iter1_data_0_ready_1_reg_304;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_250)) begin
            ap_phi_mux_data_0_ready_2_phi_fu_402_p6 = empty_n_3_reg_614;
        end else if ((1'b1 == ap_condition_244)) begin
            ap_phi_mux_data_0_ready_2_phi_fu_402_p6 = ap_phi_mux_data_0_ready_1_phi_fu_307_p4;
        end else if ((1'b1 == ap_condition_91)) begin
            ap_phi_mux_data_0_ready_2_phi_fu_402_p6 = 1'd0;
        end else begin
            ap_phi_mux_data_0_ready_2_phi_fu_402_p6 = ap_phi_reg_pp0_iter1_data_0_ready_2_reg_399;
        end
    end else begin
        ap_phi_mux_data_0_ready_2_phi_fu_402_p6 = ap_phi_reg_pp0_iter1_data_0_ready_2_reg_399;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))) begin
            ap_phi_mux_data_0_ready_be_phi_fu_491_p4 = ap_phi_mux_data_0_ready_2_phi_fu_402_p6;
        end else if (((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1))) begin
            ap_phi_mux_data_0_ready_be_phi_fu_491_p4 = 1'd0;
        end else begin
            ap_phi_mux_data_0_ready_be_phi_fu_491_p4 = ap_phi_reg_pp0_iter1_data_0_ready_be_reg_487;
        end
    end else begin
        ap_phi_mux_data_0_ready_be_phi_fu_491_p4 = ap_phi_reg_pp0_iter1_data_0_ready_be_reg_487;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_data_0_ready_phi_fu_220_p4 = ap_phi_mux_data_0_ready_be_phi_fu_491_p4;
    end else begin
        ap_phi_mux_data_0_ready_phi_fu_220_p4 = data_0_ready_reg_216;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_250)) begin
            ap_phi_mux_data_1_ready_1_phi_fu_389_p6 = data_1_ready_reg_204;
        end else if ((1'b1 == ap_condition_244)) begin
            ap_phi_mux_data_1_ready_1_phi_fu_389_p6 = empty_n_4_reg_632;
        end else if ((1'b1 == ap_condition_91)) begin
            ap_phi_mux_data_1_ready_1_phi_fu_389_p6 = 1'd0;
        end else begin
            ap_phi_mux_data_1_ready_1_phi_fu_389_p6 = ap_phi_reg_pp0_iter1_data_1_ready_1_reg_386;
        end
    end else begin
        ap_phi_mux_data_1_ready_1_phi_fu_389_p6 = ap_phi_reg_pp0_iter1_data_1_ready_1_reg_386;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))) begin
            ap_phi_mux_data_1_ready_be_phi_fu_478_p4 = ap_phi_mux_data_1_ready_1_phi_fu_389_p6;
        end else if (((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1))) begin
            ap_phi_mux_data_1_ready_be_phi_fu_478_p4 = 1'd0;
        end else begin
            ap_phi_mux_data_1_ready_be_phi_fu_478_p4 = ap_phi_reg_pp0_iter1_data_1_ready_be_reg_474;
        end
    end else begin
        ap_phi_mux_data_1_ready_be_phi_fu_478_p4 = ap_phi_reg_pp0_iter1_data_1_ready_be_reg_474;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_data_1_ready_phi_fu_208_p4 = ap_phi_mux_data_1_ready_be_phi_fu_478_p4;
    end else begin
        ap_phi_mux_data_1_ready_phi_fu_208_p4 = data_1_ready_reg_204;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_3_reg_614 == 1'd1) & (data_0_ready_reg_216 == 1'd0))) begin
            ap_phi_mux_input_data_0_0_1_phi_fu_297_p4 = tmp_data_V_1_reg_620;
        end else if ((data_0_ready_reg_216 == 1'd1)) begin
            ap_phi_mux_input_data_0_0_1_phi_fu_297_p4 = input_data_0_reg_273;
        end else begin
            ap_phi_mux_input_data_0_0_1_phi_fu_297_p4 = ap_phi_reg_pp0_iter1_input_data_0_0_1_reg_294;
        end
    end else begin
        ap_phi_mux_input_data_0_0_1_phi_fu_297_p4 = ap_phi_reg_pp0_iter1_input_data_0_0_1_reg_294;
    end
end

always @ (*) begin
    if (((empty_n_3_reg_614 == 1'd0) & (data_0_ready_reg_216 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_input_data_0_0_2_phi_fu_376_p6 = tmp_data_V_1_reg_620;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_reg_614 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_0_ready_reg_216 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)))))) begin
        ap_phi_mux_input_data_0_0_2_phi_fu_376_p6 = ap_phi_mux_input_data_0_0_1_phi_fu_297_p4;
    end else begin
        ap_phi_mux_input_data_0_0_2_phi_fu_376_p6 = ap_phi_reg_pp0_iter1_input_data_0_0_2_reg_373;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_3_reg_614 == 1'd1) & (data_0_ready_reg_216 == 1'd0))) begin
            ap_phi_mux_input_data_0_1_1_phi_fu_287_p4 = tmp_eop_1_reg_626;
        end else if ((data_0_ready_reg_216 == 1'd1)) begin
            ap_phi_mux_input_data_0_1_1_phi_fu_287_p4 = input_data_0_1_reg_262;
        end else begin
            ap_phi_mux_input_data_0_1_1_phi_fu_287_p4 = ap_phi_reg_pp0_iter1_input_data_0_1_1_reg_284;
        end
    end else begin
        ap_phi_mux_input_data_0_1_1_phi_fu_287_p4 = ap_phi_reg_pp0_iter1_input_data_0_1_1_reg_284;
    end
end

always @ (*) begin
    if (((empty_n_3_reg_614 == 1'd0) & (data_0_ready_reg_216 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_input_data_0_1_2_phi_fu_363_p6 = tmp_eop_1_reg_626;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)))) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_3_reg_614 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_0_ready_reg_216 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)))))) begin
        ap_phi_mux_input_data_0_1_2_phi_fu_363_p6 = ap_phi_mux_input_data_0_1_1_phi_fu_287_p4;
    end else begin
        ap_phi_mux_input_data_0_1_2_phi_fu_363_p6 = ap_phi_reg_pp0_iter1_input_data_0_1_2_reg_360;
    end
end

always @ (*) begin
    if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_input_data_0_1_be_phi_fu_452_p4 = ap_phi_mux_input_data_0_1_2_phi_fu_363_p6;
    end else begin
        ap_phi_mux_input_data_0_1_be_phi_fu_452_p4 = ap_phi_reg_pp0_iter1_input_data_0_1_be_reg_448;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))) begin
            ap_phi_mux_input_data_0_be_phi_fu_465_p4 = ap_phi_mux_input_data_0_0_2_phi_fu_376_p6;
        end else if (((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1))) begin
            ap_phi_mux_input_data_0_be_phi_fu_465_p4 = 256'd0;
        end else begin
            ap_phi_mux_input_data_0_be_phi_fu_465_p4 = ap_phi_reg_pp0_iter1_input_data_0_be_reg_461;
        end
    end else begin
        ap_phi_mux_input_data_0_be_phi_fu_465_p4 = ap_phi_reg_pp0_iter1_input_data_0_be_reg_461;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_229)) begin
            ap_phi_mux_input_data_1_0_1_phi_fu_327_p4 = tmp_data_V_2_reg_637;
        end else if ((1'b1 == ap_condition_85)) begin
            ap_phi_mux_input_data_1_0_1_phi_fu_327_p4 = input_data_1_reg_251;
        end else begin
            ap_phi_mux_input_data_1_0_1_phi_fu_327_p4 = ap_phi_reg_pp0_iter1_input_data_1_0_1_reg_324;
        end
    end else begin
        ap_phi_mux_input_data_1_0_1_phi_fu_327_p4 = ap_phi_reg_pp0_iter1_input_data_1_0_1_reg_324;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_250)) begin
            ap_phi_mux_input_data_1_0_2_phi_fu_350_p6 = input_data_1_reg_251;
        end else if ((1'b1 == ap_condition_244)) begin
            ap_phi_mux_input_data_1_0_2_phi_fu_350_p6 = tmp_data_V_2_reg_637;
        end else if ((1'b1 == ap_condition_91)) begin
            ap_phi_mux_input_data_1_0_2_phi_fu_350_p6 = ap_phi_mux_input_data_1_0_1_phi_fu_327_p4;
        end else begin
            ap_phi_mux_input_data_1_0_2_phi_fu_350_p6 = ap_phi_reg_pp0_iter1_input_data_1_0_2_reg_347;
        end
    end else begin
        ap_phi_mux_input_data_1_0_2_phi_fu_350_p6 = ap_phi_reg_pp0_iter1_input_data_1_0_2_reg_347;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_229)) begin
            ap_phi_mux_input_data_1_1_1_phi_fu_317_p4 = tmp_eop_2_reg_643;
        end else if ((1'b1 == ap_condition_85)) begin
            ap_phi_mux_input_data_1_1_1_phi_fu_317_p4 = input_data_1_1_reg_240;
        end else begin
            ap_phi_mux_input_data_1_1_1_phi_fu_317_p4 = ap_phi_reg_pp0_iter1_input_data_1_1_1_reg_314;
        end
    end else begin
        ap_phi_mux_input_data_1_1_1_phi_fu_317_p4 = ap_phi_reg_pp0_iter1_input_data_1_1_1_reg_314;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if ((1'b1 == ap_condition_250)) begin
            ap_phi_mux_input_data_1_1_2_phi_fu_337_p6 = input_data_1_1_reg_240;
        end else if ((1'b1 == ap_condition_244)) begin
            ap_phi_mux_input_data_1_1_2_phi_fu_337_p6 = tmp_eop_2_reg_643;
        end else if ((1'b1 == ap_condition_91)) begin
            ap_phi_mux_input_data_1_1_2_phi_fu_337_p6 = ap_phi_mux_input_data_1_1_1_phi_fu_317_p4;
        end else begin
            ap_phi_mux_input_data_1_1_2_phi_fu_337_p6 = ap_phi_reg_pp0_iter1_input_data_1_1_2_reg_334;
        end
    end else begin
        ap_phi_mux_input_data_1_1_2_phi_fu_337_p6 = ap_phi_reg_pp0_iter1_input_data_1_1_2_reg_334;
    end
end

always @ (*) begin
    if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_input_data_1_1_be_phi_fu_426_p4 = ap_phi_mux_input_data_1_1_2_phi_fu_337_p6;
    end else begin
        ap_phi_mux_input_data_1_1_be_phi_fu_426_p4 = ap_phi_reg_pp0_iter1_input_data_1_1_be_reg_422;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))) begin
            ap_phi_mux_input_data_1_be_phi_fu_439_p4 = ap_phi_mux_input_data_1_0_2_phi_fu_350_p6;
        end else if (((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1))) begin
            ap_phi_mux_input_data_1_be_phi_fu_439_p4 = 256'd0;
        end else begin
            ap_phi_mux_input_data_1_be_phi_fu_439_p4 = ap_phi_reg_pp0_iter1_input_data_1_be_reg_435;
        end
    end else begin
        ap_phi_mux_input_data_1_be_phi_fu_439_p4 = ap_phi_reg_pp0_iter1_input_data_1_be_reg_435;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_67)) begin
        if (((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))) begin
            ap_phi_mux_reset_be_phi_fu_504_p4 = 1'd0;
        end else if (((empty_n_reg_609 == 1'd1) | (reset_reg_228 == 1'd1))) begin
            ap_phi_mux_reset_be_phi_fu_504_p4 = p_reset_1_fu_582_p2;
        end else begin
            ap_phi_mux_reset_be_phi_fu_504_p4 = ap_phi_reg_pp0_iter1_reset_be_reg_500;
        end
    end else begin
        ap_phi_mux_reset_be_phi_fu_504_p4 = ap_phi_reg_pp0_iter1_reset_be_reg_500;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_reset_phi_fu_232_p4 = ap_phi_mux_reset_be_phi_fu_504_p4;
    end else begin
        ap_phi_mux_reset_phi_fu_232_p4 = reset_reg_228;
    end
end

always @ (*) begin
    if (((ap_phi_mux_data_0_ready_phi_fu_220_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((app_conv_combine_l2_input_data_0_V_eop_empty_n & app_conv_combine_l2_input_data_0_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        app_conv_combine_l2_input_data_0_V_eop0_update = 1'b1;
    end else begin
        app_conv_combine_l2_input_data_0_V_eop0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ((app_conv_combine_l2_input_data_1_V_eop_empty_n & app_conv_combine_l2_input_data_1_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (((empty_n_3_fu_521_p1 == 1'd1) & (ap_phi_mux_data_1_ready_phi_fu_208_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0)) | ((ap_phi_mux_data_0_ready_phi_fu_220_p4 == 1'd1) & (ap_phi_mux_data_1_ready_phi_fu_208_p4 == 1'd0) & (ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (empty_n_fu_517_p1 == 1'd0))))) begin
        app_conv_combine_l2_input_data_1_V_eop0_update = 1'b1;
    end else begin
        app_conv_combine_l2_input_data_1_V_eop0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))))) begin
        app_conv_writer_input_data_V_data_V_blk_n = app_conv_writer_input_data_V_data_V_full_n;
    end else begin
        app_conv_writer_input_data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))))) begin
        app_conv_writer_input_data_V_eop_blk_n = app_conv_writer_input_data_V_eop_full_n;
    end else begin
        app_conv_writer_input_data_V_eop_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op56_write_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        app_conv_writer_input_data_V_len1_update = 1'b1;
    end else begin
        app_conv_writer_input_data_V_len1_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0))))) begin
        app_conv_writer_input_data_V_len_blk_n = app_conv_writer_input_data_V_len_full_n;
    end else begin
        app_conv_writer_input_data_V_len_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_phi_mux_reset_phi_fu_232_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (reset_app_conv_combine_l2_0_V_empty_n == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reset_app_conv_combine_l2_0_V_read = 1'b1;
    end else begin
        reset_app_conv_combine_l2_0_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((app_conv_writer_input_data_V_len1_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op56_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((app_conv_writer_input_data_V_len1_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op56_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((app_conv_writer_input_data_V_len1_status == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op56_write_state3 == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((app_conv_writer_input_data_V_len1_status == 1'b0) & (ap_predicate_op56_write_state3 == 1'b1));
end

always @ (*) begin
    ap_condition_229 = (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)));
end

always @ (*) begin
    ap_condition_244 = (((empty_n_3_reg_614 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_0_ready_reg_216 == 1'd1) & (empty_n_4_reg_632 == 1'd0) & (data_1_ready_reg_204 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)));
end

always @ (*) begin
    ap_condition_250 = ((empty_n_3_reg_614 == 1'd0) & (data_0_ready_reg_216 == 1'd0) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0));
end

always @ (*) begin
    ap_condition_270 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_278 = ((empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_67 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_85 = (((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)));
end

always @ (*) begin
    ap_condition_91 = (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_reset_1_reg_412 = 'bx;

assign ap_phi_reg_pp0_iter1_data_0_ready_1_reg_304 = 'bx;

assign ap_phi_reg_pp0_iter1_data_0_ready_2_reg_399 = 'bx;

assign ap_phi_reg_pp0_iter1_data_0_ready_be_reg_487 = 'bx;

assign ap_phi_reg_pp0_iter1_data_1_ready_1_reg_386 = 'bx;

assign ap_phi_reg_pp0_iter1_data_1_ready_be_reg_474 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_0_1_reg_294 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_0_2_reg_373 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_1_1_reg_284 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_1_2_reg_360 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_1_be_reg_448 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_0_be_reg_461 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_0_1_reg_324 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_0_2_reg_347 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_1_1_reg_314 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_1_2_reg_334 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_1_be_reg_422 = 'bx;

assign ap_phi_reg_pp0_iter1_input_data_1_be_reg_435 = 'bx;

assign ap_phi_reg_pp0_iter1_reset_be_reg_500 = 'bx;

always @ (*) begin
    ap_predicate_op56_write_state3 = (((empty_n_4_reg_632 == 1'd1) & (empty_n_3_reg_614 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_3_reg_614 == 1'd1) & (data_1_ready_reg_204 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((empty_n_4_reg_632 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)) | ((data_1_ready_reg_204 == 1'd1) & (data_0_ready_reg_216 == 1'd1) & (empty_n_reg_609 == 1'd0) & (reset_reg_228 == 1'd0)));
end

assign ap_ready = 1'b0;

assign app_conv_combine_l2_input_data_0_V_data_V_read = app_conv_combine_l2_input_data_0_V_eop0_update;

assign app_conv_combine_l2_input_data_0_V_eop_read = app_conv_combine_l2_input_data_0_V_eop0_update;

assign app_conv_combine_l2_input_data_1_V_data_V_read = app_conv_combine_l2_input_data_1_V_eop0_update;

assign app_conv_combine_l2_input_data_1_V_eop_read = app_conv_combine_l2_input_data_1_V_eop0_update;

assign app_conv_writer_input_data_V_data_V_din = {{ap_phi_mux_input_data_1_0_1_phi_fu_327_p4}, {ap_phi_mux_input_data_0_0_1_phi_fu_297_p4}};

assign app_conv_writer_input_data_V_data_V_write = app_conv_writer_input_data_V_len1_update;

assign app_conv_writer_input_data_V_eop_din = (ap_phi_mux_input_data_1_1_1_phi_fu_317_p4 | ap_phi_mux_input_data_0_1_1_phi_fu_287_p4);

assign app_conv_writer_input_data_V_eop_write = app_conv_writer_input_data_V_len1_update;

assign app_conv_writer_input_data_V_len1_status = (app_conv_writer_input_data_V_len_full_n & app_conv_writer_input_data_V_eop_full_n & app_conv_writer_input_data_V_data_V_full_n);

assign app_conv_writer_input_data_V_len_din = 16'd0;

assign app_conv_writer_input_data_V_len_write = app_conv_writer_input_data_V_len1_update;

assign empty_n_1_nbread_fu_174_p3_0 = (app_conv_combine_l2_input_data_0_V_eop_empty_n & app_conv_combine_l2_input_data_0_V_data_V_empty_n);

assign empty_n_2_nbread_fu_182_p3_0 = (app_conv_combine_l2_input_data_1_V_eop_empty_n & app_conv_combine_l2_input_data_1_V_data_V_empty_n);

assign empty_n_3_fu_521_p1 = empty_n_1_nbread_fu_174_p3_0;

assign empty_n_fu_517_p1 = reset_app_conv_combine_l2_0_V_empty_n;

assign not_s_fu_576_p2 = (tmp_4_fu_570_p2 ^ 1'd1);

assign p_reset_1_fu_582_p2 = (not_s_fu_576_p2 & ap_phi_reg_pp0_iter1_reset_1_reg_412);

assign p_s_fu_589_p3 = ((tmp_4_fu_570_p2[0:0] === 1'b1) ? 32'd0 : reset_cnt_1_fu_564_p2);

assign reset_cnt_1_fu_564_p2 = (reset_cnt_fu_164 + 32'd1);

assign tmp_4_fu_570_p2 = ((reset_cnt_1_fu_564_p2 == 32'd2048) ? 1'b1 : 1'b0);

endmodule //app_conv_combine_l2_0
